[
{
 "methods": [],
 "containingPackage": {
  "firstSentenceTags": [],
  "name": "com.surfapi.proc",
  "metaType": "package"
 },
 "wildcardType": null,
 "superclassType": {
  "typeName": "IOException",
  "dimension": "",
  "simpleTypeName": "IOException",
  "qualifiedTypeName": "java.io.IOException",
  "wildcardType": null,
  "toString": "java.io.IOException",
  "parameterizedType": null
 },
 "commentText": "Contains info related to the javadoc process that failed.",
 "seeTags": [],
 "name": "ProcessException",
 "qualifiedTypeName": "com.surfapi.proc.ProcessException",
 "interfaces": [],
 "modifiers": "public",
 "containingClass": null,
 "parameterizedType": null,
 "fields": [],
 "tags": [],
 "typeParameters": [],
 "simpleTypeName": "ProcessException",
 "qualifiedName": "com.surfapi.proc.ProcessException",
 "innerClasses": [],
 "constructors": [
  {
   "firstSentenceTags": [
    {
     "text": "CTOR.",
     "name": "Text",
     "kind": "Text"
    }
   ],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.proc.ProcessException",
   "name": "ProcessException",
   "flatSignature": "(ProcessHelper)",
   "parameters": [
    {
     "name": "processHelper",
     "type": {
      "typeName": "ProcessHelper",
      "dimension": "",
      "simpleTypeName": "ProcessHelper",
      "qualifiedTypeName": "com.surfapi.proc.ProcessHelper",
      "wildcardType": null,
      "toString": "com.surfapi.proc.ProcessHelper",
      "parameterizedType": {
       "typeArguments": []
      }
     }
    }
   ],
   "modifiers": "public",
   "metaType": "constructor",
   "thrownExceptionTypes": []
  },
  {
   "firstSentenceTags": [
    {
     "text": "CTOR.",
     "name": "Text",
     "kind": "Text"
    }
   ],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.proc.ProcessException",
   "name": "ProcessException",
   "flatSignature": "(Process, String, List<String>, List<String>)",
   "parameters": [
    {
     "name": "p",
     "type": {
      "typeName": "Process",
      "dimension": "",
      "simpleTypeName": "Process",
      "qualifiedTypeName": "java.lang.Process",
      "wildcardType": null,
      "toString": "java.lang.Process",
      "parameterizedType": null
     }
    },
    {
     "name": "description",
     "type": {
      "typeName": "String",
      "dimension": "",
      "simpleTypeName": "String",
      "qualifiedTypeName": "java.lang.String",
      "wildcardType": null,
      "toString": "java.lang.String",
      "parameterizedType": null
     }
    },
    {
     "name": "stdout",
     "type": {
      "typeName": "List",
      "dimension": "",
      "simpleTypeName": "List",
      "qualifiedTypeName": "java.util.List",
      "wildcardType": null,
      "toString": "java.util.List<java.lang.String>",
      "parameterizedType": {
       "typeArguments": [
        {
         "typeName": "String",
         "dimension": "",
         "simpleTypeName": "String",
         "qualifiedTypeName": "java.lang.String",
         "wildcardType": null,
         "toString": "java.lang.String",
         "parameterizedType": null
        }
       ]
      }
     }
    },
    {
     "name": "stderr",
     "type": {
      "typeName": "List",
      "dimension": "",
      "simpleTypeName": "List",
      "qualifiedTypeName": "java.util.List",
      "wildcardType": null,
      "toString": "java.util.List<java.lang.String>",
      "parameterizedType": {
       "typeArguments": [
        {
         "typeName": "String",
         "dimension": "",
         "simpleTypeName": "String",
         "qualifiedTypeName": "java.lang.String",
         "wildcardType": null,
         "toString": "java.lang.String",
         "parameterizedType": null
        }
       ]
      }
     }
    }
   ],
   "modifiers": "public",
   "metaType": "constructor",
   "thrownExceptionTypes": []
  }
 ],
 "metaType": "class",
 "typeName": "ProcessException",
 "interfaceTypes": [],
 "firstSentenceTags": [
  {
   "text": "Contains info related to the javadoc process that failed.",
   "name": "Text",
   "kind": "Text"
  }
 ],
 "dimension": "",
 "typeParamTags": [],
 "superclass": {
  "firstSentenceTags": [],
  "qualifiedName": "java.io.IOException",
  "name": "IOException",
  "modifiers": "public",
  "metaType": "class"
 },
 "enumConstants": [],
 "modifierSpecifier": 1,
 "toString": "com.surfapi.proc.ProcessException",
 "annotations": [],
 "rawCommentText": " Contains info related to the javadoc process that failed.\n",
 "inlineTags": [
  {
   "text": "Contains info related to the javadoc process that failed.",
   "name": "Text",
   "kind": "Text"
  }
 ]
}
{
 "tags": [],
 "throwsTags": [],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.proc.ProcessException",
 "paramTags": [],
 "containingPackage": {
  "firstSentenceTags": [],
  "name": "com.surfapi.proc",
  "metaType": "package"
 },
 "isSynthetic": false,
 "metaType": "constructor",
 "thrownExceptionTypes": [],
 "commentText": "CTOR.",
 "firstSentenceTags": [
  {
   "text": "CTOR.",
   "name": "Text",
   "kind": "Text"
  }
 ],
 "typeParamTags": [],
 "seeTags": [],
 "name": "ProcessException",
 "modifierSpecifier": 1,
 "parameters": [
  {
   "typeName": "com.surfapi.proc.ProcessHelper",
   "name": "processHelper",
   "toString": "com.surfapi.proc.ProcessHelper processHelper",
   "annotations": [],
   "type": {
    "typeName": "ProcessHelper",
    "dimension": "",
    "simpleTypeName": "ProcessHelper",
    "qualifiedTypeName": "com.surfapi.proc.ProcessHelper",
    "wildcardType": null,
    "toString": "com.surfapi.proc.ProcessHelper",
    "parameterizedType": {
     "typeArguments": []
    }
   }
  }
 ],
 "flatSignature": "(ProcessHelper)",
 "annotations": [],
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "Contains info related to the javadoc process that failed.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.proc.ProcessException",
  "name": "ProcessException",
  "modifiers": "public",
  "metaType": "class"
 },
 "modifiers": "public",
 "thrownExceptions": [],
 "rawCommentText": " CTOR.\n",
 "signature": "(com.surfapi.proc.ProcessHelper)",
 "inlineTags": [
  {
   "text": "CTOR.",
   "name": "Text",
   "kind": "Text"
  }
 ]
}
{
 "tags": [],
 "throwsTags": [],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.proc.ProcessException",
 "paramTags": [],
 "containingPackage": {
  "firstSentenceTags": [],
  "name": "com.surfapi.proc",
  "metaType": "package"
 },
 "isSynthetic": false,
 "metaType": "constructor",
 "thrownExceptionTypes": [],
 "commentText": "CTOR.",
 "firstSentenceTags": [
  {
   "text": "CTOR.",
   "name": "Text",
   "kind": "Text"
  }
 ],
 "typeParamTags": [],
 "seeTags": [],
 "name": "ProcessException",
 "modifierSpecifier": 1,
 "parameters": [
  {
   "typeName": "Process",
   "name": "p",
   "toString": "Process p",
   "annotations": [],
   "type": {
    "typeName": "Process",
    "dimension": "",
    "simpleTypeName": "Process",
    "qualifiedTypeName": "java.lang.Process",
    "wildcardType": null,
    "toString": "java.lang.Process",
    "parameterizedType": null
   }
  },
  {
   "typeName": "String",
   "name": "description",
   "toString": "String description",
   "annotations": [],
   "type": {
    "typeName": "String",
    "dimension": "",
    "simpleTypeName": "String",
    "qualifiedTypeName": "java.lang.String",
    "wildcardType": null,
    "toString": "java.lang.String",
    "parameterizedType": null
   }
  },
  {
   "typeName": "java.util.List<java.lang.String>",
   "name": "stdout",
   "toString": "java.util.List<java.lang.String> stdout",
   "annotations": [],
   "type": {
    "typeName": "List",
    "dimension": "",
    "simpleTypeName": "List",
    "qualifiedTypeName": "java.util.List",
    "wildcardType": null,
    "toString": "java.util.List<java.lang.String>",
    "parameterizedType": {
     "typeArguments": [
      {
       "typeName": "String",
       "dimension": "",
       "simpleTypeName": "String",
       "qualifiedTypeName": "java.lang.String",
       "wildcardType": null,
       "toString": "java.lang.String",
       "parameterizedType": null
      }
     ]
    }
   }
  },
  {
   "typeName": "java.util.List<java.lang.String>",
   "name": "stderr",
   "toString": "java.util.List<java.lang.String> stderr",
   "annotations": [],
   "type": {
    "typeName": "List",
    "dimension": "",
    "simpleTypeName": "List",
    "qualifiedTypeName": "java.util.List",
    "wildcardType": null,
    "toString": "java.util.List<java.lang.String>",
    "parameterizedType": {
     "typeArguments": [
      {
       "typeName": "String",
       "dimension": "",
       "simpleTypeName": "String",
       "qualifiedTypeName": "java.lang.String",
       "wildcardType": null,
       "toString": "java.lang.String",
       "parameterizedType": null
      }
     ]
    }
   }
  }
 ],
 "flatSignature": "(Process, String, List<String>, List<String>)",
 "annotations": [],
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "Contains info related to the javadoc process that failed.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.proc.ProcessException",
  "name": "ProcessException",
  "modifiers": "public",
  "metaType": "class"
 },
 "modifiers": "public",
 "thrownExceptions": [],
 "rawCommentText": " CTOR.\n",
 "signature": "(java.lang.Process, java.lang.String, java.util.List<java.lang.String>, java.util.List<java.lang.String>)",
 "inlineTags": [
  {
   "text": "CTOR.",
   "name": "Text",
   "kind": "Text"
  }
 ]
}
{
 "methods": [
  {
   "firstSentenceTags": [
    {
     "text": "Add an output observer.",
     "name": "Text",
     "kind": "Text"
    }
   ],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.proc.ProcessHelper.addObserver",
   "name": "addObserver",
   "flatSignature": "(ProcessHelper.Stream, Observer)",
   "parameters": [
    {
     "name": "stream",
     "type": {
      "typeName": "ProcessHelper.Stream",
      "dimension": "",
      "simpleTypeName": "Stream",
      "qualifiedTypeName": "com.surfapi.proc.ProcessHelper.Stream",
      "wildcardType": null,
      "toString": "com.surfapi.proc.ProcessHelper.Stream",
      "parameterizedType": null
     }
    },
    {
     "name": "observer",
     "type": {
      "typeName": "Observer",
      "dimension": "",
      "simpleTypeName": "Observer",
      "qualifiedTypeName": "java.util.Observer",
      "wildcardType": null,
      "toString": "java.util.Observer",
      "parameterizedType": null
     }
    }
   ],
   "modifiers": "public",
   "returnType": {
    "typeName": "T",
    "dimension": "",
    "simpleTypeName": "T",
    "qualifiedTypeName": "T",
    "wildcardType": null,
    "toString": "T extends com.surfapi.proc.ProcessHelper",
    "parameterizedType": null
   },
   "metaType": "method",
   "thrownExceptionTypes": []
  },
  {
   "firstSentenceTags": [
    {
     "text": "Set the description",
     "name": "Text",
     "kind": "Text"
    }
   ],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.proc.ProcessHelper.setDescription",
   "name": "setDescription",
   "flatSignature": "(String)",
   "parameters": [
    {
     "name": "description",
     "type": {
      "typeName": "String",
      "dimension": "",
      "simpleTypeName": "String",
      "qualifiedTypeName": "java.lang.String",
      "wildcardType": null,
      "toString": "java.lang.String",
      "parameterizedType": null
     }
    }
   ],
   "modifiers": "public",
   "returnType": {
    "typeName": "T",
    "dimension": "",
    "simpleTypeName": "T",
    "qualifiedTypeName": "T",
    "wildcardType": null,
    "toString": "T extends com.surfapi.proc.ProcessHelper",
    "parameterizedType": null
   },
   "metaType": "method",
   "thrownExceptionTypes": []
  },
  {
   "firstSentenceTags": [],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.proc.ProcessHelper.getDescription",
   "name": "getDescription",
   "flatSignature": "()",
   "parameters": [],
   "modifiers": "public",
   "returnType": {
    "typeName": "String",
    "dimension": "",
    "simpleTypeName": "String",
    "qualifiedTypeName": "java.lang.String",
    "wildcardType": null,
    "toString": "java.lang.String",
    "parameterizedType": null
   },
   "metaType": "method",
   "thrownExceptionTypes": []
  },
  {
   "firstSentenceTags": [
    {
     "text": "Redirect to the given output stream",
     "name": "Text",
     "kind": "Text"
    }
   ],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.proc.ProcessHelper.pipeTo",
   "name": "pipeTo",
   "flatSignature": "(ProcessHelper.Stream, OutputStream)",
   "parameters": [
    {
     "name": "stream",
     "type": {
      "typeName": "ProcessHelper.Stream",
      "dimension": "",
      "simpleTypeName": "Stream",
      "qualifiedTypeName": "com.surfapi.proc.ProcessHelper.Stream",
      "wildcardType": null,
      "toString": "com.surfapi.proc.ProcessHelper.Stream",
      "parameterizedType": null
     }
    },
    {
     "name": "outputStream",
     "type": {
      "typeName": "OutputStream",
      "dimension": "",
      "simpleTypeName": "OutputStream",
      "qualifiedTypeName": "java.io.OutputStream",
      "wildcardType": null,
      "toString": "java.io.OutputStream",
      "parameterizedType": null
     }
    }
   ],
   "modifiers": "public",
   "returnType": {
    "typeName": "T",
    "dimension": "",
    "simpleTypeName": "T",
    "qualifiedTypeName": "T",
    "wildcardType": null,
    "toString": "T extends com.surfapi.proc.ProcessHelper",
    "parameterizedType": null
   },
   "metaType": "method",
   "thrownExceptionTypes": []
  },
  {
   "firstSentenceTags": [],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.proc.ProcessHelper.getExecutorService",
   "name": "getExecutorService",
   "flatSignature": "()",
   "parameters": [],
   "modifiers": "protected",
   "returnType": {
    "typeName": "ExecutorService",
    "dimension": "",
    "simpleTypeName": "ExecutorService",
    "qualifiedTypeName": "java.util.concurrent.ExecutorService",
    "wildcardType": null,
    "toString": "java.util.concurrent.ExecutorService",
    "parameterizedType": null
   },
   "metaType": "method",
   "thrownExceptionTypes": []
  },
  {
   "firstSentenceTags": [],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.proc.ProcessHelper.shutdownExecutor",
   "name": "shutdownExecutor",
   "flatSignature": "()",
   "parameters": [],
   "modifiers": "protected",
   "returnType": {
    "typeName": "T",
    "dimension": "",
    "simpleTypeName": "T",
    "qualifiedTypeName": "T",
    "wildcardType": null,
    "toString": "T extends com.surfapi.proc.ProcessHelper",
    "parameterizedType": null
   },
   "metaType": "method",
   "thrownExceptionTypes": []
  },
  {
   "firstSentenceTags": [
    {
     "text": "Spawn threads (via the ExecutorService) to read stdout\/stderr of the process.",
     "name": "Text",
     "kind": "Text"
    }
   ],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.proc.ProcessHelper.spawnStreamReaders",
   "name": "spawnStreamReaders",
   "flatSignature": "()",
   "parameters": [],
   "modifiers": "public",
   "returnType": {
    "typeName": "T",
    "dimension": "",
    "simpleTypeName": "T",
    "qualifiedTypeName": "T",
    "wildcardType": null,
    "toString": "T extends com.surfapi.proc.ProcessHelper",
    "parameterizedType": null
   },
   "metaType": "method",
   "thrownExceptionTypes": []
  },
  {
   "firstSentenceTags": [
    {
     "text": "Start separate threads for reading stdout\/stderr of the Process, \n then call process.waitFor.",
     "name": "Text",
     "kind": "Text"
    }
   ],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.proc.ProcessHelper.waitFor",
   "name": "waitFor",
   "flatSignature": "()",
   "parameters": [],
   "modifiers": "public",
   "returnType": {
    "typeName": "T",
    "dimension": "",
    "simpleTypeName": "T",
    "qualifiedTypeName": "T",
    "wildcardType": null,
    "toString": "T extends com.surfapi.proc.ProcessHelper",
    "parameterizedType": null
   },
   "metaType": "method",
   "thrownExceptionTypes": [
    {
     "typeName": "InterruptedException",
     "dimension": "",
     "simpleTypeName": "InterruptedException",
     "qualifiedTypeName": "java.lang.InterruptedException",
     "wildcardType": null,
     "toString": "java.lang.InterruptedException",
     "parameterizedType": null
    }
   ]
  },
  {
   "firstSentenceTags": [
    {
     "text": "Destroy the process (via process.destroy()), then wait for it to terminate.",
     "name": "Text",
     "kind": "Text"
    }
   ],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.proc.ProcessHelper.destroyAndWaitFor",
   "name": "destroyAndWaitFor",
   "flatSignature": "()",
   "parameters": [],
   "modifiers": "public",
   "returnType": {
    "typeName": "T",
    "dimension": "",
    "simpleTypeName": "T",
    "qualifiedTypeName": "T",
    "wildcardType": null,
    "toString": "T extends com.surfapi.proc.ProcessHelper",
    "parameterizedType": null
   },
   "metaType": "method",
   "thrownExceptionTypes": [
    {
     "typeName": "InterruptedException",
     "dimension": "",
     "simpleTypeName": "InterruptedException",
     "qualifiedTypeName": "java.lang.InterruptedException",
     "wildcardType": null,
     "toString": "java.lang.InterruptedException",
     "parameterizedType": null
    }
   ]
  },
  {
   "firstSentenceTags": [],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.proc.ProcessHelper.getStdout",
   "name": "getStdout",
   "flatSignature": "()",
   "parameters": [],
   "modifiers": "public",
   "returnType": {
    "typeName": "List",
    "dimension": "",
    "simpleTypeName": "List",
    "qualifiedTypeName": "java.util.List",
    "wildcardType": null,
    "toString": "java.util.List<java.lang.String>",
    "parameterizedType": {
     "typeArguments": [
      {
       "typeName": "String",
       "dimension": "",
       "simpleTypeName": "String",
       "qualifiedTypeName": "java.lang.String",
       "wildcardType": null,
       "toString": "java.lang.String",
       "parameterizedType": null
      }
     ]
    }
   },
   "metaType": "method",
   "thrownExceptionTypes": [
    {
     "typeName": "ExecutionException",
     "dimension": "",
     "simpleTypeName": "ExecutionException",
     "qualifiedTypeName": "java.util.concurrent.ExecutionException",
     "wildcardType": null,
     "toString": "java.util.concurrent.ExecutionException",
     "parameterizedType": null
    },
    {
     "typeName": "InterruptedException",
     "dimension": "",
     "simpleTypeName": "InterruptedException",
     "qualifiedTypeName": "java.lang.InterruptedException",
     "wildcardType": null,
     "toString": "java.lang.InterruptedException",
     "parameterizedType": null
    }
   ]
  },
  {
   "firstSentenceTags": [],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.proc.ProcessHelper.getStderr",
   "name": "getStderr",
   "flatSignature": "()",
   "parameters": [],
   "modifiers": "public",
   "returnType": {
    "typeName": "List",
    "dimension": "",
    "simpleTypeName": "List",
    "qualifiedTypeName": "java.util.List",
    "wildcardType": null,
    "toString": "java.util.List<java.lang.String>",
    "parameterizedType": {
     "typeArguments": [
      {
       "typeName": "String",
       "dimension": "",
       "simpleTypeName": "String",
       "qualifiedTypeName": "java.lang.String",
       "wildcardType": null,
       "toString": "java.lang.String",
       "parameterizedType": null
      }
     ]
    }
   },
   "metaType": "method",
   "thrownExceptionTypes": [
    {
     "typeName": "ExecutionException",
     "dimension": "",
     "simpleTypeName": "ExecutionException",
     "qualifiedTypeName": "java.util.concurrent.ExecutionException",
     "wildcardType": null,
     "toString": "java.util.concurrent.ExecutionException",
     "parameterizedType": null
    },
    {
     "typeName": "InterruptedException",
     "dimension": "",
     "simpleTypeName": "InterruptedException",
     "qualifiedTypeName": "java.lang.InterruptedException",
     "wildcardType": null,
     "toString": "java.lang.InterruptedException",
     "parameterizedType": null
    }
   ]
  },
  {
   "firstSentenceTags": [],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.proc.ProcessHelper.getOutput",
   "name": "getOutput",
   "flatSignature": "()",
   "parameters": [],
   "modifiers": "public",
   "returnType": {
    "typeName": "List",
    "dimension": "",
    "simpleTypeName": "List",
    "qualifiedTypeName": "java.util.List",
    "wildcardType": null,
    "toString": "java.util.List<java.lang.String>",
    "parameterizedType": {
     "typeArguments": [
      {
       "typeName": "String",
       "dimension": "",
       "simpleTypeName": "String",
       "qualifiedTypeName": "java.lang.String",
       "wildcardType": null,
       "toString": "java.lang.String",
       "parameterizedType": null
      }
     ]
    }
   },
   "metaType": "method",
   "thrownExceptionTypes": [
    {
     "typeName": "ExecutionException",
     "dimension": "",
     "simpleTypeName": "ExecutionException",
     "qualifiedTypeName": "java.util.concurrent.ExecutionException",
     "wildcardType": null,
     "toString": "java.util.concurrent.ExecutionException",
     "parameterizedType": null
    },
    {
     "typeName": "InterruptedException",
     "dimension": "",
     "simpleTypeName": "InterruptedException",
     "qualifiedTypeName": "java.lang.InterruptedException",
     "wildcardType": null,
     "toString": "java.lang.InterruptedException",
     "parameterizedType": null
    }
   ]
  },
  {
   "firstSentenceTags": [],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.proc.ProcessHelper.getStdoutNow",
   "name": "getStdoutNow",
   "flatSignature": "()",
   "parameters": [],
   "modifiers": "public",
   "returnType": {
    "typeName": "List",
    "dimension": "",
    "simpleTypeName": "List",
    "qualifiedTypeName": "java.util.List",
    "wildcardType": null,
    "toString": "java.util.List<java.lang.String>",
    "parameterizedType": {
     "typeArguments": [
      {
       "typeName": "String",
       "dimension": "",
       "simpleTypeName": "String",
       "qualifiedTypeName": "java.lang.String",
       "wildcardType": null,
       "toString": "java.lang.String",
       "parameterizedType": null
      }
     ]
    }
   },
   "metaType": "method",
   "thrownExceptionTypes": []
  },
  {
   "firstSentenceTags": [],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.proc.ProcessHelper.getStderrNow",
   "name": "getStderrNow",
   "flatSignature": "()",
   "parameters": [],
   "modifiers": "public",
   "returnType": {
    "typeName": "List",
    "dimension": "",
    "simpleTypeName": "List",
    "qualifiedTypeName": "java.util.List",
    "wildcardType": null,
    "toString": "java.util.List<java.lang.String>",
    "parameterizedType": {
     "typeArguments": [
      {
       "typeName": "String",
       "dimension": "",
       "simpleTypeName": "String",
       "qualifiedTypeName": "java.lang.String",
       "wildcardType": null,
       "toString": "java.lang.String",
       "parameterizedType": null
      }
     ]
    }
   },
   "metaType": "method",
   "thrownExceptionTypes": []
  },
  {
   "firstSentenceTags": [],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.proc.ProcessHelper.exitValue",
   "name": "exitValue",
   "flatSignature": "()",
   "parameters": [],
   "modifiers": "public",
   "returnType": {
    "typeName": "int",
    "dimension": "",
    "simpleTypeName": "int",
    "qualifiedTypeName": "int",
    "wildcardType": null,
    "toString": "int",
    "parameterizedType": null
   },
   "metaType": "method",
   "thrownExceptionTypes": []
  },
  {
   "firstSentenceTags": [],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.proc.ProcessHelper.getProcess",
   "name": "getProcess",
   "flatSignature": "()",
   "parameters": [],
   "modifiers": "public",
   "returnType": {
    "typeName": "Process",
    "dimension": "",
    "simpleTypeName": "Process",
    "qualifiedTypeName": "java.lang.Process",
    "wildcardType": null,
    "toString": "java.lang.Process",
    "parameterizedType": null
   },
   "metaType": "method",
   "thrownExceptionTypes": []
  },
  {
   "firstSentenceTags": [],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.proc.ProcessHelper.loadStreamUnchecked",
   "name": "loadStreamUnchecked",
   "flatSignature": "(ProcessHelper.Stream, InputStream)",
   "parameters": [
    {
     "name": "stream",
     "type": {
      "typeName": "ProcessHelper.Stream",
      "dimension": "",
      "simpleTypeName": "Stream",
      "qualifiedTypeName": "com.surfapi.proc.ProcessHelper.Stream",
      "wildcardType": null,
      "toString": "com.surfapi.proc.ProcessHelper.Stream",
      "parameterizedType": null
     }
    },
    {
     "name": "is",
     "type": {
      "typeName": "InputStream",
      "dimension": "",
      "simpleTypeName": "InputStream",
      "qualifiedTypeName": "java.io.InputStream",
      "wildcardType": null,
      "toString": "java.io.InputStream",
      "parameterizedType": null
     }
    }
   ],
   "modifiers": "protected",
   "returnType": {
    "typeName": "List",
    "dimension": "",
    "simpleTypeName": "List",
    "qualifiedTypeName": "java.util.List",
    "wildcardType": null,
    "toString": "java.util.List<java.lang.String>",
    "parameterizedType": {
     "typeArguments": [
      {
       "typeName": "String",
       "dimension": "",
       "simpleTypeName": "String",
       "qualifiedTypeName": "java.lang.String",
       "wildcardType": null,
       "toString": "java.lang.String",
       "parameterizedType": null
      }
     ]
    }
   },
   "metaType": "method",
   "thrownExceptionTypes": []
  },
  {
   "firstSentenceTags": [
    {
     "text": "Read the contents of the given inputstream.",
     "name": "Text",
     "kind": "Text"
    }
   ],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.proc.ProcessHelper.loadStream",
   "name": "loadStream",
   "flatSignature": "(ProcessHelper.Stream, InputStream)",
   "parameters": [
    {
     "name": "stream",
     "type": {
      "typeName": "ProcessHelper.Stream",
      "dimension": "",
      "simpleTypeName": "Stream",
      "qualifiedTypeName": "com.surfapi.proc.ProcessHelper.Stream",
      "wildcardType": null,
      "toString": "com.surfapi.proc.ProcessHelper.Stream",
      "parameterizedType": null
     }
    },
    {
     "name": "is",
     "type": {
      "typeName": "InputStream",
      "dimension": "",
      "simpleTypeName": "InputStream",
      "qualifiedTypeName": "java.io.InputStream",
      "wildcardType": null,
      "toString": "java.io.InputStream",
      "parameterizedType": null
     }
    }
   ],
   "modifiers": "protected",
   "returnType": {
    "typeName": "List",
    "dimension": "",
    "simpleTypeName": "List",
    "qualifiedTypeName": "java.util.List",
    "wildcardType": null,
    "toString": "java.util.List<java.lang.String>",
    "parameterizedType": {
     "typeArguments": [
      {
       "typeName": "String",
       "dimension": "",
       "simpleTypeName": "String",
       "qualifiedTypeName": "java.lang.String",
       "wildcardType": null,
       "toString": "java.lang.String",
       "parameterizedType": null
      }
     ]
    }
   },
   "metaType": "method",
   "thrownExceptionTypes": [
    {
     "typeName": "IOException",
     "dimension": "",
     "simpleTypeName": "IOException",
     "qualifiedTypeName": "java.io.IOException",
     "wildcardType": null,
     "toString": "java.io.IOException",
     "parameterizedType": null
    }
   ]
  },
  {
   "firstSentenceTags": [
    {
     "text": "Notify output observers when a new line of output is read from the process's\n stdout or stderr streams.",
     "name": "Text",
     "kind": "Text"
    }
   ],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.proc.ProcessHelper.notifyObservers",
   "name": "notifyObservers",
   "flatSignature": "(ProcessHelper.Stream, String)",
   "parameters": [
    {
     "name": "stream",
     "type": {
      "typeName": "ProcessHelper.Stream",
      "dimension": "",
      "simpleTypeName": "Stream",
      "qualifiedTypeName": "com.surfapi.proc.ProcessHelper.Stream",
      "wildcardType": null,
      "toString": "com.surfapi.proc.ProcessHelper.Stream",
      "parameterizedType": null
     }
    },
    {
     "name": "line",
     "type": {
      "typeName": "String",
      "dimension": "",
      "simpleTypeName": "String",
      "qualifiedTypeName": "java.lang.String",
      "wildcardType": null,
      "toString": "java.lang.String",
      "parameterizedType": null
     }
    }
   ],
   "modifiers": "protected",
   "returnType": {
    "typeName": "void",
    "dimension": "",
    "simpleTypeName": "void",
    "qualifiedTypeName": "void",
    "wildcardType": null,
    "toString": "void",
    "parameterizedType": null
   },
   "metaType": "method",
   "thrownExceptionTypes": []
  }
 ],
 "containingPackage": {
  "firstSentenceTags": [],
  "name": "com.surfapi.proc",
  "metaType": "package"
 },
 "wildcardType": null,
 "superclassType": {
  "typeName": "Object",
  "dimension": "",
  "simpleTypeName": "Object",
  "qualifiedTypeName": "java.lang.Object",
  "wildcardType": null,
  "toString": "java.lang.Object",
  "parameterizedType": null
 },
 "commentText": "A little wrapper around a forked Process.  It sets up separate threads\n to read stdout\/stderr from the Process, to avoid hanging the Process.\n \n When you fork a process from Java it sets up pipes between the Java process\n and the forked process for stdout\/stderr.  The pipes have a limited buffer\n capacity and if this capacity is reached, then the forked process may hang\n waiting for the Java process to read some data off the pipe.  That's why \n you need separate threads reading the stdout\/stderr pipes from the Java\n side while another thread calls, e.g, Process.waitFor.",
 "seeTags": [],
 "name": "ProcessHelper",
 "qualifiedTypeName": "com.surfapi.proc.ProcessHelper",
 "interfaces": [],
 "modifiers": "public",
 "containingClass": null,
 "parameterizedType": null,
 "fields": [],
 "tags": [],
 "typeParameters": [
  {
   "bounds": [
    {
     "typeName": "ProcessHelper",
     "dimension": "",
     "simpleTypeName": "ProcessHelper",
     "qualifiedTypeName": "com.surfapi.proc.ProcessHelper",
     "wildcardType": null,
     "toString": "com.surfapi.proc.ProcessHelper",
     "parameterizedType": {
      "typeArguments": []
     }
    }
   ],
   "typeName": "T",
   "dimension": "",
   "simpleTypeName": "T",
   "qualifiedTypeName": "T",
   "wildcardType": null,
   "toString": "T extends com.surfapi.proc.ProcessHelper",
   "parameterizedType": null
  }
 ],
 "simpleTypeName": "ProcessHelper",
 "qualifiedName": "com.surfapi.proc.ProcessHelper",
 "innerClasses": [
  {
   "firstSentenceTags": [
    {
     "text": "Output stream identifier",
     "name": "Text",
     "kind": "Text"
    }
   ],
   "qualifiedName": "com.surfapi.proc.ProcessHelper.Stream",
   "name": "ProcessHelper.Stream",
   "modifiers": "public static final",
   "metaType": "enum"
  }
 ],
 "constructors": [
  {
   "firstSentenceTags": [
    {
     "text": "CTOR.",
     "name": "Text",
     "kind": "Text"
    }
   ],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.proc.ProcessHelper",
   "name": "ProcessHelper",
   "flatSignature": "(Process)",
   "parameters": [
    {
     "name": "process",
     "type": {
      "typeName": "Process",
      "dimension": "",
      "simpleTypeName": "Process",
      "qualifiedTypeName": "java.lang.Process",
      "wildcardType": null,
      "toString": "java.lang.Process",
      "parameterizedType": null
     }
    }
   ],
   "modifiers": "public",
   "metaType": "constructor",
   "thrownExceptionTypes": []
  }
 ],
 "metaType": "class",
 "typeName": "ProcessHelper",
 "interfaceTypes": [],
 "firstSentenceTags": [
  {
   "text": "A little wrapper around a forked Process.",
   "name": "Text",
   "kind": "Text"
  }
 ],
 "dimension": "",
 "typeParamTags": [],
 "superclass": {
  "firstSentenceTags": [],
  "qualifiedName": "java.lang.Object",
  "name": "Object",
  "modifiers": "public",
  "metaType": "class"
 },
 "enumConstants": [],
 "modifierSpecifier": 1,
 "toString": "com.surfapi.proc.ProcessHelper<T extends com.surfapi.proc.ProcessHelper>",
 "annotations": [],
 "rawCommentText": " A little wrapper around a forked Process.  It sets up separate threads\n to read stdout\/stderr from the Process, to avoid hanging the Process.\n \n When you fork a process from Java it sets up pipes between the Java process\n and the forked process for stdout\/stderr.  The pipes have a limited buffer\n capacity and if this capacity is reached, then the forked process may hang\n waiting for the Java process to read some data off the pipe.  That's why \n you need separate threads reading the stdout\/stderr pipes from the Java\n side while another thread calls, e.g, Process.waitFor.\n \n",
 "inlineTags": [
  {
   "text": "A little wrapper around a forked Process.  It sets up separate threads\n to read stdout\/stderr from the Process, to avoid hanging the Process.\n \n When you fork a process from Java it sets up pipes between the Java process\n and the forked process for stdout\/stderr.  The pipes have a limited buffer\n capacity and if this capacity is reached, then the forked process may hang\n waiting for the Java process to read some data off the pipe.  That's why \n you need separate threads reading the stdout\/stderr pipes from the Java\n side while another thread calls, e.g, Process.waitFor.",
   "name": "Text",
   "kind": "Text"
  }
 ]
}
{
 "throwsTags": [],
 "containingPackage": {
  "firstSentenceTags": [],
  "name": "com.surfapi.proc",
  "metaType": "package"
 },
 "isSynthetic": false,
 "commentText": "Add an output observer.\n \n Note: observers should be added *BEFORE* calling spawnStreamReaders.",
 "seeTags": [],
 "name": "addObserver",
 "parameters": [
  {
   "typeName": "ProcessHelper.Stream",
   "name": "stream",
   "toString": "ProcessHelper.Stream stream",
   "annotations": [],
   "type": {
    "typeName": "ProcessHelper.Stream",
    "dimension": "",
    "simpleTypeName": "Stream",
    "qualifiedTypeName": "com.surfapi.proc.ProcessHelper.Stream",
    "wildcardType": null,
    "toString": "com.surfapi.proc.ProcessHelper.Stream",
    "parameterizedType": null
   }
  },
  {
   "typeName": "Observer",
   "name": "observer",
   "toString": "Observer observer",
   "annotations": [],
   "type": {
    "typeName": "Observer",
    "dimension": "",
    "simpleTypeName": "Observer",
    "qualifiedTypeName": "java.util.Observer",
    "wildcardType": null,
    "toString": "java.util.Observer",
    "parameterizedType": null
   }
  }
 ],
 "modifiers": "public",
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "A little wrapper around a forked Process.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.proc.ProcessHelper",
  "name": "ProcessHelper",
  "modifiers": "public",
  "metaType": "class"
 },
 "thrownExceptions": [],
 "signature": "(com.surfapi.proc.ProcessHelper.Stream, java.util.Observer)",
 "tags": [],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.proc.ProcessHelper.addObserver",
 "paramTags": [],
 "returnType": {
  "typeName": "T",
  "dimension": "",
  "simpleTypeName": "T",
  "qualifiedTypeName": "T",
  "wildcardType": null,
  "toString": "T extends com.surfapi.proc.ProcessHelper",
  "parameterizedType": null
 },
 "metaType": "method",
 "thrownExceptionTypes": [],
 "firstSentenceTags": [
  {
   "text": "Add an output observer.",
   "name": "Text",
   "kind": "Text"
  }
 ],
 "typeParamTags": [],
 "modifierSpecifier": 1,
 "annotations": [],
 "flatSignature": "(ProcessHelper.Stream, Observer)",
 "rawCommentText": " Add an output observer.\n \n Note: observers should be added *BEFORE* calling spawnStreamReaders.\n",
 "inlineTags": [
  {
   "text": "Add an output observer.\n \n Note: observers should be added *BEFORE* calling spawnStreamReaders.",
   "name": "Text",
   "kind": "Text"
  }
 ]
}
{
 "throwsTags": [],
 "containingPackage": {
  "firstSentenceTags": [],
  "name": "com.surfapi.proc",
  "metaType": "package"
 },
 "isSynthetic": false,
 "commentText": "Set the description",
 "seeTags": [],
 "name": "setDescription",
 "parameters": [
  {
   "typeName": "String",
   "name": "description",
   "toString": "String description",
   "annotations": [],
   "type": {
    "typeName": "String",
    "dimension": "",
    "simpleTypeName": "String",
    "qualifiedTypeName": "java.lang.String",
    "wildcardType": null,
    "toString": "java.lang.String",
    "parameterizedType": null
   }
  }
 ],
 "modifiers": "public",
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "A little wrapper around a forked Process.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.proc.ProcessHelper",
  "name": "ProcessHelper",
  "modifiers": "public",
  "metaType": "class"
 },
 "thrownExceptions": [],
 "signature": "(java.lang.String)",
 "tags": [
  {
   "text": "this",
   "name": "@return",
   "kind": "@return"
  }
 ],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.proc.ProcessHelper.setDescription",
 "paramTags": [],
 "returnType": {
  "typeName": "T",
  "dimension": "",
  "simpleTypeName": "T",
  "qualifiedTypeName": "T",
  "wildcardType": null,
  "toString": "T extends com.surfapi.proc.ProcessHelper",
  "parameterizedType": null
 },
 "metaType": "method",
 "thrownExceptionTypes": [],
 "firstSentenceTags": [
  {
   "text": "Set the description",
   "name": "Text",
   "kind": "Text"
  }
 ],
 "typeParamTags": [],
 "modifierSpecifier": 1,
 "annotations": [],
 "flatSignature": "(String)",
 "rawCommentText": " Set the description\n \n @return this\n",
 "inlineTags": [
  {
   "text": "Set the description",
   "name": "Text",
   "kind": "Text"
  }
 ]
}
{
 "throwsTags": [],
 "containingPackage": {
  "firstSentenceTags": [],
  "name": "com.surfapi.proc",
  "metaType": "package"
 },
 "isSynthetic": false,
 "commentText": "",
 "seeTags": [],
 "name": "getDescription",
 "parameters": [],
 "modifiers": "public",
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "A little wrapper around a forked Process.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.proc.ProcessHelper",
  "name": "ProcessHelper",
  "modifiers": "public",
  "metaType": "class"
 },
 "thrownExceptions": [],
 "signature": "()",
 "tags": [
  {
   "text": "process description",
   "name": "@return",
   "kind": "@return"
  }
 ],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.proc.ProcessHelper.getDescription",
 "paramTags": [],
 "returnType": {
  "typeName": "String",
  "dimension": "",
  "simpleTypeName": "String",
  "qualifiedTypeName": "java.lang.String",
  "wildcardType": null,
  "toString": "java.lang.String",
  "parameterizedType": null
 },
 "metaType": "method",
 "thrownExceptionTypes": [],
 "firstSentenceTags": [],
 "typeParamTags": [],
 "modifierSpecifier": 1,
 "annotations": [],
 "flatSignature": "()",
 "rawCommentText": " @return process description\n",
 "inlineTags": []
}
{
 "throwsTags": [],
 "containingPackage": {
  "firstSentenceTags": [],
  "name": "com.surfapi.proc",
  "metaType": "package"
 },
 "isSynthetic": false,
 "commentText": "Redirect to the given output stream",
 "seeTags": [],
 "name": "pipeTo",
 "parameters": [
  {
   "typeName": "ProcessHelper.Stream",
   "name": "stream",
   "toString": "ProcessHelper.Stream stream",
   "annotations": [],
   "type": {
    "typeName": "ProcessHelper.Stream",
    "dimension": "",
    "simpleTypeName": "Stream",
    "qualifiedTypeName": "com.surfapi.proc.ProcessHelper.Stream",
    "wildcardType": null,
    "toString": "com.surfapi.proc.ProcessHelper.Stream",
    "parameterizedType": null
   }
  },
  {
   "typeName": "OutputStream",
   "name": "outputStream",
   "toString": "OutputStream outputStream",
   "annotations": [],
   "type": {
    "typeName": "OutputStream",
    "dimension": "",
    "simpleTypeName": "OutputStream",
    "qualifiedTypeName": "java.io.OutputStream",
    "wildcardType": null,
    "toString": "java.io.OutputStream",
    "parameterizedType": null
   }
  }
 ],
 "modifiers": "public",
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "A little wrapper around a forked Process.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.proc.ProcessHelper",
  "name": "ProcessHelper",
  "modifiers": "public",
  "metaType": "class"
 },
 "thrownExceptions": [],
 "signature": "(com.surfapi.proc.ProcessHelper.Stream, java.io.OutputStream)",
 "tags": [],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.proc.ProcessHelper.pipeTo",
 "paramTags": [],
 "returnType": {
  "typeName": "T",
  "dimension": "",
  "simpleTypeName": "T",
  "qualifiedTypeName": "T",
  "wildcardType": null,
  "toString": "T extends com.surfapi.proc.ProcessHelper",
  "parameterizedType": null
 },
 "metaType": "method",
 "thrownExceptionTypes": [],
 "firstSentenceTags": [
  {
   "text": "Redirect to the given output stream",
   "name": "Text",
   "kind": "Text"
  }
 ],
 "typeParamTags": [],
 "modifierSpecifier": 1,
 "annotations": [],
 "flatSignature": "(ProcessHelper.Stream, OutputStream)",
 "rawCommentText": " Redirect to the given output stream\n",
 "inlineTags": [
  {
   "text": "Redirect to the given output stream",
   "name": "Text",
   "kind": "Text"
  }
 ]
}
{
 "throwsTags": [],
 "containingPackage": {
  "firstSentenceTags": [],
  "name": "com.surfapi.proc",
  "metaType": "package"
 },
 "isSynthetic": false,
 "commentText": "",
 "seeTags": [],
 "name": "getExecutorService",
 "parameters": [],
 "modifiers": "protected",
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "A little wrapper around a forked Process.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.proc.ProcessHelper",
  "name": "ProcessHelper",
  "modifiers": "public",
  "metaType": "class"
 },
 "thrownExceptions": [],
 "signature": "()",
 "tags": [
  {
   "text": "the executorService, for spawning threads to read stdout\/stderr.",
   "name": "@return",
   "kind": "@return"
  }
 ],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.proc.ProcessHelper.getExecutorService",
 "paramTags": [],
 "returnType": {
  "typeName": "ExecutorService",
  "dimension": "",
  "simpleTypeName": "ExecutorService",
  "qualifiedTypeName": "java.util.concurrent.ExecutorService",
  "wildcardType": null,
  "toString": "java.util.concurrent.ExecutorService",
  "parameterizedType": null
 },
 "metaType": "method",
 "thrownExceptionTypes": [],
 "firstSentenceTags": [],
 "typeParamTags": [],
 "modifierSpecifier": 4,
 "annotations": [],
 "flatSignature": "()",
 "rawCommentText": " @return the executorService, for spawning threads to read stdout\/stderr.\n",
 "inlineTags": []
}
{
 "throwsTags": [],
 "containingPackage": {
  "firstSentenceTags": [],
  "name": "com.surfapi.proc",
  "metaType": "package"
 },
 "isSynthetic": false,
 "commentText": "",
 "seeTags": [],
 "name": "shutdownExecutor",
 "parameters": [],
 "modifiers": "protected",
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "A little wrapper around a forked Process.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.proc.ProcessHelper",
  "name": "ProcessHelper",
  "modifiers": "public",
  "metaType": "class"
 },
 "thrownExceptions": [],
 "signature": "()",
 "tags": [
  {
   "text": "this",
   "name": "@return",
   "kind": "@return"
  }
 ],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.proc.ProcessHelper.shutdownExecutor",
 "paramTags": [],
 "returnType": {
  "typeName": "T",
  "dimension": "",
  "simpleTypeName": "T",
  "qualifiedTypeName": "T",
  "wildcardType": null,
  "toString": "T extends com.surfapi.proc.ProcessHelper",
  "parameterizedType": null
 },
 "metaType": "method",
 "thrownExceptionTypes": [],
 "firstSentenceTags": [],
 "typeParamTags": [],
 "modifierSpecifier": 4,
 "annotations": [],
 "flatSignature": "()",
 "rawCommentText": " @return this\n",
 "inlineTags": []
}
{
 "throwsTags": [],
 "containingPackage": {
  "firstSentenceTags": [],
  "name": "com.surfapi.proc",
  "metaType": "package"
 },
 "isSynthetic": false,
 "commentText": "Spawn threads (via the ExecutorService) to read stdout\/stderr of the process.",
 "seeTags": [],
 "name": "spawnStreamReaders",
 "parameters": [],
 "modifiers": "public",
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "A little wrapper around a forked Process.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.proc.ProcessHelper",
  "name": "ProcessHelper",
  "modifiers": "public",
  "metaType": "class"
 },
 "thrownExceptions": [],
 "signature": "()",
 "tags": [
  {
   "text": "this",
   "name": "@return",
   "kind": "@return"
  }
 ],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.proc.ProcessHelper.spawnStreamReaders",
 "paramTags": [],
 "returnType": {
  "typeName": "T",
  "dimension": "",
  "simpleTypeName": "T",
  "qualifiedTypeName": "T",
  "wildcardType": null,
  "toString": "T extends com.surfapi.proc.ProcessHelper",
  "parameterizedType": null
 },
 "metaType": "method",
 "thrownExceptionTypes": [],
 "firstSentenceTags": [
  {
   "text": "Spawn threads (via the ExecutorService) to read stdout\/stderr of the process.",
   "name": "Text",
   "kind": "Text"
  }
 ],
 "typeParamTags": [],
 "modifierSpecifier": 1,
 "annotations": [],
 "flatSignature": "()",
 "rawCommentText": " Spawn threads (via the ExecutorService) to read stdout\/stderr of the process.\n \n @return this\n",
 "inlineTags": [
  {
   "text": "Spawn threads (via the ExecutorService) to read stdout\/stderr of the process.",
   "name": "Text",
   "kind": "Text"
  }
 ]
}
{
 "throwsTags": [],
 "containingPackage": {
  "firstSentenceTags": [],
  "name": "com.surfapi.proc",
  "metaType": "package"
 },
 "isSynthetic": false,
 "commentText": "Start separate threads for reading stdout\/stderr of the Process, \n then call process.waitFor.",
 "seeTags": [],
 "name": "waitFor",
 "parameters": [],
 "modifiers": "public",
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "A little wrapper around a forked Process.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.proc.ProcessHelper",
  "name": "ProcessHelper",
  "modifiers": "public",
  "metaType": "class"
 },
 "thrownExceptions": [
  {
   "firstSentenceTags": [],
   "qualifiedName": "java.lang.InterruptedException",
   "name": "InterruptedException",
   "modifiers": "public",
   "metaType": "class"
  }
 ],
 "signature": "()",
 "tags": [
  {
   "text": "this",
   "name": "@return",
   "kind": "@return"
  }
 ],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.proc.ProcessHelper.waitFor",
 "paramTags": [],
 "returnType": {
  "typeName": "T",
  "dimension": "",
  "simpleTypeName": "T",
  "qualifiedTypeName": "T",
  "wildcardType": null,
  "toString": "T extends com.surfapi.proc.ProcessHelper",
  "parameterizedType": null
 },
 "metaType": "method",
 "thrownExceptionTypes": [
  {
   "typeName": "InterruptedException",
   "dimension": "",
   "simpleTypeName": "InterruptedException",
   "qualifiedTypeName": "java.lang.InterruptedException",
   "wildcardType": null,
   "toString": "java.lang.InterruptedException",
   "parameterizedType": null
  }
 ],
 "firstSentenceTags": [
  {
   "text": "Start separate threads for reading stdout\/stderr of the Process, \n then call process.waitFor.",
   "name": "Text",
   "kind": "Text"
  }
 ],
 "typeParamTags": [],
 "modifierSpecifier": 1,
 "annotations": [],
 "flatSignature": "()",
 "rawCommentText": " Start separate threads for reading stdout\/stderr of the Process, \n then call process.waitFor.\n \n @return this\n",
 "inlineTags": [
  {
   "text": "Start separate threads for reading stdout\/stderr of the Process, \n then call process.waitFor.",
   "name": "Text",
   "kind": "Text"
  }
 ]
}
{
 "throwsTags": [],
 "containingPackage": {
  "firstSentenceTags": [],
  "name": "com.surfapi.proc",
  "metaType": "package"
 },
 "isSynthetic": false,
 "commentText": "Destroy the process (via process.destroy()), then wait for it to terminate.",
 "seeTags": [],
 "name": "destroyAndWaitFor",
 "parameters": [],
 "modifiers": "public",
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "A little wrapper around a forked Process.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.proc.ProcessHelper",
  "name": "ProcessHelper",
  "modifiers": "public",
  "metaType": "class"
 },
 "thrownExceptions": [
  {
   "firstSentenceTags": [],
   "qualifiedName": "java.lang.InterruptedException",
   "name": "InterruptedException",
   "modifiers": "public",
   "metaType": "class"
  }
 ],
 "signature": "()",
 "tags": [
  {
   "text": "this",
   "name": "@return",
   "kind": "@return"
  }
 ],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.proc.ProcessHelper.destroyAndWaitFor",
 "paramTags": [],
 "returnType": {
  "typeName": "T",
  "dimension": "",
  "simpleTypeName": "T",
  "qualifiedTypeName": "T",
  "wildcardType": null,
  "toString": "T extends com.surfapi.proc.ProcessHelper",
  "parameterizedType": null
 },
 "metaType": "method",
 "thrownExceptionTypes": [
  {
   "typeName": "InterruptedException",
   "dimension": "",
   "simpleTypeName": "InterruptedException",
   "qualifiedTypeName": "java.lang.InterruptedException",
   "wildcardType": null,
   "toString": "java.lang.InterruptedException",
   "parameterizedType": null
  }
 ],
 "firstSentenceTags": [
  {
   "text": "Destroy the process (via process.destroy()), then wait for it to terminate.",
   "name": "Text",
   "kind": "Text"
  }
 ],
 "typeParamTags": [],
 "modifierSpecifier": 1,
 "annotations": [],
 "flatSignature": "()",
 "rawCommentText": " Destroy the process (via process.destroy()), then wait for it to terminate.\n \n @return this\n",
 "inlineTags": [
  {
   "text": "Destroy the process (via process.destroy()), then wait for it to terminate.",
   "name": "Text",
   "kind": "Text"
  }
 ]
}
{
 "throwsTags": [],
 "containingPackage": {
  "firstSentenceTags": [],
  "name": "com.surfapi.proc",
  "metaType": "package"
 },
 "isSynthetic": false,
 "commentText": "",
 "seeTags": [],
 "name": "getStdout",
 "parameters": [],
 "modifiers": "public",
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "A little wrapper around a forked Process.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.proc.ProcessHelper",
  "name": "ProcessHelper",
  "modifiers": "public",
  "metaType": "class"
 },
 "thrownExceptions": [
  {
   "firstSentenceTags": [],
   "qualifiedName": "java.util.concurrent.ExecutionException",
   "name": "ExecutionException",
   "modifiers": "public",
   "metaType": "class"
  },
  {
   "firstSentenceTags": [],
   "qualifiedName": "java.lang.InterruptedException",
   "name": "InterruptedException",
   "modifiers": "public",
   "metaType": "class"
  }
 ],
 "signature": "()",
 "tags": [
  {
   "text": "stdout data",
   "name": "@return",
   "kind": "@return"
  }
 ],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.proc.ProcessHelper.getStdout",
 "paramTags": [],
 "returnType": {
  "typeName": "List",
  "dimension": "",
  "simpleTypeName": "List",
  "qualifiedTypeName": "java.util.List",
  "wildcardType": null,
  "toString": "java.util.List<java.lang.String>",
  "parameterizedType": {
   "typeArguments": [
    {
     "typeName": "String",
     "dimension": "",
     "simpleTypeName": "String",
     "qualifiedTypeName": "java.lang.String",
     "wildcardType": null,
     "toString": "java.lang.String",
     "parameterizedType": null
    }
   ]
  }
 },
 "metaType": "method",
 "thrownExceptionTypes": [
  {
   "typeName": "ExecutionException",
   "dimension": "",
   "simpleTypeName": "ExecutionException",
   "qualifiedTypeName": "java.util.concurrent.ExecutionException",
   "wildcardType": null,
   "toString": "java.util.concurrent.ExecutionException",
   "parameterizedType": null
  },
  {
   "typeName": "InterruptedException",
   "dimension": "",
   "simpleTypeName": "InterruptedException",
   "qualifiedTypeName": "java.lang.InterruptedException",
   "wildcardType": null,
   "toString": "java.lang.InterruptedException",
   "parameterizedType": null
  }
 ],
 "firstSentenceTags": [],
 "typeParamTags": [],
 "modifierSpecifier": 1,
 "annotations": [],
 "flatSignature": "()",
 "rawCommentText": " @return stdout data\n",
 "inlineTags": []
}
{
 "throwsTags": [],
 "containingPackage": {
  "firstSentenceTags": [],
  "name": "com.surfapi.proc",
  "metaType": "package"
 },
 "isSynthetic": false,
 "commentText": "",
 "seeTags": [],
 "name": "getStderr",
 "parameters": [],
 "modifiers": "public",
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "A little wrapper around a forked Process.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.proc.ProcessHelper",
  "name": "ProcessHelper",
  "modifiers": "public",
  "metaType": "class"
 },
 "thrownExceptions": [
  {
   "firstSentenceTags": [],
   "qualifiedName": "java.util.concurrent.ExecutionException",
   "name": "ExecutionException",
   "modifiers": "public",
   "metaType": "class"
  },
  {
   "firstSentenceTags": [],
   "qualifiedName": "java.lang.InterruptedException",
   "name": "InterruptedException",
   "modifiers": "public",
   "metaType": "class"
  }
 ],
 "signature": "()",
 "tags": [
  {
   "text": "stderr data",
   "name": "@return",
   "kind": "@return"
  }
 ],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.proc.ProcessHelper.getStderr",
 "paramTags": [],
 "returnType": {
  "typeName": "List",
  "dimension": "",
  "simpleTypeName": "List",
  "qualifiedTypeName": "java.util.List",
  "wildcardType": null,
  "toString": "java.util.List<java.lang.String>",
  "parameterizedType": {
   "typeArguments": [
    {
     "typeName": "String",
     "dimension": "",
     "simpleTypeName": "String",
     "qualifiedTypeName": "java.lang.String",
     "wildcardType": null,
     "toString": "java.lang.String",
     "parameterizedType": null
    }
   ]
  }
 },
 "metaType": "method",
 "thrownExceptionTypes": [
  {
   "typeName": "ExecutionException",
   "dimension": "",
   "simpleTypeName": "ExecutionException",
   "qualifiedTypeName": "java.util.concurrent.ExecutionException",
   "wildcardType": null,
   "toString": "java.util.concurrent.ExecutionException",
   "parameterizedType": null
  },
  {
   "typeName": "InterruptedException",
   "dimension": "",
   "simpleTypeName": "InterruptedException",
   "qualifiedTypeName": "java.lang.InterruptedException",
   "wildcardType": null,
   "toString": "java.lang.InterruptedException",
   "parameterizedType": null
  }
 ],
 "firstSentenceTags": [],
 "typeParamTags": [],
 "modifierSpecifier": 1,
 "annotations": [],
 "flatSignature": "()",
 "rawCommentText": " @return stderr data\n",
 "inlineTags": []
}
{
 "throwsTags": [],
 "containingPackage": {
  "firstSentenceTags": [],
  "name": "com.surfapi.proc",
  "metaType": "package"
 },
 "isSynthetic": false,
 "commentText": "",
 "seeTags": [],
 "name": "getOutput",
 "parameters": [],
 "modifiers": "public",
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "A little wrapper around a forked Process.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.proc.ProcessHelper",
  "name": "ProcessHelper",
  "modifiers": "public",
  "metaType": "class"
 },
 "thrownExceptions": [
  {
   "firstSentenceTags": [],
   "qualifiedName": "java.util.concurrent.ExecutionException",
   "name": "ExecutionException",
   "modifiers": "public",
   "metaType": "class"
  },
  {
   "firstSentenceTags": [],
   "qualifiedName": "java.lang.InterruptedException",
   "name": "InterruptedException",
   "modifiers": "public",
   "metaType": "class"
  }
 ],
 "signature": "()",
 "tags": [
  {
   "text": "all output, stdout followed by stderr",
   "name": "@return",
   "kind": "@return"
  }
 ],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.proc.ProcessHelper.getOutput",
 "paramTags": [],
 "returnType": {
  "typeName": "List",
  "dimension": "",
  "simpleTypeName": "List",
  "qualifiedTypeName": "java.util.List",
  "wildcardType": null,
  "toString": "java.util.List<java.lang.String>",
  "parameterizedType": {
   "typeArguments": [
    {
     "typeName": "String",
     "dimension": "",
     "simpleTypeName": "String",
     "qualifiedTypeName": "java.lang.String",
     "wildcardType": null,
     "toString": "java.lang.String",
     "parameterizedType": null
    }
   ]
  }
 },
 "metaType": "method",
 "thrownExceptionTypes": [
  {
   "typeName": "ExecutionException",
   "dimension": "",
   "simpleTypeName": "ExecutionException",
   "qualifiedTypeName": "java.util.concurrent.ExecutionException",
   "wildcardType": null,
   "toString": "java.util.concurrent.ExecutionException",
   "parameterizedType": null
  },
  {
   "typeName": "InterruptedException",
   "dimension": "",
   "simpleTypeName": "InterruptedException",
   "qualifiedTypeName": "java.lang.InterruptedException",
   "wildcardType": null,
   "toString": "java.lang.InterruptedException",
   "parameterizedType": null
  }
 ],
 "firstSentenceTags": [],
 "typeParamTags": [],
 "modifierSpecifier": 1,
 "annotations": [],
 "flatSignature": "()",
 "rawCommentText": " @return all output, stdout followed by stderr\n",
 "inlineTags": []
}
{
 "throwsTags": [],
 "containingPackage": {
  "firstSentenceTags": [],
  "name": "com.surfapi.proc",
  "metaType": "package"
 },
 "isSynthetic": false,
 "commentText": "",
 "seeTags": [],
 "name": "getStdoutNow",
 "parameters": [],
 "modifiers": "public",
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "A little wrapper around a forked Process.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.proc.ProcessHelper",
  "name": "ProcessHelper",
  "modifiers": "public",
  "metaType": "class"
 },
 "thrownExceptions": [],
 "signature": "()",
 "tags": [
  {
   "text": "stdout data, without waiting. If an exception occurs then the exception message is returned.",
   "name": "@return",
   "kind": "@return"
  }
 ],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.proc.ProcessHelper.getStdoutNow",
 "paramTags": [],
 "returnType": {
  "typeName": "List",
  "dimension": "",
  "simpleTypeName": "List",
  "qualifiedTypeName": "java.util.List",
  "wildcardType": null,
  "toString": "java.util.List<java.lang.String>",
  "parameterizedType": {
   "typeArguments": [
    {
     "typeName": "String",
     "dimension": "",
     "simpleTypeName": "String",
     "qualifiedTypeName": "java.lang.String",
     "wildcardType": null,
     "toString": "java.lang.String",
     "parameterizedType": null
    }
   ]
  }
 },
 "metaType": "method",
 "thrownExceptionTypes": [],
 "firstSentenceTags": [],
 "typeParamTags": [],
 "modifierSpecifier": 1,
 "annotations": [],
 "flatSignature": "()",
 "rawCommentText": " @return stdout data, without waiting. If an exception occurs then the exception message is returned.\n",
 "inlineTags": []
}
{
 "throwsTags": [],
 "containingPackage": {
  "firstSentenceTags": [],
  "name": "com.surfapi.proc",
  "metaType": "package"
 },
 "isSynthetic": false,
 "commentText": "",
 "seeTags": [],
 "name": "getStderrNow",
 "parameters": [],
 "modifiers": "public",
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "A little wrapper around a forked Process.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.proc.ProcessHelper",
  "name": "ProcessHelper",
  "modifiers": "public",
  "metaType": "class"
 },
 "thrownExceptions": [],
 "signature": "()",
 "tags": [
  {
   "text": "stderr data, without waiting. If an exception occurs then the exception message is returned.",
   "name": "@return",
   "kind": "@return"
  }
 ],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.proc.ProcessHelper.getStderrNow",
 "paramTags": [],
 "returnType": {
  "typeName": "List",
  "dimension": "",
  "simpleTypeName": "List",
  "qualifiedTypeName": "java.util.List",
  "wildcardType": null,
  "toString": "java.util.List<java.lang.String>",
  "parameterizedType": {
   "typeArguments": [
    {
     "typeName": "String",
     "dimension": "",
     "simpleTypeName": "String",
     "qualifiedTypeName": "java.lang.String",
     "wildcardType": null,
     "toString": "java.lang.String",
     "parameterizedType": null
    }
   ]
  }
 },
 "metaType": "method",
 "thrownExceptionTypes": [],
 "firstSentenceTags": [],
 "typeParamTags": [],
 "modifierSpecifier": 1,
 "annotations": [],
 "flatSignature": "()",
 "rawCommentText": " @return stderr data, without waiting. If an exception occurs then the exception message is returned.\n",
 "inlineTags": []
}
{
 "throwsTags": [],
 "containingPackage": {
  "firstSentenceTags": [],
  "name": "com.surfapi.proc",
  "metaType": "package"
 },
 "isSynthetic": false,
 "commentText": "",
 "seeTags": [],
 "name": "exitValue",
 "parameters": [],
 "modifiers": "public",
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "A little wrapper around a forked Process.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.proc.ProcessHelper",
  "name": "ProcessHelper",
  "modifiers": "public",
  "metaType": "class"
 },
 "thrownExceptions": [],
 "signature": "()",
 "tags": [
  {
   "text": "process.exitValue.",
   "name": "@return",
   "kind": "@return"
  }
 ],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.proc.ProcessHelper.exitValue",
 "paramTags": [],
 "returnType": {
  "typeName": "int",
  "dimension": "",
  "simpleTypeName": "int",
  "qualifiedTypeName": "int",
  "wildcardType": null,
  "toString": "int",
  "parameterizedType": null
 },
 "metaType": "method",
 "thrownExceptionTypes": [],
 "firstSentenceTags": [],
 "typeParamTags": [],
 "modifierSpecifier": 1,
 "annotations": [],
 "flatSignature": "()",
 "rawCommentText": " @return process.exitValue.\n",
 "inlineTags": []
}
{
 "throwsTags": [],
 "containingPackage": {
  "firstSentenceTags": [],
  "name": "com.surfapi.proc",
  "metaType": "package"
 },
 "isSynthetic": false,
 "commentText": "",
 "seeTags": [],
 "name": "getProcess",
 "parameters": [],
 "modifiers": "public",
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "A little wrapper around a forked Process.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.proc.ProcessHelper",
  "name": "ProcessHelper",
  "modifiers": "public",
  "metaType": "class"
 },
 "thrownExceptions": [],
 "signature": "()",
 "tags": [
  {
   "text": "the wrapped process object",
   "name": "@return",
   "kind": "@return"
  }
 ],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.proc.ProcessHelper.getProcess",
 "paramTags": [],
 "returnType": {
  "typeName": "Process",
  "dimension": "",
  "simpleTypeName": "Process",
  "qualifiedTypeName": "java.lang.Process",
  "wildcardType": null,
  "toString": "java.lang.Process",
  "parameterizedType": null
 },
 "metaType": "method",
 "thrownExceptionTypes": [],
 "firstSentenceTags": [],
 "typeParamTags": [],
 "modifierSpecifier": 1,
 "annotations": [],
 "flatSignature": "()",
 "rawCommentText": " @return the wrapped process object\n",
 "inlineTags": []
}
{
 "throwsTags": [
  {
   "exceptionName": "RuntimeException",
   "exceptionType": {
    "typeName": "RuntimeException",
    "dimension": "",
    "simpleTypeName": "RuntimeException",
    "qualifiedTypeName": "java.lang.RuntimeException",
    "wildcardType": null,
    "toString": "java.lang.RuntimeException",
    "parameterizedType": null
   },
   "text": "RuntimeException if an IOException occurs.",
   "exceptionComment": "if an IOException occurs.",
   "name": "@throws",
   "kind": "@throws"
  }
 ],
 "containingPackage": {
  "firstSentenceTags": [],
  "name": "com.surfapi.proc",
  "metaType": "package"
 },
 "isSynthetic": false,
 "commentText": "",
 "seeTags": [],
 "name": "loadStreamUnchecked",
 "parameters": [
  {
   "typeName": "ProcessHelper.Stream",
   "name": "stream",
   "toString": "ProcessHelper.Stream stream",
   "annotations": [],
   "type": {
    "typeName": "ProcessHelper.Stream",
    "dimension": "",
    "simpleTypeName": "Stream",
    "qualifiedTypeName": "com.surfapi.proc.ProcessHelper.Stream",
    "wildcardType": null,
    "toString": "com.surfapi.proc.ProcessHelper.Stream",
    "parameterizedType": null
   }
  },
  {
   "typeName": "InputStream",
   "name": "is",
   "toString": "InputStream is",
   "annotations": [],
   "type": {
    "typeName": "InputStream",
    "dimension": "",
    "simpleTypeName": "InputStream",
    "qualifiedTypeName": "java.io.InputStream",
    "wildcardType": null,
    "toString": "java.io.InputStream",
    "parameterizedType": null
   }
  }
 ],
 "modifiers": "protected",
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "A little wrapper around a forked Process.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.proc.ProcessHelper",
  "name": "ProcessHelper",
  "modifiers": "public",
  "metaType": "class"
 },
 "thrownExceptions": [],
 "signature": "(com.surfapi.proc.ProcessHelper.Stream, java.io.InputStream)",
 "tags": [
  {
   "text": "The contents of the InputStream",
   "name": "@return",
   "kind": "@return"
  },
  {
   "text": "RuntimeException if an IOException occurs.",
   "name": "@throws",
   "kind": "@throws"
  }
 ],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.proc.ProcessHelper.loadStreamUnchecked",
 "paramTags": [],
 "returnType": {
  "typeName": "List",
  "dimension": "",
  "simpleTypeName": "List",
  "qualifiedTypeName": "java.util.List",
  "wildcardType": null,
  "toString": "java.util.List<java.lang.String>",
  "parameterizedType": {
   "typeArguments": [
    {
     "typeName": "String",
     "dimension": "",
     "simpleTypeName": "String",
     "qualifiedTypeName": "java.lang.String",
     "wildcardType": null,
     "toString": "java.lang.String",
     "parameterizedType": null
    }
   ]
  }
 },
 "metaType": "method",
 "thrownExceptionTypes": [],
 "firstSentenceTags": [],
 "typeParamTags": [],
 "modifierSpecifier": 4,
 "annotations": [],
 "flatSignature": "(ProcessHelper.Stream, InputStream)",
 "rawCommentText": " @return The contents of the InputStream\n\n @throws RuntimeException if an IOException occurs.\n",
 "inlineTags": []
}
{
 "throwsTags": [],
 "containingPackage": {
  "firstSentenceTags": [],
  "name": "com.surfapi.proc",
  "metaType": "package"
 },
 "isSynthetic": false,
 "commentText": "Read the contents of the given inputstream.\n \n Each line is passed to the output observers.\n \n The last 1000 lines are saved in a list and returned.",
 "seeTags": [],
 "name": "loadStream",
 "parameters": [
  {
   "typeName": "ProcessHelper.Stream",
   "name": "stream",
   "toString": "ProcessHelper.Stream stream",
   "annotations": [],
   "type": {
    "typeName": "ProcessHelper.Stream",
    "dimension": "",
    "simpleTypeName": "Stream",
    "qualifiedTypeName": "com.surfapi.proc.ProcessHelper.Stream",
    "wildcardType": null,
    "toString": "com.surfapi.proc.ProcessHelper.Stream",
    "parameterizedType": null
   }
  },
  {
   "typeName": "InputStream",
   "name": "is",
   "toString": "InputStream is",
   "annotations": [],
   "type": {
    "typeName": "InputStream",
    "dimension": "",
    "simpleTypeName": "InputStream",
    "qualifiedTypeName": "java.io.InputStream",
    "wildcardType": null,
    "toString": "java.io.InputStream",
    "parameterizedType": null
   }
  }
 ],
 "modifiers": "protected",
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "A little wrapper around a forked Process.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.proc.ProcessHelper",
  "name": "ProcessHelper",
  "modifiers": "public",
  "metaType": "class"
 },
 "thrownExceptions": [
  {
   "firstSentenceTags": [],
   "qualifiedName": "java.io.IOException",
   "name": "IOException",
   "modifiers": "public",
   "metaType": "class"
  }
 ],
 "signature": "(com.surfapi.proc.ProcessHelper.Stream, java.io.InputStream)",
 "tags": [
  {
   "text": "The last 1000 lines of the InputStream.",
   "name": "@return",
   "kind": "@return"
  }
 ],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.proc.ProcessHelper.loadStream",
 "paramTags": [],
 "returnType": {
  "typeName": "List",
  "dimension": "",
  "simpleTypeName": "List",
  "qualifiedTypeName": "java.util.List",
  "wildcardType": null,
  "toString": "java.util.List<java.lang.String>",
  "parameterizedType": {
   "typeArguments": [
    {
     "typeName": "String",
     "dimension": "",
     "simpleTypeName": "String",
     "qualifiedTypeName": "java.lang.String",
     "wildcardType": null,
     "toString": "java.lang.String",
     "parameterizedType": null
    }
   ]
  }
 },
 "metaType": "method",
 "thrownExceptionTypes": [
  {
   "typeName": "IOException",
   "dimension": "",
   "simpleTypeName": "IOException",
   "qualifiedTypeName": "java.io.IOException",
   "wildcardType": null,
   "toString": "java.io.IOException",
   "parameterizedType": null
  }
 ],
 "firstSentenceTags": [
  {
   "text": "Read the contents of the given inputstream.",
   "name": "Text",
   "kind": "Text"
  }
 ],
 "typeParamTags": [],
 "modifierSpecifier": 4,
 "annotations": [],
 "flatSignature": "(ProcessHelper.Stream, InputStream)",
 "rawCommentText": " Read the contents of the given inputstream.\n \n Each line is passed to the output observers.\n \n The last 1000 lines are saved in a list and returned.\n\n @return The last 1000 lines of the InputStream.\n",
 "inlineTags": [
  {
   "text": "Read the contents of the given inputstream.\n \n Each line is passed to the output observers.\n \n The last 1000 lines are saved in a list and returned.",
   "name": "Text",
   "kind": "Text"
  }
 ]
}
{
 "throwsTags": [],
 "containingPackage": {
  "firstSentenceTags": [],
  "name": "com.surfapi.proc",
  "metaType": "package"
 },
 "isSynthetic": false,
 "commentText": "Notify output observers when a new line of output is read from the process's\n stdout or stderr streams.",
 "seeTags": [],
 "name": "notifyObservers",
 "parameters": [
  {
   "typeName": "ProcessHelper.Stream",
   "name": "stream",
   "toString": "ProcessHelper.Stream stream",
   "annotations": [],
   "type": {
    "typeName": "ProcessHelper.Stream",
    "dimension": "",
    "simpleTypeName": "Stream",
    "qualifiedTypeName": "com.surfapi.proc.ProcessHelper.Stream",
    "wildcardType": null,
    "toString": "com.surfapi.proc.ProcessHelper.Stream",
    "parameterizedType": null
   }
  },
  {
   "typeName": "String",
   "name": "line",
   "toString": "String line",
   "annotations": [],
   "type": {
    "typeName": "String",
    "dimension": "",
    "simpleTypeName": "String",
    "qualifiedTypeName": "java.lang.String",
    "wildcardType": null,
    "toString": "java.lang.String",
    "parameterizedType": null
   }
  }
 ],
 "modifiers": "protected",
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "A little wrapper around a forked Process.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.proc.ProcessHelper",
  "name": "ProcessHelper",
  "modifiers": "public",
  "metaType": "class"
 },
 "thrownExceptions": [],
 "signature": "(com.surfapi.proc.ProcessHelper.Stream, java.lang.String)",
 "tags": [],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.proc.ProcessHelper.notifyObservers",
 "paramTags": [],
 "returnType": {
  "typeName": "void",
  "dimension": "",
  "simpleTypeName": "void",
  "qualifiedTypeName": "void",
  "wildcardType": null,
  "toString": "void",
  "parameterizedType": null
 },
 "metaType": "method",
 "thrownExceptionTypes": [],
 "firstSentenceTags": [
  {
   "text": "Notify output observers when a new line of output is read from the process's\n stdout or stderr streams.",
   "name": "Text",
   "kind": "Text"
  }
 ],
 "typeParamTags": [],
 "modifierSpecifier": 4,
 "annotations": [],
 "flatSignature": "(ProcessHelper.Stream, String)",
 "rawCommentText": " Notify output observers when a new line of output is read from the process's\n stdout or stderr streams.\n",
 "inlineTags": [
  {
   "text": "Notify output observers when a new line of output is read from the process's\n stdout or stderr streams.",
   "name": "Text",
   "kind": "Text"
  }
 ]
}
{
 "tags": [
  {
   "text": "process - the already-started process.",
   "name": "@param",
   "kind": "@param"
  }
 ],
 "throwsTags": [],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.proc.ProcessHelper",
 "paramTags": [
  {
   "text": "process - the already-started process.",
   "parameterComment": "- the already-started process.",
   "name": "@param",
   "parameterName": "process",
   "kind": "@param"
  }
 ],
 "containingPackage": {
  "firstSentenceTags": [],
  "name": "com.surfapi.proc",
  "metaType": "package"
 },
 "isSynthetic": false,
 "metaType": "constructor",
 "thrownExceptionTypes": [],
 "commentText": "CTOR.",
 "firstSentenceTags": [
  {
   "text": "CTOR.",
   "name": "Text",
   "kind": "Text"
  }
 ],
 "typeParamTags": [],
 "seeTags": [],
 "name": "ProcessHelper",
 "modifierSpecifier": 1,
 "parameters": [
  {
   "typeName": "Process",
   "name": "process",
   "toString": "Process process",
   "annotations": [],
   "type": {
    "typeName": "Process",
    "dimension": "",
    "simpleTypeName": "Process",
    "qualifiedTypeName": "java.lang.Process",
    "wildcardType": null,
    "toString": "java.lang.Process",
    "parameterizedType": null
   }
  }
 ],
 "flatSignature": "(Process)",
 "annotations": [],
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "A little wrapper around a forked Process.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.proc.ProcessHelper",
  "name": "ProcessHelper",
  "modifiers": "public",
  "metaType": "class"
 },
 "modifiers": "public",
 "thrownExceptions": [],
 "rawCommentText": " CTOR.  \n \n @param process - the already-started process.\n",
 "signature": "(java.lang.Process)",
 "inlineTags": [
  {
   "text": "CTOR.",
   "name": "Text",
   "kind": "Text"
  }
 ]
}
{
 "methods": [
  {
   "firstSentenceTags": [],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.proc.ProcessHelper.Stream.values",
   "name": "values",
   "flatSignature": "()",
   "parameters": [],
   "modifiers": "public static",
   "returnType": {
    "typeName": "ProcessHelper.Stream",
    "dimension": "[]",
    "simpleTypeName": "Stream",
    "qualifiedTypeName": "com.surfapi.proc.ProcessHelper.Stream",
    "wildcardType": null,
    "toString": "com.surfapi.proc.ProcessHelper.Stream[]",
    "parameterizedType": null
   },
   "metaType": "method",
   "thrownExceptionTypes": []
  },
  {
   "firstSentenceTags": [],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.proc.ProcessHelper.Stream.valueOf",
   "name": "valueOf",
   "flatSignature": "(String)",
   "parameters": [
    {
     "name": "name",
     "type": {
      "typeName": "String",
      "dimension": "",
      "simpleTypeName": "String",
      "qualifiedTypeName": "java.lang.String",
      "wildcardType": null,
      "toString": "java.lang.String",
      "parameterizedType": null
     }
    }
   ],
   "modifiers": "public static",
   "returnType": {
    "typeName": "ProcessHelper.Stream",
    "dimension": "",
    "simpleTypeName": "Stream",
    "qualifiedTypeName": "com.surfapi.proc.ProcessHelper.Stream",
    "wildcardType": null,
    "toString": "com.surfapi.proc.ProcessHelper.Stream",
    "parameterizedType": null
   },
   "metaType": "method",
   "thrownExceptionTypes": []
  }
 ],
 "containingPackage": {
  "firstSentenceTags": [],
  "name": "com.surfapi.proc",
  "metaType": "package"
 },
 "wildcardType": null,
 "superclassType": {
  "typeName": "Enum",
  "dimension": "",
  "simpleTypeName": "Enum",
  "qualifiedTypeName": "java.lang.Enum",
  "wildcardType": null,
  "toString": "java.lang.Enum<com.surfapi.proc.ProcessHelper.Stream>",
  "parameterizedType": {
   "typeArguments": [
    {
     "typeName": "ProcessHelper.Stream",
     "dimension": "",
     "simpleTypeName": "Stream",
     "qualifiedTypeName": "com.surfapi.proc.ProcessHelper.Stream",
     "wildcardType": null,
     "toString": "com.surfapi.proc.ProcessHelper.Stream",
     "parameterizedType": null
    }
   ]
  }
 },
 "commentText": "Output stream identifier",
 "seeTags": [],
 "name": "ProcessHelper.Stream",
 "qualifiedTypeName": "com.surfapi.proc.ProcessHelper.Stream",
 "interfaces": [],
 "modifiers": "public static final",
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "A little wrapper around a forked Process.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.proc.ProcessHelper",
  "name": "ProcessHelper",
  "modifiers": "public",
  "metaType": "class"
 },
 "parameterizedType": null,
 "fields": [],
 "tags": [],
 "typeParameters": [],
 "simpleTypeName": "Stream",
 "qualifiedName": "com.surfapi.proc.ProcessHelper.Stream",
 "innerClasses": [],
 "constructors": [],
 "metaType": "enum",
 "typeName": "ProcessHelper.Stream",
 "interfaceTypes": [],
 "firstSentenceTags": [
  {
   "text": "Output stream identifier",
   "name": "Text",
   "kind": "Text"
  }
 ],
 "dimension": "",
 "typeParamTags": [],
 "superclass": {
  "firstSentenceTags": [],
  "qualifiedName": "java.lang.Enum",
  "name": "Enum",
  "modifiers": "public abstract",
  "metaType": "class"
 },
 "enumConstants": [
  {
   "tags": [],
   "qualifiedName": "com.surfapi.proc.ProcessHelper.Stream.STDOUT",
   "containingPackage": {
    "firstSentenceTags": [],
    "name": "com.surfapi.proc",
    "metaType": "package"
   },
   "type": {
    "typeName": "ProcessHelper.Stream",
    "dimension": "",
    "simpleTypeName": "Stream",
    "qualifiedTypeName": "com.surfapi.proc.ProcessHelper.Stream",
    "wildcardType": null,
    "toString": "com.surfapi.proc.ProcessHelper.Stream",
    "parameterizedType": null
   },
   "serialFieldTags": [],
   "isSynthetic": false,
   "metaType": "enumConstant",
   "constantValue": null,
   "constantValueExpression": null,
   "commentText": "",
   "firstSentenceTags": [],
   "seeTags": [],
   "name": "STDOUT",
   "modifierSpecifier": 25,
   "annotations": [],
   "containingClass": {
    "firstSentenceTags": [
     {
      "text": "Output stream identifier",
      "name": "Text",
      "kind": "Text"
     }
    ],
    "qualifiedName": "com.surfapi.proc.ProcessHelper.Stream",
    "name": "ProcessHelper.Stream",
    "modifiers": "public static final",
    "metaType": "enum"
   },
   "modifiers": "public static final",
   "rawCommentText": "",
   "inlineTags": []
  },
  {
   "tags": [],
   "qualifiedName": "com.surfapi.proc.ProcessHelper.Stream.STDERR",
   "containingPackage": {
    "firstSentenceTags": [],
    "name": "com.surfapi.proc",
    "metaType": "package"
   },
   "type": {
    "typeName": "ProcessHelper.Stream",
    "dimension": "",
    "simpleTypeName": "Stream",
    "qualifiedTypeName": "com.surfapi.proc.ProcessHelper.Stream",
    "wildcardType": null,
    "toString": "com.surfapi.proc.ProcessHelper.Stream",
    "parameterizedType": null
   },
   "serialFieldTags": [],
   "isSynthetic": false,
   "metaType": "enumConstant",
   "constantValue": null,
   "constantValueExpression": null,
   "commentText": "",
   "firstSentenceTags": [],
   "seeTags": [],
   "name": "STDERR",
   "modifierSpecifier": 25,
   "annotations": [],
   "containingClass": {
    "firstSentenceTags": [
     {
      "text": "Output stream identifier",
      "name": "Text",
      "kind": "Text"
     }
    ],
    "qualifiedName": "com.surfapi.proc.ProcessHelper.Stream",
    "name": "ProcessHelper.Stream",
    "modifiers": "public static final",
    "metaType": "enum"
   },
   "modifiers": "public static final",
   "rawCommentText": "",
   "inlineTags": []
  }
 ],
 "modifierSpecifier": 25,
 "toString": "com.surfapi.proc.ProcessHelper.Stream",
 "annotations": [],
 "rawCommentText": " Output stream identifier\n",
 "inlineTags": [
  {
   "text": "Output stream identifier",
   "name": "Text",
   "kind": "Text"
  }
 ]
}
{
 "throwsTags": [],
 "containingPackage": {
  "firstSentenceTags": [],
  "name": "com.surfapi.proc",
  "metaType": "package"
 },
 "isSynthetic": false,
 "commentText": "",
 "seeTags": [],
 "name": "values",
 "parameters": [],
 "modifiers": "public static",
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "Output stream identifier",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.proc.ProcessHelper.Stream",
  "name": "ProcessHelper.Stream",
  "modifiers": "public static final",
  "metaType": "enum"
 },
 "thrownExceptions": [],
 "signature": "()",
 "tags": [],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.proc.ProcessHelper.Stream.values",
 "paramTags": [],
 "returnType": {
  "typeName": "ProcessHelper.Stream",
  "dimension": "[]",
  "simpleTypeName": "Stream",
  "qualifiedTypeName": "com.surfapi.proc.ProcessHelper.Stream",
  "wildcardType": null,
  "toString": "com.surfapi.proc.ProcessHelper.Stream[]",
  "parameterizedType": null
 },
 "metaType": "method",
 "thrownExceptionTypes": [],
 "firstSentenceTags": [],
 "typeParamTags": [],
 "modifierSpecifier": 9,
 "annotations": [],
 "flatSignature": "()",
 "rawCommentText": "",
 "inlineTags": []
}
{
 "throwsTags": [],
 "containingPackage": {
  "firstSentenceTags": [],
  "name": "com.surfapi.proc",
  "metaType": "package"
 },
 "isSynthetic": false,
 "commentText": "",
 "seeTags": [],
 "name": "valueOf",
 "parameters": [
  {
   "typeName": "String",
   "name": "name",
   "toString": "String name",
   "annotations": [],
   "type": {
    "typeName": "String",
    "dimension": "",
    "simpleTypeName": "String",
    "qualifiedTypeName": "java.lang.String",
    "wildcardType": null,
    "toString": "java.lang.String",
    "parameterizedType": null
   }
  }
 ],
 "modifiers": "public static",
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "Output stream identifier",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.proc.ProcessHelper.Stream",
  "name": "ProcessHelper.Stream",
  "modifiers": "public static final",
  "metaType": "enum"
 },
 "thrownExceptions": [],
 "signature": "(java.lang.String)",
 "tags": [],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.proc.ProcessHelper.Stream.valueOf",
 "paramTags": [],
 "returnType": {
  "typeName": "ProcessHelper.Stream",
  "dimension": "",
  "simpleTypeName": "Stream",
  "qualifiedTypeName": "com.surfapi.proc.ProcessHelper.Stream",
  "wildcardType": null,
  "toString": "com.surfapi.proc.ProcessHelper.Stream",
  "parameterizedType": null
 },
 "metaType": "method",
 "thrownExceptionTypes": [],
 "firstSentenceTags": [],
 "typeParamTags": [],
 "modifierSpecifier": 9,
 "annotations": [],
 "flatSignature": "(String)",
 "rawCommentText": "",
 "inlineTags": []
}
{
 "methods": [
  {
   "firstSentenceTags": [
    {
     "text": "Write the line to the printStream.",
     "name": "Text",
     "kind": "Text"
    }
   ],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.proc.StreamCollector.update",
   "name": "update",
   "flatSignature": "(Observable, Object)",
   "parameters": [
    {
     "name": "o",
     "type": {
      "typeName": "Observable",
      "dimension": "",
      "simpleTypeName": "Observable",
      "qualifiedTypeName": "java.util.Observable",
      "wildcardType": null,
      "toString": "java.util.Observable",
      "parameterizedType": null
     }
    },
    {
     "name": "line",
     "type": {
      "typeName": "Object",
      "dimension": "",
      "simpleTypeName": "Object",
      "qualifiedTypeName": "java.lang.Object",
      "wildcardType": null,
      "toString": "java.lang.Object",
      "parameterizedType": null
     }
    }
   ],
   "modifiers": "public",
   "returnType": {
    "typeName": "void",
    "dimension": "",
    "simpleTypeName": "void",
    "qualifiedTypeName": "void",
    "wildcardType": null,
    "toString": "void",
    "parameterizedType": null
   },
   "metaType": "method",
   "thrownExceptionTypes": []
  },
  {
   "firstSentenceTags": [],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.proc.StreamCollector.getOutput",
   "name": "getOutput",
   "flatSignature": "()",
   "parameters": [],
   "modifiers": "public",
   "returnType": {
    "typeName": "List",
    "dimension": "",
    "simpleTypeName": "List",
    "qualifiedTypeName": "java.util.List",
    "wildcardType": null,
    "toString": "java.util.List<java.lang.String>",
    "parameterizedType": {
     "typeArguments": [
      {
       "typeName": "String",
       "dimension": "",
       "simpleTypeName": "String",
       "qualifiedTypeName": "java.lang.String",
       "wildcardType": null,
       "toString": "java.lang.String",
       "parameterizedType": null
      }
     ]
    }
   },
   "metaType": "method",
   "thrownExceptionTypes": []
  }
 ],
 "containingPackage": {
  "firstSentenceTags": [],
  "name": "com.surfapi.proc",
  "metaType": "package"
 },
 "wildcardType": null,
 "superclassType": {
  "typeName": "Object",
  "dimension": "",
  "simpleTypeName": "Object",
  "qualifiedTypeName": "java.lang.Object",
  "wildcardType": null,
  "toString": "java.lang.Object",
  "parameterizedType": null
 },
 "commentText": "OutputObserver for ProcessHelper that logs the output via Log.log.",
 "seeTags": [],
 "name": "StreamCollector",
 "qualifiedTypeName": "com.surfapi.proc.StreamCollector",
 "interfaces": [
  {
   "firstSentenceTags": [],
   "qualifiedName": "java.util.Observer",
   "name": "Observer",
   "modifiers": "public interface",
   "metaType": "interface"
  }
 ],
 "modifiers": "public",
 "containingClass": null,
 "parameterizedType": null,
 "fields": [],
 "tags": [],
 "typeParameters": [],
 "simpleTypeName": "StreamCollector",
 "qualifiedName": "com.surfapi.proc.StreamCollector",
 "innerClasses": [],
 "constructors": [
  {
   "firstSentenceTags": [],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.proc.StreamCollector",
   "name": "StreamCollector",
   "flatSignature": "()",
   "parameters": [],
   "modifiers": "public",
   "metaType": "constructor",
   "thrownExceptionTypes": []
  }
 ],
 "metaType": "class",
 "typeName": "StreamCollector",
 "interfaceTypes": [
  {
   "typeName": "Observer",
   "dimension": "",
   "simpleTypeName": "Observer",
   "qualifiedTypeName": "java.util.Observer",
   "wildcardType": null,
   "toString": "java.util.Observer",
   "parameterizedType": null
  }
 ],
 "firstSentenceTags": [
  {
   "text": "OutputObserver for ProcessHelper that logs the output via Log.log.",
   "name": "Text",
   "kind": "Text"
  }
 ],
 "dimension": "",
 "typeParamTags": [],
 "superclass": {
  "firstSentenceTags": [],
  "qualifiedName": "java.lang.Object",
  "name": "Object",
  "modifiers": "public",
  "metaType": "class"
 },
 "enumConstants": [],
 "modifierSpecifier": 1,
 "toString": "com.surfapi.proc.StreamCollector",
 "annotations": [],
 "rawCommentText": " OutputObserver for ProcessHelper that logs the output via Log.log.\n",
 "inlineTags": [
  {
   "text": "OutputObserver for ProcessHelper that logs the output via Log.log.",
   "name": "Text",
   "kind": "Text"
  }
 ]
}
{
 "throwsTags": [],
 "containingPackage": {
  "firstSentenceTags": [],
  "name": "com.surfapi.proc",
  "metaType": "package"
 },
 "isSynthetic": false,
 "commentText": "Write the line to the printStream.",
 "seeTags": [],
 "name": "update",
 "parameters": [
  {
   "typeName": "Observable",
   "name": "o",
   "toString": "Observable o",
   "annotations": [],
   "type": {
    "typeName": "Observable",
    "dimension": "",
    "simpleTypeName": "Observable",
    "qualifiedTypeName": "java.util.Observable",
    "wildcardType": null,
    "toString": "java.util.Observable",
    "parameterizedType": null
   }
  },
  {
   "typeName": "Object",
   "name": "line",
   "toString": "Object line",
   "annotations": [],
   "type": {
    "typeName": "Object",
    "dimension": "",
    "simpleTypeName": "Object",
    "qualifiedTypeName": "java.lang.Object",
    "wildcardType": null,
    "toString": "java.lang.Object",
    "parameterizedType": null
   }
  }
 ],
 "modifiers": "public",
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "OutputObserver for ProcessHelper that logs the output via Log.log.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.proc.StreamCollector",
  "name": "StreamCollector",
  "modifiers": "public",
  "metaType": "class"
 },
 "thrownExceptions": [],
 "signature": "(java.util.Observable, java.lang.Object)",
 "tags": [],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.proc.StreamCollector.update",
 "paramTags": [],
 "returnType": {
  "typeName": "void",
  "dimension": "",
  "simpleTypeName": "void",
  "qualifiedTypeName": "void",
  "wildcardType": null,
  "toString": "void",
  "parameterizedType": null
 },
 "metaType": "method",
 "thrownExceptionTypes": [],
 "firstSentenceTags": [
  {
   "text": "Write the line to the printStream.",
   "name": "Text",
   "kind": "Text"
  }
 ],
 "typeParamTags": [],
 "modifierSpecifier": 1,
 "annotations": [
  {
   "elementValues": [],
   "annotationType": {
    "firstSentenceTags": [],
    "qualifiedName": "java.lang.Override",
    "name": "Override",
    "modifiers": "public interface",
    "metaType": "annotationType"
   }
  }
 ],
 "flatSignature": "(Observable, Object)",
 "rawCommentText": " Write the line to the printStream.\n",
 "inlineTags": [
  {
   "text": "Write the line to the printStream.",
   "name": "Text",
   "kind": "Text"
  }
 ]
}
{
 "throwsTags": [],
 "containingPackage": {
  "firstSentenceTags": [],
  "name": "com.surfapi.proc",
  "metaType": "package"
 },
 "isSynthetic": false,
 "commentText": "",
 "seeTags": [],
 "name": "getOutput",
 "parameters": [],
 "modifiers": "public",
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "OutputObserver for ProcessHelper that logs the output via Log.log.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.proc.StreamCollector",
  "name": "StreamCollector",
  "modifiers": "public",
  "metaType": "class"
 },
 "thrownExceptions": [],
 "signature": "()",
 "tags": [
  {
   "text": "the collected output.",
   "name": "@return",
   "kind": "@return"
  }
 ],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.proc.StreamCollector.getOutput",
 "paramTags": [],
 "returnType": {
  "typeName": "List",
  "dimension": "",
  "simpleTypeName": "List",
  "qualifiedTypeName": "java.util.List",
  "wildcardType": null,
  "toString": "java.util.List<java.lang.String>",
  "parameterizedType": {
   "typeArguments": [
    {
     "typeName": "String",
     "dimension": "",
     "simpleTypeName": "String",
     "qualifiedTypeName": "java.lang.String",
     "wildcardType": null,
     "toString": "java.lang.String",
     "parameterizedType": null
    }
   ]
  }
 },
 "metaType": "method",
 "thrownExceptionTypes": [],
 "firstSentenceTags": [],
 "typeParamTags": [],
 "modifierSpecifier": 1,
 "annotations": [],
 "flatSignature": "()",
 "rawCommentText": " @return the collected output.\n",
 "inlineTags": []
}
{
 "tags": [],
 "throwsTags": [],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.proc.StreamCollector",
 "paramTags": [],
 "containingPackage": {
  "firstSentenceTags": [],
  "name": "com.surfapi.proc",
  "metaType": "package"
 },
 "isSynthetic": false,
 "metaType": "constructor",
 "thrownExceptionTypes": [],
 "commentText": "",
 "firstSentenceTags": [],
 "typeParamTags": [],
 "seeTags": [],
 "name": "StreamCollector",
 "modifierSpecifier": 1,
 "parameters": [],
 "flatSignature": "()",
 "annotations": [],
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "OutputObserver for ProcessHelper that logs the output via Log.log.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.proc.StreamCollector",
  "name": "StreamCollector",
  "modifiers": "public",
  "metaType": "class"
 },
 "modifiers": "public",
 "thrownExceptions": [],
 "rawCommentText": "",
 "signature": "()",
 "inlineTags": []
}
{
 "methods": [
  {
   "firstSentenceTags": [
    {
     "text": "Write the line to the printStream.",
     "name": "Text",
     "kind": "Text"
    }
   ],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.proc.StreamPiper.update",
   "name": "update",
   "flatSignature": "(Observable, Object)",
   "parameters": [
    {
     "name": "o",
     "type": {
      "typeName": "Observable",
      "dimension": "",
      "simpleTypeName": "Observable",
      "qualifiedTypeName": "java.util.Observable",
      "wildcardType": null,
      "toString": "java.util.Observable",
      "parameterizedType": null
     }
    },
    {
     "name": "line",
     "type": {
      "typeName": "Object",
      "dimension": "",
      "simpleTypeName": "Object",
      "qualifiedTypeName": "java.lang.Object",
      "wildcardType": null,
      "toString": "java.lang.Object",
      "parameterizedType": null
     }
    }
   ],
   "modifiers": "public",
   "returnType": {
    "typeName": "void",
    "dimension": "",
    "simpleTypeName": "void",
    "qualifiedTypeName": "void",
    "wildcardType": null,
    "toString": "void",
    "parameterizedType": null
   },
   "metaType": "method",
   "thrownExceptionTypes": []
  }
 ],
 "containingPackage": {
  "firstSentenceTags": [],
  "name": "com.surfapi.proc",
  "metaType": "package"
 },
 "wildcardType": null,
 "superclassType": {
  "typeName": "Object",
  "dimension": "",
  "simpleTypeName": "Object",
  "qualifiedTypeName": "java.lang.Object",
  "wildcardType": null,
  "toString": "java.lang.Object",
  "parameterizedType": null
 },
 "commentText": "OutputObserver for ProcessHelper that logs the output via Log.log.",
 "seeTags": [],
 "name": "StreamPiper",
 "qualifiedTypeName": "com.surfapi.proc.StreamPiper",
 "interfaces": [
  {
   "firstSentenceTags": [],
   "qualifiedName": "java.util.Observer",
   "name": "Observer",
   "modifiers": "public interface",
   "metaType": "interface"
  }
 ],
 "modifiers": "public",
 "containingClass": null,
 "parameterizedType": null,
 "fields": [],
 "tags": [],
 "typeParameters": [],
 "simpleTypeName": "StreamPiper",
 "qualifiedName": "com.surfapi.proc.StreamPiper",
 "innerClasses": [],
 "constructors": [
  {
   "firstSentenceTags": [
    {
     "text": "CTOR.",
     "name": "Text",
     "kind": "Text"
    }
   ],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.proc.StreamPiper",
   "name": "StreamPiper",
   "flatSignature": "(OutputStream)",
   "parameters": [
    {
     "name": "outputStream",
     "type": {
      "typeName": "OutputStream",
      "dimension": "",
      "simpleTypeName": "OutputStream",
      "qualifiedTypeName": "java.io.OutputStream",
      "wildcardType": null,
      "toString": "java.io.OutputStream",
      "parameterizedType": null
     }
    }
   ],
   "modifiers": "public",
   "metaType": "constructor",
   "thrownExceptionTypes": []
  }
 ],
 "metaType": "class",
 "typeName": "StreamPiper",
 "interfaceTypes": [
  {
   "typeName": "Observer",
   "dimension": "",
   "simpleTypeName": "Observer",
   "qualifiedTypeName": "java.util.Observer",
   "wildcardType": null,
   "toString": "java.util.Observer",
   "parameterizedType": null
  }
 ],
 "firstSentenceTags": [
  {
   "text": "OutputObserver for ProcessHelper that logs the output via Log.log.",
   "name": "Text",
   "kind": "Text"
  }
 ],
 "dimension": "",
 "typeParamTags": [],
 "superclass": {
  "firstSentenceTags": [],
  "qualifiedName": "java.lang.Object",
  "name": "Object",
  "modifiers": "public",
  "metaType": "class"
 },
 "enumConstants": [],
 "modifierSpecifier": 1,
 "toString": "com.surfapi.proc.StreamPiper",
 "annotations": [],
 "rawCommentText": " OutputObserver for ProcessHelper that logs the output via Log.log.\n",
 "inlineTags": [
  {
   "text": "OutputObserver for ProcessHelper that logs the output via Log.log.",
   "name": "Text",
   "kind": "Text"
  }
 ]
}
{
 "throwsTags": [],
 "containingPackage": {
  "firstSentenceTags": [],
  "name": "com.surfapi.proc",
  "metaType": "package"
 },
 "isSynthetic": false,
 "commentText": "Write the line to the printStream.",
 "seeTags": [],
 "name": "update",
 "parameters": [
  {
   "typeName": "Observable",
   "name": "o",
   "toString": "Observable o",
   "annotations": [],
   "type": {
    "typeName": "Observable",
    "dimension": "",
    "simpleTypeName": "Observable",
    "qualifiedTypeName": "java.util.Observable",
    "wildcardType": null,
    "toString": "java.util.Observable",
    "parameterizedType": null
   }
  },
  {
   "typeName": "Object",
   "name": "line",
   "toString": "Object line",
   "annotations": [],
   "type": {
    "typeName": "Object",
    "dimension": "",
    "simpleTypeName": "Object",
    "qualifiedTypeName": "java.lang.Object",
    "wildcardType": null,
    "toString": "java.lang.Object",
    "parameterizedType": null
   }
  }
 ],
 "modifiers": "public",
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "OutputObserver for ProcessHelper that logs the output via Log.log.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.proc.StreamPiper",
  "name": "StreamPiper",
  "modifiers": "public",
  "metaType": "class"
 },
 "thrownExceptions": [],
 "signature": "(java.util.Observable, java.lang.Object)",
 "tags": [],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.proc.StreamPiper.update",
 "paramTags": [],
 "returnType": {
  "typeName": "void",
  "dimension": "",
  "simpleTypeName": "void",
  "qualifiedTypeName": "void",
  "wildcardType": null,
  "toString": "void",
  "parameterizedType": null
 },
 "metaType": "method",
 "thrownExceptionTypes": [],
 "firstSentenceTags": [
  {
   "text": "Write the line to the printStream.",
   "name": "Text",
   "kind": "Text"
  }
 ],
 "typeParamTags": [],
 "modifierSpecifier": 1,
 "annotations": [
  {
   "elementValues": [],
   "annotationType": {
    "firstSentenceTags": [],
    "qualifiedName": "java.lang.Override",
    "name": "Override",
    "modifiers": "public interface",
    "metaType": "annotationType"
   }
  }
 ],
 "flatSignature": "(Observable, Object)",
 "rawCommentText": " Write the line to the printStream.\n",
 "inlineTags": [
  {
   "text": "Write the line to the printStream.",
   "name": "Text",
   "kind": "Text"
  }
 ]
}
{
 "tags": [],
 "throwsTags": [],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.proc.StreamPiper",
 "paramTags": [],
 "containingPackage": {
  "firstSentenceTags": [],
  "name": "com.surfapi.proc",
  "metaType": "package"
 },
 "isSynthetic": false,
 "metaType": "constructor",
 "thrownExceptionTypes": [],
 "commentText": "CTOR.",
 "firstSentenceTags": [
  {
   "text": "CTOR.",
   "name": "Text",
   "kind": "Text"
  }
 ],
 "typeParamTags": [],
 "seeTags": [],
 "name": "StreamPiper",
 "modifierSpecifier": 1,
 "parameters": [
  {
   "typeName": "OutputStream",
   "name": "outputStream",
   "toString": "OutputStream outputStream",
   "annotations": [],
   "type": {
    "typeName": "OutputStream",
    "dimension": "",
    "simpleTypeName": "OutputStream",
    "qualifiedTypeName": "java.io.OutputStream",
    "wildcardType": null,
    "toString": "java.io.OutputStream",
    "parameterizedType": null
   }
  }
 ],
 "flatSignature": "(OutputStream)",
 "annotations": [],
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "OutputObserver for ProcessHelper that logs the output via Log.log.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.proc.StreamPiper",
  "name": "StreamPiper",
  "modifiers": "public",
  "metaType": "class"
 },
 "modifiers": "public",
 "thrownExceptions": [],
 "rawCommentText": " CTOR.\n",
 "signature": "(java.io.OutputStream)",
 "inlineTags": [
  {
   "text": "CTOR.",
   "name": "Text",
   "kind": "Text"
  }
 ]
}
{
 "tags": [],
 "annotationTypes": [],
 "ordinaryClasses": [
  {
   "firstSentenceTags": [
    {
     "text": "OutputObserver for ProcessHelper that logs the output via Log.log.",
     "name": "Text",
     "kind": "Text"
    }
   ],
   "qualifiedName": "com.surfapi.proc.StreamPiper",
   "name": "StreamPiper",
   "modifiers": "public",
   "metaType": "class"
  },
  {
   "firstSentenceTags": [
    {
     "text": "OutputObserver for ProcessHelper that logs the output via Log.log.",
     "name": "Text",
     "kind": "Text"
    }
   ],
   "qualifiedName": "com.surfapi.proc.StreamCollector",
   "name": "StreamCollector",
   "modifiers": "public",
   "metaType": "class"
  },
  {
   "firstSentenceTags": [
    {
     "text": "A little wrapper around a forked Process.",
     "name": "Text",
     "kind": "Text"
    }
   ],
   "qualifiedName": "com.surfapi.proc.ProcessHelper",
   "name": "ProcessHelper",
   "modifiers": "public",
   "metaType": "class"
  }
 ],
 "metaType": "package",
 "enums": [
  {
   "firstSentenceTags": [
    {
     "text": "Output stream identifier",
     "name": "Text",
     "kind": "Text"
    }
   ],
   "qualifiedName": "com.surfapi.proc.ProcessHelper.Stream",
   "name": "ProcessHelper.Stream",
   "modifiers": "public static final",
   "metaType": "enum"
  }
 ],
 "exceptions": [
  {
   "firstSentenceTags": [
    {
     "text": "Contains info related to the javadoc process that failed.",
     "name": "Text",
     "kind": "Text"
    }
   ],
   "qualifiedName": "com.surfapi.proc.ProcessException",
   "name": "ProcessException",
   "modifiers": "public",
   "metaType": "class"
  }
 ],
 "commentText": "",
 "firstSentenceTags": [],
 "errors": [],
 "seeTags": [],
 "name": "com.surfapi.proc",
 "interfaces": [],
 "annotations": [],
 "rawCommentText": "",
 "inlineTags": []
}
,{
 "methods": [],
 "containingPackage": {
  "firstSentenceTags": [
   {
    "text": "Javadoc for the package, from package-info.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "name": "com.surfapi.test",
  "metaType": "package"
 },
 "wildcardType": null,
 "superclassType": null,
 "commentText": "DemoAnnotation is a custom annotation type.",
 "seeTags": [],
 "name": "DemoAnnotation",
 "qualifiedTypeName": "com.surfapi.test.DemoAnnotation",
 "interfaces": [
  {
   "firstSentenceTags": [],
   "qualifiedName": "java.lang.annotation.Annotation",
   "name": "Annotation",
   "modifiers": "public interface",
   "metaType": "interface"
  }
 ],
 "modifiers": "public interface",
 "containingClass": null,
 "elements": [
  {
   "throwsTags": [],
   "containingPackage": {
    "firstSentenceTags": [
     {
      "text": "Javadoc for the package, from package-info.",
      "name": "Text",
      "kind": "Text"
     }
    ],
    "name": "com.surfapi.test",
    "metaType": "package"
   },
   "isSynthetic": false,
   "commentText": "Javadoc comment for ze author.",
   "seeTags": [],
   "name": "author",
   "parameters": [],
   "defaultValue": null,
   "modifiers": "public",
   "containingClass": {
    "firstSentenceTags": [
     {
      "text": "DemoAnnotation is a custom annotation type.",
      "name": "Text",
      "kind": "Text"
     }
    ],
    "qualifiedName": "com.surfapi.test.DemoAnnotation",
    "name": "DemoAnnotation",
    "modifiers": "public interface",
    "metaType": "annotationType"
   },
   "thrownExceptions": [],
   "signature": "()",
   "tags": [
    {
     "text": "returns clause - the author name.",
     "name": "@return",
     "kind": "@return"
    }
   ],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.test.DemoAnnotation.author",
   "paramTags": [],
   "returnType": {
    "typeName": "String",
    "dimension": "",
    "simpleTypeName": "String",
    "qualifiedTypeName": "java.lang.String",
    "wildcardType": null,
    "toString": "java.lang.String",
    "parameterizedType": null
   },
   "metaType": "annotationTypeElement",
   "thrownExceptionTypes": [],
   "firstSentenceTags": [
    {
     "text": "Javadoc comment for ze author.",
     "name": "Text",
     "kind": "Text"
    }
   ],
   "typeParamTags": [],
   "modifierSpecifier": 1025,
   "annotations": [],
   "flatSignature": "()",
   "rawCommentText": " Javadoc comment for ze author.\n \n @return returns clause - the author name.\n",
   "inlineTags": [
    {
     "text": "Javadoc comment for ze author.",
     "name": "Text",
     "kind": "Text"
    }
   ]
  },
  {
   "throwsTags": [],
   "containingPackage": {
    "firstSentenceTags": [
     {
      "text": "Javadoc for the package, from package-info.",
      "name": "Text",
      "kind": "Text"
     }
    ],
    "name": "com.surfapi.test",
    "metaType": "package"
   },
   "isSynthetic": false,
   "commentText": "",
   "seeTags": [],
   "name": "currentRevision",
   "parameters": [],
   "defaultValue": {
    "toString": "1"
   },
   "modifiers": "public",
   "containingClass": {
    "firstSentenceTags": [
     {
      "text": "DemoAnnotation is a custom annotation type.",
      "name": "Text",
      "kind": "Text"
     }
    ],
    "qualifiedName": "com.surfapi.test.DemoAnnotation",
    "name": "DemoAnnotation",
    "modifiers": "public interface",
    "metaType": "annotationType"
   },
   "thrownExceptions": [],
   "signature": "()",
   "tags": [],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.test.DemoAnnotation.currentRevision",
   "paramTags": [],
   "returnType": {
    "typeName": "int",
    "dimension": "",
    "simpleTypeName": "int",
    "qualifiedTypeName": "int",
    "wildcardType": null,
    "toString": "int",
    "parameterizedType": null
   },
   "metaType": "annotationTypeElement",
   "thrownExceptionTypes": [],
   "firstSentenceTags": [],
   "typeParamTags": [],
   "modifierSpecifier": 1025,
   "annotations": [],
   "flatSignature": "()",
   "rawCommentText": "",
   "inlineTags": []
  },
  {
   "throwsTags": [],
   "containingPackage": {
    "firstSentenceTags": [
     {
      "text": "Javadoc for the package, from package-info.",
      "name": "Text",
      "kind": "Text"
     }
    ],
    "name": "com.surfapi.test",
    "metaType": "package"
   },
   "isSynthetic": false,
   "commentText": "",
   "seeTags": [],
   "name": "lastModified",
   "parameters": [],
   "defaultValue": {
    "toString": "\"N\/A\""
   },
   "modifiers": "public",
   "containingClass": {
    "firstSentenceTags": [
     {
      "text": "DemoAnnotation is a custom annotation type.",
      "name": "Text",
      "kind": "Text"
     }
    ],
    "qualifiedName": "com.surfapi.test.DemoAnnotation",
    "name": "DemoAnnotation",
    "modifiers": "public interface",
    "metaType": "annotationType"
   },
   "thrownExceptions": [],
   "signature": "()",
   "tags": [],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.test.DemoAnnotation.lastModified",
   "paramTags": [],
   "returnType": {
    "typeName": "String",
    "dimension": "",
    "simpleTypeName": "String",
    "qualifiedTypeName": "java.lang.String",
    "wildcardType": null,
    "toString": "java.lang.String",
    "parameterizedType": null
   },
   "metaType": "annotationTypeElement",
   "thrownExceptionTypes": [],
   "firstSentenceTags": [],
   "typeParamTags": [],
   "modifierSpecifier": 1025,
   "annotations": [],
   "flatSignature": "()",
   "rawCommentText": "",
   "inlineTags": []
  },
  {
   "throwsTags": [],
   "containingPackage": {
    "firstSentenceTags": [
     {
      "text": "Javadoc for the package, from package-info.",
      "name": "Text",
      "kind": "Text"
     }
    ],
    "name": "com.surfapi.test",
    "metaType": "package"
   },
   "isSynthetic": false,
   "commentText": "",
   "seeTags": [],
   "name": "reviewers",
   "parameters": [],
   "defaultValue": {
    "toString": "{\"onereview\", \"tworeview\"}"
   },
   "modifiers": "public",
   "containingClass": {
    "firstSentenceTags": [
     {
      "text": "DemoAnnotation is a custom annotation type.",
      "name": "Text",
      "kind": "Text"
     }
    ],
    "qualifiedName": "com.surfapi.test.DemoAnnotation",
    "name": "DemoAnnotation",
    "modifiers": "public interface",
    "metaType": "annotationType"
   },
   "thrownExceptions": [],
   "signature": "()",
   "tags": [],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.test.DemoAnnotation.reviewers",
   "paramTags": [],
   "returnType": {
    "typeName": "String",
    "dimension": "[]",
    "simpleTypeName": "String",
    "qualifiedTypeName": "java.lang.String",
    "wildcardType": null,
    "toString": "java.lang.String[]",
    "parameterizedType": null
   },
   "metaType": "annotationTypeElement",
   "thrownExceptionTypes": [],
   "firstSentenceTags": [],
   "typeParamTags": [],
   "modifierSpecifier": 1025,
   "annotations": [],
   "flatSignature": "()",
   "rawCommentText": "",
   "inlineTags": []
  }
 ],
 "parameterizedType": null,
 "fields": [],
 "tags": [
  {
   "text": "Rob",
   "name": "@author",
   "kind": "@author"
  }
 ],
 "typeParameters": [],
 "simpleTypeName": "DemoAnnotation",
 "qualifiedName": "com.surfapi.test.DemoAnnotation",
 "innerClasses": [],
 "constructors": [],
 "metaType": "annotationType",
 "typeName": "DemoAnnotation",
 "interfaceTypes": [
  {
   "typeName": "Annotation",
   "dimension": "",
   "simpleTypeName": "Annotation",
   "qualifiedTypeName": "java.lang.annotation.Annotation",
   "wildcardType": null,
   "toString": "java.lang.annotation.Annotation",
   "parameterizedType": null
  }
 ],
 "firstSentenceTags": [
  {
   "text": "DemoAnnotation is a custom annotation type.",
   "name": "Text",
   "kind": "Text"
  }
 ],
 "dimension": "",
 "typeParamTags": [],
 "superclass": null,
 "enumConstants": [],
 "modifierSpecifier": 513,
 "toString": "com.surfapi.test.DemoAnnotation",
 "annotations": [
  {
   "elementValues": [],
   "annotationType": {
    "firstSentenceTags": [],
    "qualifiedName": "java.lang.annotation.Documented",
    "name": "Documented",
    "modifiers": "public interface",
    "metaType": "annotationType"
   }
  }
 ],
 "rawCommentText": " DemoAnnotation is a custom annotation type.\n \n @author Rob\n",
 "inlineTags": [
  {
   "text": "DemoAnnotation is a custom annotation type.",
   "name": "Text",
   "kind": "Text"
  }
 ]
}
{
 "methods": [
  {
   "firstSentenceTags": [
    {
     "text": "Interface documentation for the method interfaceMethod.",
     "name": "Text",
     "kind": "Text"
    }
   ],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.test.DemoInterface.interfaceMethod",
   "name": "interfaceMethod",
   "flatSignature": "(String)",
   "parameters": [
    {
     "name": "parm1",
     "type": {
      "typeName": "String",
      "dimension": "",
      "simpleTypeName": "String",
      "qualifiedTypeName": "java.lang.String",
      "wildcardType": null,
      "toString": "java.lang.String",
      "parameterizedType": null
     }
    }
   ],
   "modifiers": "public",
   "returnType": {
    "typeName": "void",
    "dimension": "",
    "simpleTypeName": "void",
    "qualifiedTypeName": "void",
    "wildcardType": null,
    "toString": "void",
    "parameterizedType": null
   },
   "metaType": "method",
   "thrownExceptionTypes": []
  }
 ],
 "containingPackage": {
  "firstSentenceTags": [
   {
    "text": "Javadoc for the package, from package-info.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "name": "com.surfapi.test",
  "metaType": "package"
 },
 "wildcardType": null,
 "superclassType": null,
 "commentText": "A simple interface for testing.",
 "seeTags": [],
 "name": "DemoInterface",
 "qualifiedTypeName": "com.surfapi.test.DemoInterface",
 "interfaces": [],
 "modifiers": "public interface",
 "containingClass": null,
 "parameterizedType": null,
 "fields": [],
 "tags": [],
 "typeParameters": [],
 "simpleTypeName": "DemoInterface",
 "qualifiedName": "com.surfapi.test.DemoInterface",
 "innerClasses": [],
 "constructors": [],
 "metaType": "interface",
 "typeName": "DemoInterface",
 "interfaceTypes": [],
 "firstSentenceTags": [
  {
   "text": "A simple interface for testing.",
   "name": "Text",
   "kind": "Text"
  }
 ],
 "dimension": "",
 "typeParamTags": [],
 "superclass": null,
 "enumConstants": [],
 "modifierSpecifier": 513,
 "toString": "com.surfapi.test.DemoInterface",
 "annotations": [],
 "rawCommentText": " A simple interface for testing.\n",
 "inlineTags": [
  {
   "text": "A simple interface for testing.",
   "name": "Text",
   "kind": "Text"
  }
 ]
}
{
 "throwsTags": [],
 "containingPackage": {
  "firstSentenceTags": [
   {
    "text": "Javadoc for the package, from package-info.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "name": "com.surfapi.test",
  "metaType": "package"
 },
 "isSynthetic": false,
 "commentText": "Interface documentation for the method interfaceMethod.",
 "seeTags": [],
 "name": "interfaceMethod",
 "parameters": [
  {
   "typeName": "String",
   "name": "parm1",
   "toString": "String parm1",
   "annotations": [],
   "type": {
    "typeName": "String",
    "dimension": "",
    "simpleTypeName": "String",
    "qualifiedTypeName": "java.lang.String",
    "wildcardType": null,
    "toString": "java.lang.String",
    "parameterizedType": null
   }
  }
 ],
 "modifiers": "public",
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "A simple interface for testing.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.test.DemoInterface",
  "name": "DemoInterface",
  "modifiers": "public interface",
  "metaType": "interface"
 },
 "thrownExceptions": [],
 "signature": "(java.lang.String)",
 "tags": [
  {
   "text": "parm1  some parameter",
   "name": "@param",
   "kind": "@param"
  }
 ],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.test.DemoInterface.interfaceMethod",
 "paramTags": [
  {
   "text": "parm1  some parameter",
   "parameterComment": "some parameter",
   "name": "@param",
   "parameterName": "parm1",
   "kind": "@param"
  }
 ],
 "returnType": {
  "typeName": "void",
  "dimension": "",
  "simpleTypeName": "void",
  "qualifiedTypeName": "void",
  "wildcardType": null,
  "toString": "void",
  "parameterizedType": null
 },
 "metaType": "method",
 "thrownExceptionTypes": [],
 "firstSentenceTags": [
  {
   "text": "Interface documentation for the method interfaceMethod.",
   "name": "Text",
   "kind": "Text"
  }
 ],
 "typeParamTags": [],
 "modifierSpecifier": 1,
 "annotations": [],
 "flatSignature": "(String)",
 "rawCommentText": " Interface documentation for the method interfaceMethod.\n \n @param parm1  some parameter\n",
 "inlineTags": [
  {
   "text": "Interface documentation for the method interfaceMethod.",
   "name": "Text",
   "kind": "Text"
  }
 ]
}
{
 "methods": [
  {
   "firstSentenceTags": [],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.test.DemoJavadoc.getAnnotation",
   "name": "getAnnotation",
   "flatSignature": "(DemoJavadoc)",
   "parameters": [
    {
     "name": "demoJavadoc",
     "type": {
      "typeName": "DemoJavadoc",
      "dimension": "",
      "simpleTypeName": "DemoJavadoc",
      "qualifiedTypeName": "com.surfapi.test.DemoJavadoc",
      "wildcardType": null,
      "toString": "com.surfapi.test.DemoJavadoc",
      "parameterizedType": {
       "typeArguments": []
      }
     }
    }
   ],
   "modifiers": "public",
   "returnType": {
    "typeName": "DemoAnnotation",
    "dimension": "",
    "simpleTypeName": "DemoAnnotation",
    "qualifiedTypeName": "com.surfapi.test.DemoAnnotation",
    "wildcardType": null,
    "toString": "com.surfapi.test.DemoAnnotation",
    "parameterizedType": null
   },
   "metaType": "method",
   "thrownExceptionTypes": [
    {
     "typeName": "DemoJavadocException",
     "dimension": "",
     "simpleTypeName": "DemoJavadocException",
     "qualifiedTypeName": "com.surfapi.test.DemoJavadocException",
     "wildcardType": null,
     "toString": "com.surfapi.test.DemoJavadocException",
     "parameterizedType": null
    }
   ]
  },
  {
   "firstSentenceTags": [
    {
     "text": "This is an abstract method.",
     "name": "Text",
     "kind": "Text"
    }
   ],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.test.DemoJavadoc.someAbstractMethod",
   "name": "someAbstractMethod",
   "flatSignature": "(String[])",
   "parameters": [
    {
     "name": "strs",
     "type": {
      "typeName": "String",
      "dimension": "[]",
      "simpleTypeName": "String",
      "qualifiedTypeName": "java.lang.String",
      "wildcardType": null,
      "toString": "java.lang.String[]",
      "parameterizedType": null
     }
    }
   ],
   "modifiers": "public abstract",
   "returnType": {
    "typeName": "void",
    "dimension": "",
    "simpleTypeName": "void",
    "qualifiedTypeName": "void",
    "wildcardType": null,
    "toString": "void",
    "parameterizedType": null
   },
   "metaType": "method",
   "thrownExceptionTypes": []
  },
  {
   "firstSentenceTags": [
    {
     "text": "This is a static method.",
     "name": "Text",
     "kind": "Text"
    }
   ],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.test.DemoJavadoc.someStaticMethod",
   "name": "someStaticMethod",
   "flatSignature": "()",
   "parameters": [],
   "modifiers": "public static",
   "returnType": {
    "typeName": "int",
    "dimension": "",
    "simpleTypeName": "int",
    "qualifiedTypeName": "int",
    "wildcardType": null,
    "toString": "int",
    "parameterizedType": null
   },
   "metaType": "method",
   "thrownExceptionTypes": []
  },
  {
   "firstSentenceTags": [
    {
     "text": "This is the first sentence of the javadoc description for method parse(URL).",
     "name": "Text",
     "kind": "Text"
    }
   ],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.test.DemoJavadoc.parse",
   "name": "parse",
   "flatSignature": "(URL, List<T>)",
   "parameters": [
    {
     "name": "url",
     "type": {
      "typeName": "URL",
      "dimension": "",
      "simpleTypeName": "URL",
      "qualifiedTypeName": "java.net.URL",
      "wildcardType": null,
      "toString": "java.net.URL",
      "parameterizedType": null
     }
    },
    {
     "name": "y",
     "type": {
      "typeName": "List",
      "dimension": "",
      "simpleTypeName": "List",
      "qualifiedTypeName": "java.util.List",
      "wildcardType": null,
      "toString": "java.util.List<T>",
      "parameterizedType": {
       "typeArguments": [
        {
         "typeName": "T",
         "dimension": "",
         "simpleTypeName": "T",
         "qualifiedTypeName": "T",
         "wildcardType": null,
         "toString": "T extends java.util.List",
         "parameterizedType": null
        }
       ]
      }
     }
    }
   ],
   "modifiers": "public",
   "returnType": {
    "typeName": "InputStream",
    "dimension": "",
    "simpleTypeName": "InputStream",
    "qualifiedTypeName": "java.io.InputStream",
    "wildcardType": null,
    "toString": "java.io.InputStream",
    "parameterizedType": null
   },
   "metaType": "method",
   "thrownExceptionTypes": [
    {
     "typeName": "IOException",
     "dimension": "",
     "simpleTypeName": "IOException",
     "qualifiedTypeName": "java.io.IOException",
     "wildcardType": null,
     "toString": "java.io.IOException",
     "parameterizedType": null
    },
    {
     "typeName": "IllegalArgumentException",
     "dimension": "",
     "simpleTypeName": "IllegalArgumentException",
     "qualifiedTypeName": "java.lang.IllegalArgumentException",
     "wildcardType": null,
     "toString": "java.lang.IllegalArgumentException",
     "parameterizedType": null
    }
   ]
  },
  {
   "firstSentenceTags": [],
   "typeParameters": [
    {
     "bounds": [],
     "typeName": "E",
     "dimension": "",
     "simpleTypeName": "E",
     "qualifiedTypeName": "E",
     "wildcardType": null,
     "toString": "E",
     "parameterizedType": null
    }
   ],
   "qualifiedName": "com.surfapi.test.DemoJavadoc.methodWithTypes",
   "name": "methodWithTypes",
   "flatSignature": "(T[], E)",
   "parameters": [
    {
     "name": "classLevelType",
     "type": {
      "typeName": "T",
      "dimension": "[]",
      "simpleTypeName": "T",
      "qualifiedTypeName": "T",
      "wildcardType": null,
      "toString": "T[]",
      "parameterizedType": null
     }
    },
    {
     "name": "methodLevelType",
     "type": {
      "typeName": "E",
      "dimension": "",
      "simpleTypeName": "E",
      "qualifiedTypeName": "E",
      "wildcardType": null,
      "toString": "E",
      "parameterizedType": null
     }
    }
   ],
   "modifiers": "public",
   "returnType": {
    "typeName": "E",
    "dimension": "",
    "simpleTypeName": "E",
    "qualifiedTypeName": "E",
    "wildcardType": null,
    "toString": "E",
    "parameterizedType": null
   },
   "metaType": "method",
   "thrownExceptionTypes": []
  },
  {
   "firstSentenceTags": [
    {
     "text": "",
     "name": "Text",
     "kind": "Text"
    },
    {
     "text": "",
     "name": "@inheritDoc",
     "kind": "@inheritDoc"
    }
   ],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.test.DemoJavadoc.call",
   "name": "call",
   "flatSignature": "()",
   "parameters": [],
   "modifiers": "public",
   "returnType": {
    "typeName": "String",
    "dimension": "",
    "simpleTypeName": "String",
    "qualifiedTypeName": "java.lang.String",
    "wildcardType": null,
    "toString": "java.lang.String",
    "parameterizedType": null
   },
   "metaType": "method",
   "thrownExceptionTypes": [
    {
     "typeName": "Exception",
     "dimension": "",
     "simpleTypeName": "Exception",
     "qualifiedTypeName": "java.lang.Exception",
     "wildcardType": null,
     "toString": "java.lang.Exception",
     "parameterizedType": null
    }
   ]
  }
 ],
 "containingPackage": {
  "firstSentenceTags": [
   {
    "text": "Javadoc for the package, from package-info.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "name": "com.surfapi.test",
  "metaType": "package"
 },
 "wildcardType": null,
 "superclassType": {
  "typeName": "Object",
  "dimension": "",
  "simpleTypeName": "Object",
  "qualifiedTypeName": "java.lang.Object",
  "wildcardType": null,
  "toString": "java.lang.Object",
  "parameterizedType": null
 },
 "commentText": "A test file used for parsing its javadoc comments.\n\n This file was copied from {@link it.sauronsoftware.feed4j.FeedParser FeedParser}.\n This file links to {@link com.surfapi.test.DemoAnnotation}.\n It also links in plaint text: {@linkplain com.surfapi.test.DemoJavadocException}\n\n And here is some {@literal literal text like <hello> surrounded by brackets}\n\n And here is some malicious scripting: <script>window.alert(\"hello from DemoJavadoc.commentText\")<\/script>\n\n Here's some <code>code within a code tag <\/code>.\n\n Compared to the @{code at-code tag, with malicious script: <script>window.alert(\"hello from DemoJavadoc.commentText.@code\")<\/script>}",
 "seeTags": [
  {
   "text": "<a href=\"http:\/\/docs.oracle.com\/javase\/7\/docs\/technotes\/tools\/windows\/javadoc.html#link\">Javadoc Reference Guide<\/a>",
   "name": "@see",
   "kind": "@see"
  },
  {
   "text": "com.surfapi.javadoc.JsonDoclet",
   "name": "@see",
   "kind": "@see"
  },
  {
   "text": "com.surfapi.javadoc.JsonDoclet#processType",
   "name": "@see",
   "kind": "@see"
  },
  {
   "text": "java.net.URL#equals The URL.equals method",
   "name": "@see",
   "kind": "@see"
  }
 ],
 "name": "DemoJavadoc",
 "qualifiedTypeName": "com.surfapi.test.DemoJavadoc",
 "interfaces": [
  {
   "firstSentenceTags": [],
   "qualifiedName": "java.util.concurrent.Callable",
   "name": "Callable",
   "modifiers": "public interface",
   "metaType": "interface"
  },
  {
   "firstSentenceTags": [
    {
     "text": "A simple interface for testing.",
     "name": "Text",
     "kind": "Text"
    }
   ],
   "qualifiedName": "com.surfapi.test.DemoInterface",
   "name": "DemoInterface",
   "modifiers": "public interface",
   "metaType": "interface"
  }
 ],
 "modifiers": "public abstract",
 "containingClass": null,
 "parameterizedType": null,
 "fields": [
  {
   "constantValueExpression": null,
   "firstSentenceTags": [
    {
     "text": "A protected member String array.",
     "name": "Text",
     "kind": "Text"
    }
   ],
   "qualifiedName": "com.surfapi.test.DemoJavadoc.y",
   "name": "y",
   "type": {
    "typeName": "String",
    "dimension": "[]",
    "simpleTypeName": "String",
    "qualifiedTypeName": "java.lang.String",
    "wildcardType": null,
    "toString": "java.lang.String[]",
    "parameterizedType": null
   },
   "modifiers": "protected transient volatile",
   "metaType": "field"
  },
  {
   "constantValueExpression": "\"ZZZ\"",
   "firstSentenceTags": [
    {
     "text": "A static final member named z.",
     "name": "Text",
     "kind": "Text"
    }
   ],
   "qualifiedName": "com.surfapi.test.DemoJavadoc.z",
   "name": "z",
   "type": {
    "typeName": "String",
    "dimension": "",
    "simpleTypeName": "String",
    "qualifiedTypeName": "java.lang.String",
    "wildcardType": null,
    "toString": "java.lang.String",
    "parameterizedType": null
   },
   "modifiers": "public static final",
   "metaType": "field"
  }
 ],
 "tags": [
  {
   "text": "<T> A generic type parm T, extends List",
   "name": "@param",
   "kind": "@param"
  },
  {
   "text": "Rob Alderman",
   "name": "@author",
   "kind": "@author"
  },
  {
   "text": "1.0",
   "name": "@since",
   "kind": "@since"
  },
  {
   "text": "1.0",
   "name": "@version",
   "kind": "@version"
  },
  {
   "text": "<a href=\"http:\/\/docs.oracle.com\/javase\/7\/docs\/technotes\/tools\/windows\/javadoc.html#link\">Javadoc Reference Guide<\/a>",
   "name": "@see",
   "kind": "@see"
  },
  {
   "text": "com.surfapi.javadoc.JsonDoclet",
   "name": "@see",
   "kind": "@see"
  },
  {
   "text": "com.surfapi.javadoc.JsonDoclet#processType",
   "name": "@see",
   "kind": "@see"
  },
  {
   "text": "java.net.URL#equals The URL.equals method",
   "name": "@see",
   "kind": "@see"
  }
 ],
 "typeParameters": [
  {
   "bounds": [
    {
     "typeName": "List",
     "dimension": "",
     "simpleTypeName": "List",
     "qualifiedTypeName": "java.util.List",
     "wildcardType": null,
     "toString": "java.util.List",
     "parameterizedType": {
      "typeArguments": []
     }
    }
   ],
   "typeName": "T",
   "dimension": "",
   "simpleTypeName": "T",
   "qualifiedTypeName": "T",
   "wildcardType": null,
   "toString": "T extends java.util.List",
   "parameterizedType": null
  }
 ],
 "simpleTypeName": "DemoJavadoc",
 "qualifiedName": "com.surfapi.test.DemoJavadoc",
 "innerClasses": [
  {
   "firstSentenceTags": [
    {
     "text": "Javadoc for non-static inner class.",
     "name": "Text",
     "kind": "Text"
    }
   ],
   "qualifiedName": "com.surfapi.test.DemoJavadoc.NonStaticInnerClass",
   "name": "DemoJavadoc.NonStaticInnerClass",
   "modifiers": "public",
   "metaType": "class"
  },
  {
   "firstSentenceTags": [
    {
     "text": "Javadoc for static inner class.",
     "name": "Text",
     "kind": "Text"
    }
   ],
   "qualifiedName": "com.surfapi.test.DemoJavadoc.StaticInnerClass",
   "name": "DemoJavadoc.StaticInnerClass",
   "modifiers": "public static",
   "metaType": "class"
  }
 ],
 "constructors": [
  {
   "firstSentenceTags": [
    {
     "text": "CTOR.",
     "name": "Text",
     "kind": "Text"
    }
   ],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.test.DemoJavadoc",
   "name": "DemoJavadoc",
   "flatSignature": "()",
   "parameters": [],
   "modifiers": "public",
   "metaType": "constructor",
   "thrownExceptionTypes": []
  },
  {
   "firstSentenceTags": [
    {
     "text": "CTOR.",
     "name": "Text",
     "kind": "Text"
    }
   ],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.test.DemoJavadoc",
   "name": "DemoJavadoc",
   "flatSignature": "(String)",
   "parameters": [
    {
     "name": "b",
     "type": {
      "typeName": "String",
      "dimension": "",
      "simpleTypeName": "String",
      "qualifiedTypeName": "java.lang.String",
      "wildcardType": null,
      "toString": "java.lang.String",
      "parameterizedType": null
     }
    }
   ],
   "modifiers": "public",
   "metaType": "constructor",
   "thrownExceptionTypes": []
  }
 ],
 "metaType": "class",
 "typeName": "DemoJavadoc",
 "interfaceTypes": [
  {
   "typeName": "Callable",
   "dimension": "",
   "simpleTypeName": "Callable",
   "qualifiedTypeName": "java.util.concurrent.Callable",
   "wildcardType": null,
   "toString": "java.util.concurrent.Callable<java.lang.String>",
   "parameterizedType": {
    "typeArguments": [
     {
      "typeName": "String",
      "dimension": "",
      "simpleTypeName": "String",
      "qualifiedTypeName": "java.lang.String",
      "wildcardType": null,
      "toString": "java.lang.String",
      "parameterizedType": null
     }
    ]
   }
  },
  {
   "typeName": "DemoInterface",
   "dimension": "",
   "simpleTypeName": "DemoInterface",
   "qualifiedTypeName": "com.surfapi.test.DemoInterface",
   "wildcardType": null,
   "toString": "com.surfapi.test.DemoInterface",
   "parameterizedType": null
  }
 ],
 "firstSentenceTags": [
  {
   "text": "A test file used for parsing its javadoc comments.",
   "name": "Text",
   "kind": "Text"
  }
 ],
 "dimension": "",
 "typeParamTags": [
  {
   "text": "<T> A generic type parm T, extends List",
   "parameterComment": "A generic type parm T, extends List",
   "name": "@param",
   "parameterName": "T",
   "kind": "@param"
  }
 ],
 "superclass": {
  "firstSentenceTags": [],
  "qualifiedName": "java.lang.Object",
  "name": "Object",
  "modifiers": "public",
  "metaType": "class"
 },
 "enumConstants": [],
 "modifierSpecifier": 1025,
 "toString": "com.surfapi.test.DemoJavadoc<T extends java.util.List>",
 "annotations": [
  {
   "elementValues": [
    {
     "element": {
      "firstSentenceTags": [
       {
        "text": "Javadoc comment for ze author.",
        "name": "Text",
        "kind": "Text"
       }
      ],
      "qualifiedName": "com.surfapi.test.DemoAnnotation.author",
      "name": "author",
      "modifiers": "public",
      "returnType": {
       "typeName": "String",
       "dimension": "",
       "simpleTypeName": "String",
       "qualifiedTypeName": "java.lang.String",
       "wildcardType": null,
       "toString": "java.lang.String",
       "parameterizedType": null
      },
      "metaType": "annotationTypeElement"
     },
     "value": {
      "toString": "\"Rob Alderman\""
     }
    }
   ],
   "annotationType": {
    "firstSentenceTags": [
     {
      "text": "DemoAnnotation is a custom annotation type.",
      "name": "Text",
      "kind": "Text"
     }
    ],
    "qualifiedName": "com.surfapi.test.DemoAnnotation",
    "name": "DemoAnnotation",
    "modifiers": "public interface",
    "metaType": "annotationType"
   }
  }
 ],
 "rawCommentText": " A test file used for parsing its javadoc comments.\n\n This file was copied from {@link it.sauronsoftware.feed4j.FeedParser FeedParser}.\n This file links to {@link com.surfapi.test.DemoAnnotation}.\n It also links in plaint text: {@linkplain com.surfapi.test.DemoJavadocException}\n\n And here is some {@literal literal text like <hello> surrounded by brackets}\n\n And here is some malicious scripting: <script>window.alert(\"hello from DemoJavadoc.commentText\")<\/script>\n\n Here's some <code>code within a code tag <\/code>.\n\n Compared to the @{code at-code tag, with malicious script: <script>window.alert(\"hello from DemoJavadoc.commentText.@code\")<\/script>}\n \n @param <T> A generic type parm T, extends List\n \n @author Rob Alderman\n @since 1.0\n @version 1.0\n\n @see <a href=\"http:\/\/docs.oracle.com\/javase\/7\/docs\/technotes\/tools\/windows\/javadoc.html#link\">Javadoc Reference Guide<\/a>\n @see com.surfapi.javadoc.JsonDoclet\n @see com.surfapi.javadoc.JsonDoclet#processType\n @see java.net.URL#equals The URL.equals method\n\n",
 "inlineTags": [
  {
   "text": "A test file used for parsing its javadoc comments.\n\n This file was copied from ",
   "name": "Text",
   "kind": "Text"
  },
  {
   "text": "it.sauronsoftware.feed4j.FeedParser FeedParser",
   "name": "@link",
   "kind": "@see"
  },
  {
   "text": ".\n This file links to ",
   "name": "Text",
   "kind": "Text"
  },
  {
   "text": "com.surfapi.test.DemoAnnotation",
   "name": "@link",
   "kind": "@see"
  },
  {
   "text": ".\n It also links in plaint text: ",
   "name": "Text",
   "kind": "Text"
  },
  {
   "text": "com.surfapi.test.DemoJavadocException",
   "name": "@linkplain",
   "kind": "@see"
  },
  {
   "text": "\n\n And here is some ",
   "name": "Text",
   "kind": "Text"
  },
  {
   "text": "literal text like <hello> surrounded by brackets",
   "name": "@literal",
   "kind": "@literal"
  },
  {
   "text": "\n\n And here is some malicious scripting: <script>window.alert(\"hello from DemoJavadoc.commentText\")<\/script>\n\n Here's some <code>code within a code tag <\/code>.\n\n Compared to the @{code at-code tag, with malicious script: <script>window.alert(\"hello from DemoJavadoc.commentText.@code\")<\/script>}",
   "name": "Text",
   "kind": "Text"
  }
 ]
}
{
 "throwsTags": [
  {
   "exceptionName": "DemoJavadocException",
   "exceptionType": {
    "typeName": "DemoJavadocException",
    "dimension": "",
    "simpleTypeName": "DemoJavadocException",
    "qualifiedTypeName": "com.surfapi.test.DemoJavadocException",
    "wildcardType": null,
    "toString": "com.surfapi.test.DemoJavadocException",
    "parameterizedType": null
   },
   "text": "DemoJavadocException for whatever reason",
   "exceptionComment": "for whatever reason",
   "name": "@throws",
   "kind": "@throws"
  },
  {
   "exceptionName": "NullPointerException",
   "exceptionType": {
    "typeName": "NullPointerException",
    "dimension": "",
    "simpleTypeName": "NullPointerException",
    "qualifiedTypeName": "java.lang.NullPointerException",
    "wildcardType": null,
    "toString": "java.lang.NullPointerException",
    "parameterizedType": null
   },
   "text": "NullPointerException if you gimme a null",
   "exceptionComment": "if you gimme a null",
   "name": "@throws",
   "kind": "@throws"
  }
 ],
 "containingPackage": {
  "firstSentenceTags": [
   {
    "text": "Javadoc for the package, from package-info.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "name": "com.surfapi.test",
  "metaType": "package"
 },
 "isSynthetic": false,
 "commentText": "",
 "seeTags": [],
 "name": "getAnnotation",
 "parameters": [
  {
   "typeName": "com.surfapi.test.DemoJavadoc",
   "name": "demoJavadoc",
   "toString": "com.surfapi.test.DemoJavadoc demoJavadoc",
   "annotations": [],
   "type": {
    "typeName": "DemoJavadoc",
    "dimension": "",
    "simpleTypeName": "DemoJavadoc",
    "qualifiedTypeName": "com.surfapi.test.DemoJavadoc",
    "wildcardType": null,
    "toString": "com.surfapi.test.DemoJavadoc",
    "parameterizedType": {
     "typeArguments": []
    }
   }
  }
 ],
 "modifiers": "public",
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "A test file used for parsing its javadoc comments.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.test.DemoJavadoc",
  "name": "DemoJavadoc",
  "modifiers": "public abstract",
  "metaType": "class"
 },
 "thrownExceptions": [
  {
   "firstSentenceTags": [
    {
     "text": "A demo exception class.",
     "name": "Text",
     "kind": "Text"
    }
   ],
   "qualifiedName": "com.surfapi.test.DemoJavadocException",
   "name": "DemoJavadocException",
   "modifiers": "public",
   "metaType": "class"
  }
 ],
 "signature": "(com.surfapi.test.DemoJavadoc)",
 "tags": [
  {
   "text": "nope this parm doesn't exist!",
   "name": "@param",
   "kind": "@param"
  },
  {
   "text": "demoJavdoc oh man! i misspelled demoJavadoc!",
   "name": "@param",
   "kind": "@param"
  },
  {
   "text": "DemoJavadocException for whatever reason",
   "name": "@throws",
   "kind": "@throws"
  },
  {
   "text": "NullPointerException if you gimme a null",
   "name": "@throws",
   "kind": "@throws"
  }
 ],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.test.DemoJavadoc.getAnnotation",
 "paramTags": [
  {
   "text": "nope this parm doesn't exist!",
   "parameterComment": "this parm doesn't exist!",
   "name": "@param",
   "parameterName": "nope",
   "kind": "@param"
  },
  {
   "text": "demoJavdoc oh man! i misspelled demoJavadoc!",
   "parameterComment": "oh man! i misspelled demoJavadoc!",
   "name": "@param",
   "parameterName": "demoJavdoc",
   "kind": "@param"
  }
 ],
 "returnType": {
  "typeName": "DemoAnnotation",
  "dimension": "",
  "simpleTypeName": "DemoAnnotation",
  "qualifiedTypeName": "com.surfapi.test.DemoAnnotation",
  "wildcardType": null,
  "toString": "com.surfapi.test.DemoAnnotation",
  "parameterizedType": null
 },
 "metaType": "method",
 "thrownExceptionTypes": [
  {
   "typeName": "DemoJavadocException",
   "dimension": "",
   "simpleTypeName": "DemoJavadocException",
   "qualifiedTypeName": "com.surfapi.test.DemoJavadocException",
   "wildcardType": null,
   "toString": "com.surfapi.test.DemoJavadocException",
   "parameterizedType": null
  }
 ],
 "firstSentenceTags": [],
 "typeParamTags": [],
 "modifierSpecifier": 1,
 "annotations": [],
 "flatSignature": "(DemoJavadoc)",
 "rawCommentText": " \n @param nope this parm doesn't exist!\n @param demoJavdoc oh man! i misspelled demoJavadoc!\n \n @throws DemoJavadocException for whatever reason\n @throws NullPointerException if you gimme a null\n",
 "inlineTags": []
}
{
 "throwsTags": [],
 "containingPackage": {
  "firstSentenceTags": [
   {
    "text": "Javadoc for the package, from package-info.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "name": "com.surfapi.test",
  "metaType": "package"
 },
 "isSynthetic": false,
 "commentText": "This is an abstract method.",
 "seeTags": [],
 "name": "someAbstractMethod",
 "parameters": [
  {
   "typeName": "java.lang.String[]",
   "name": "strs",
   "toString": "java.lang.String[] strs",
   "annotations": [],
   "type": {
    "typeName": "String",
    "dimension": "[]",
    "simpleTypeName": "String",
    "qualifiedTypeName": "java.lang.String",
    "wildcardType": null,
    "toString": "java.lang.String[]",
    "parameterizedType": null
   }
  }
 ],
 "modifiers": "public abstract",
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "A test file used for parsing its javadoc comments.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.test.DemoJavadoc",
  "name": "DemoJavadoc",
  "modifiers": "public abstract",
  "metaType": "class"
 },
 "thrownExceptions": [],
 "signature": "(java.lang.String[])",
 "tags": [],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.test.DemoJavadoc.someAbstractMethod",
 "paramTags": [],
 "returnType": {
  "typeName": "void",
  "dimension": "",
  "simpleTypeName": "void",
  "qualifiedTypeName": "void",
  "wildcardType": null,
  "toString": "void",
  "parameterizedType": null
 },
 "metaType": "method",
 "thrownExceptionTypes": [],
 "firstSentenceTags": [
  {
   "text": "This is an abstract method.",
   "name": "Text",
   "kind": "Text"
  }
 ],
 "typeParamTags": [],
 "modifierSpecifier": 1025,
 "annotations": [],
 "flatSignature": "(String[])",
 "rawCommentText": " This is an abstract method.\n",
 "inlineTags": [
  {
   "text": "This is an abstract method.",
   "name": "Text",
   "kind": "Text"
  }
 ]
}
{
 "throwsTags": [],
 "containingPackage": {
  "firstSentenceTags": [
   {
    "text": "Javadoc for the package, from package-info.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "name": "com.surfapi.test",
  "metaType": "package"
 },
 "isSynthetic": false,
 "commentText": "This is a static method.",
 "seeTags": [],
 "name": "someStaticMethod",
 "parameters": [],
 "modifiers": "public static",
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "A test file used for parsing its javadoc comments.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.test.DemoJavadoc",
  "name": "DemoJavadoc",
  "modifiers": "public abstract",
  "metaType": "class"
 },
 "thrownExceptions": [],
 "signature": "()",
 "tags": [],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.test.DemoJavadoc.someStaticMethod",
 "paramTags": [],
 "returnType": {
  "typeName": "int",
  "dimension": "",
  "simpleTypeName": "int",
  "qualifiedTypeName": "int",
  "wildcardType": null,
  "toString": "int",
  "parameterizedType": null
 },
 "metaType": "method",
 "thrownExceptionTypes": [],
 "firstSentenceTags": [
  {
   "text": "This is a static method.",
   "name": "Text",
   "kind": "Text"
  }
 ],
 "typeParamTags": [],
 "modifierSpecifier": 9,
 "annotations": [],
 "flatSignature": "()",
 "rawCommentText": " This is a static method.\n",
 "inlineTags": [
  {
   "text": "This is a static method.",
   "name": "Text",
   "kind": "Text"
  }
 ]
}
{
 "throwsTags": [
  {
   "exceptionName": "IOException",
   "exceptionType": {
    "typeName": "IOException",
    "dimension": "",
    "simpleTypeName": "IOException",
    "qualifiedTypeName": "java.io.IOException",
    "wildcardType": null,
    "toString": "java.io.IOException",
    "parameterizedType": null
   },
   "text": "IOException\n             I\/O error during conetnts retrieving.",
   "exceptionComment": "I\/O error during conetnts retrieving.",
   "name": "@throws",
   "kind": "@throws"
  }
 ],
 "containingPackage": {
  "firstSentenceTags": [
   {
    "text": "Javadoc for the package, from package-info.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "name": "com.surfapi.test",
  "metaType": "package"
 },
 "isSynthetic": false,
 "commentText": "This is the first sentence of the javadoc description for method parse(URL).\n This is the second sentence of the javadoc. For more\n info on URLs go {@link java.net.URL here}.  How about a 4th sentence?",
 "seeTags": [],
 "name": "parse",
 "parameters": [
  {
   "typeName": "URL",
   "name": "url",
   "toString": "URL url",
   "annotations": [],
   "type": {
    "typeName": "URL",
    "dimension": "",
    "simpleTypeName": "URL",
    "qualifiedTypeName": "java.net.URL",
    "wildcardType": null,
    "toString": "java.net.URL",
    "parameterizedType": null
   }
  },
  {
   "typeName": "java.util.List<T>",
   "name": "y",
   "toString": "java.util.List<T> y",
   "annotations": [
    {
     "elementValues": [
      {
       "element": {
        "firstSentenceTags": [
         {
          "text": "Javadoc comment for ze author.",
          "name": "Text",
          "kind": "Text"
         }
        ],
        "qualifiedName": "com.surfapi.test.DemoAnnotation.author",
        "name": "author",
        "modifiers": "public",
        "returnType": {
         "typeName": "String",
         "dimension": "",
         "simpleTypeName": "String",
         "qualifiedTypeName": "java.lang.String",
         "wildcardType": null,
         "toString": "java.lang.String",
         "parameterizedType": null
        },
        "metaType": "annotationTypeElement"
       },
       "value": {
        "toString": "\"Rob\""
       }
      }
     ],
     "annotationType": {
      "firstSentenceTags": [
       {
        "text": "DemoAnnotation is a custom annotation type.",
        "name": "Text",
        "kind": "Text"
       }
      ],
      "qualifiedName": "com.surfapi.test.DemoAnnotation",
      "name": "DemoAnnotation",
      "modifiers": "public interface",
      "metaType": "annotationType"
     }
    }
   ],
   "type": {
    "typeName": "List",
    "dimension": "",
    "simpleTypeName": "List",
    "qualifiedTypeName": "java.util.List",
    "wildcardType": null,
    "toString": "java.util.List<T>",
    "parameterizedType": {
     "typeArguments": [
      {
       "typeName": "T",
       "dimension": "",
       "simpleTypeName": "T",
       "qualifiedTypeName": "T",
       "wildcardType": null,
       "toString": "T extends java.util.List",
       "parameterizedType": null
      }
     ]
    }
   }
  }
 ],
 "modifiers": "public",
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "A test file used for parsing its javadoc comments.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.test.DemoJavadoc",
  "name": "DemoJavadoc",
  "modifiers": "public abstract",
  "metaType": "class"
 },
 "thrownExceptions": [
  {
   "firstSentenceTags": [],
   "qualifiedName": "java.io.IOException",
   "name": "IOException",
   "modifiers": "public",
   "metaType": "class"
  },
  {
   "firstSentenceTags": [],
   "qualifiedName": "java.lang.IllegalArgumentException",
   "name": "IllegalArgumentException",
   "modifiers": "public",
   "metaType": "class"
  }
 ],
 "signature": "(java.net.URL, java.util.List<T>)",
 "tags": [
  {
   "text": "url   The first parm is a feed URL.<script>window.alert(\"hello from parse.url @param\");<\/script>\n              The description for the url parm has two lines.",
   "name": "@param",
   "kind": "@param"
  },
  {
   "text": "y     An List param named y.",
   "name": "@param",
   "kind": "@param"
  },
  {
   "text": "An input stream for the feed <script>window.alert(\"hello from parse.url @return \");<\/script>",
   "name": "@return",
   "kind": "@return"
  },
  {
   "text": "IOException\n             I\/O error during conetnts retrieving.",
   "name": "@throws",
   "kind": "@throws"
  },
  {
   "text": "",
   "name": "@deprecated",
   "kind": "@deprecated"
  }
 ],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.test.DemoJavadoc.parse",
 "paramTags": [
  {
   "text": "url   The first parm is a feed URL.<script>window.alert(\"hello from parse.url @param\");<\/script>\n              The description for the url parm has two lines.",
   "parameterComment": "The first parm is a feed URL.<script>window.alert(\"hello from parse.url @param\");<\/script>\n              The description for the url parm has two lines.",
   "name": "@param",
   "parameterName": "url",
   "kind": "@param"
  },
  {
   "text": "y     An List param named y.",
   "parameterComment": "An List param named y.",
   "name": "@param",
   "parameterName": "y",
   "kind": "@param"
  }
 ],
 "returnType": {
  "typeName": "InputStream",
  "dimension": "",
  "simpleTypeName": "InputStream",
  "qualifiedTypeName": "java.io.InputStream",
  "wildcardType": null,
  "toString": "java.io.InputStream",
  "parameterizedType": null
 },
 "metaType": "method",
 "thrownExceptionTypes": [
  {
   "typeName": "IOException",
   "dimension": "",
   "simpleTypeName": "IOException",
   "qualifiedTypeName": "java.io.IOException",
   "wildcardType": null,
   "toString": "java.io.IOException",
   "parameterizedType": null
  },
  {
   "typeName": "IllegalArgumentException",
   "dimension": "",
   "simpleTypeName": "IllegalArgumentException",
   "qualifiedTypeName": "java.lang.IllegalArgumentException",
   "wildcardType": null,
   "toString": "java.lang.IllegalArgumentException",
   "parameterizedType": null
  }
 ],
 "firstSentenceTags": [
  {
   "text": "This is the first sentence of the javadoc description for method parse(URL).",
   "name": "Text",
   "kind": "Text"
  }
 ],
 "typeParamTags": [],
 "modifierSpecifier": 1,
 "annotations": [],
 "flatSignature": "(URL, List<T>)",
 "rawCommentText": " This is the first sentence of the javadoc description for method parse(URL).\n This is the second sentence of the javadoc. For more\n info on URLs go {@link java.net.URL here}.  How about a 4th sentence? \n \n @param url   The first parm is a feed URL.<script>window.alert(\"hello from parse.url @param\");<\/script>\n              The description for the url parm has two lines.\n @param y     An List param named y.\n             \n @return An input stream for the feed <script>window.alert(\"hello from parse.url @return \");<\/script>\n \n @throws IOException\n             I\/O error during conetnts retrieving.\n\n @deprecated\n",
 "inlineTags": [
  {
   "text": "This is the first sentence of the javadoc description for method parse(URL).\n This is the second sentence of the javadoc. For more\n info on URLs go ",
   "name": "Text",
   "kind": "Text"
  },
  {
   "text": "java.net.URL here",
   "name": "@link",
   "kind": "@see"
  },
  {
   "text": ".  How about a 4th sentence?",
   "name": "Text",
   "kind": "Text"
  }
 ]
}
{
 "throwsTags": [],
 "containingPackage": {
  "firstSentenceTags": [
   {
    "text": "Javadoc for the package, from package-info.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "name": "com.surfapi.test",
  "metaType": "package"
 },
 "isSynthetic": false,
 "commentText": "",
 "seeTags": [],
 "name": "methodWithTypes",
 "parameters": [
  {
   "typeName": "T[]",
   "name": "classLevelType",
   "toString": "T[] classLevelType",
   "annotations": [],
   "type": {
    "typeName": "T",
    "dimension": "[]",
    "simpleTypeName": "T",
    "qualifiedTypeName": "T",
    "wildcardType": null,
    "toString": "T[]",
    "parameterizedType": null
   }
  },
  {
   "typeName": "E",
   "name": "methodLevelType",
   "toString": "E methodLevelType",
   "annotations": [],
   "type": {
    "typeName": "E",
    "dimension": "",
    "simpleTypeName": "E",
    "qualifiedTypeName": "E",
    "wildcardType": null,
    "toString": "E",
    "parameterizedType": null
   }
  }
 ],
 "modifiers": "public",
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "A test file used for parsing its javadoc comments.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.test.DemoJavadoc",
  "name": "DemoJavadoc",
  "modifiers": "public abstract",
  "metaType": "class"
 },
 "thrownExceptions": [],
 "signature": "(T[], E)",
 "tags": [
  {
   "text": "classLevelType Is of the class-level generic type T.",
   "name": "@param",
   "kind": "@param"
  },
  {
   "text": "methodLevelType Is of the method-level generic type E.",
   "name": "@param",
   "kind": "@param"
  },
  {
   "text": "<E> A generic type parm E",
   "name": "@param",
   "kind": "@param"
  },
  {
   "text": "E some object of type E",
   "name": "@return",
   "kind": "@return"
  }
 ],
 "typeParameters": [
  {
   "bounds": [],
   "typeName": "E",
   "dimension": "",
   "simpleTypeName": "E",
   "qualifiedTypeName": "E",
   "wildcardType": null,
   "toString": "E",
   "parameterizedType": null
  }
 ],
 "qualifiedName": "com.surfapi.test.DemoJavadoc.methodWithTypes",
 "paramTags": [
  {
   "text": "classLevelType Is of the class-level generic type T.",
   "parameterComment": "Is of the class-level generic type T.",
   "name": "@param",
   "parameterName": "classLevelType",
   "kind": "@param"
  },
  {
   "text": "methodLevelType Is of the method-level generic type E.",
   "parameterComment": "Is of the method-level generic type E.",
   "name": "@param",
   "parameterName": "methodLevelType",
   "kind": "@param"
  }
 ],
 "returnType": {
  "typeName": "E",
  "dimension": "",
  "simpleTypeName": "E",
  "qualifiedTypeName": "E",
  "wildcardType": null,
  "toString": "E",
  "parameterizedType": null
 },
 "metaType": "method",
 "thrownExceptionTypes": [],
 "firstSentenceTags": [],
 "typeParamTags": [
  {
   "text": "<E> A generic type parm E",
   "parameterComment": "A generic type parm E",
   "name": "@param",
   "parameterName": "E",
   "kind": "@param"
  }
 ],
 "modifierSpecifier": 1,
 "annotations": [],
 "flatSignature": "(T[], E)",
 "rawCommentText": " @param classLevelType Is of the class-level generic type T.\n @param methodLevelType Is of the method-level generic type E.\n @param <E> A generic type parm E\n \n @return E some object of type E\n",
 "inlineTags": []
}
{
 "throwsTags": [],
 "containingPackage": {
  "firstSentenceTags": [
   {
    "text": "Javadoc for the package, from package-info.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "name": "com.surfapi.test",
  "metaType": "package"
 },
 "isSynthetic": false,
 "commentText": "{@inheritDoc}",
 "seeTags": [],
 "name": "call",
 "parameters": [],
 "modifiers": "public",
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "A test file used for parsing its javadoc comments.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.test.DemoJavadoc",
  "name": "DemoJavadoc",
  "modifiers": "public abstract",
  "metaType": "class"
 },
 "thrownExceptions": [
  {
   "firstSentenceTags": [],
   "qualifiedName": "java.lang.Exception",
   "name": "Exception",
   "modifiers": "public",
   "metaType": "class"
  }
 ],
 "signature": "()",
 "tags": [],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.test.DemoJavadoc.call",
 "paramTags": [],
 "returnType": {
  "typeName": "String",
  "dimension": "",
  "simpleTypeName": "String",
  "qualifiedTypeName": "java.lang.String",
  "wildcardType": null,
  "toString": "java.lang.String",
  "parameterizedType": null
 },
 "metaType": "method",
 "thrownExceptionTypes": [
  {
   "typeName": "Exception",
   "dimension": "",
   "simpleTypeName": "Exception",
   "qualifiedTypeName": "java.lang.Exception",
   "wildcardType": null,
   "toString": "java.lang.Exception",
   "parameterizedType": null
  }
 ],
 "firstSentenceTags": [
  {
   "text": "",
   "name": "Text",
   "kind": "Text"
  },
  {
   "text": "",
   "name": "@inheritDoc",
   "kind": "@inheritDoc"
  }
 ],
 "typeParamTags": [],
 "modifierSpecifier": 1,
 "annotations": [
  {
   "elementValues": [],
   "annotationType": {
    "firstSentenceTags": [],
    "qualifiedName": "java.lang.Override",
    "name": "Override",
    "modifiers": "public interface",
    "metaType": "annotationType"
   }
  }
 ],
 "flatSignature": "()",
 "rawCommentText": " {@inheritDoc}\n",
 "inlineTags": [
  {
   "text": "",
   "name": "Text",
   "kind": "Text"
  },
  {
   "text": "",
   "name": "@inheritDoc",
   "kind": "@inheritDoc"
  }
 ]
}
{
 "tags": [],
 "throwsTags": [],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.test.DemoJavadoc",
 "paramTags": [],
 "containingPackage": {
  "firstSentenceTags": [
   {
    "text": "Javadoc for the package, from package-info.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "name": "com.surfapi.test",
  "metaType": "package"
 },
 "isSynthetic": false,
 "metaType": "constructor",
 "thrownExceptionTypes": [],
 "commentText": "CTOR. default.",
 "firstSentenceTags": [
  {
   "text": "CTOR.",
   "name": "Text",
   "kind": "Text"
  }
 ],
 "typeParamTags": [],
 "seeTags": [],
 "name": "DemoJavadoc",
 "modifierSpecifier": 1,
 "parameters": [],
 "flatSignature": "()",
 "annotations": [],
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "A test file used for parsing its javadoc comments.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.test.DemoJavadoc",
  "name": "DemoJavadoc",
  "modifiers": "public abstract",
  "metaType": "class"
 },
 "modifiers": "public",
 "thrownExceptions": [],
 "rawCommentText": " CTOR. default.\n",
 "signature": "()",
 "inlineTags": [
  {
   "text": "CTOR. default.",
   "name": "Text",
   "kind": "Text"
  }
 ]
}
{
 "tags": [
  {
   "text": "b     Some {@link java.lang.String String} parameter named b.",
   "name": "@param",
   "kind": "@param"
  }
 ],
 "throwsTags": [],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.test.DemoJavadoc",
 "paramTags": [
  {
   "text": "b     Some {@link java.lang.String String} parameter named b.",
   "parameterComment": "Some {@link java.lang.String String} parameter named b.",
   "name": "@param",
   "parameterName": "b",
   "kind": "@param"
  }
 ],
 "containingPackage": {
  "firstSentenceTags": [
   {
    "text": "Javadoc for the package, from package-info.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "name": "com.surfapi.test",
  "metaType": "package"
 },
 "isSynthetic": false,
 "metaType": "constructor",
 "thrownExceptionTypes": [],
 "commentText": "CTOR.",
 "firstSentenceTags": [
  {
   "text": "CTOR.",
   "name": "Text",
   "kind": "Text"
  }
 ],
 "typeParamTags": [],
 "seeTags": [],
 "name": "DemoJavadoc",
 "modifierSpecifier": 1,
 "parameters": [
  {
   "typeName": "String",
   "name": "b",
   "toString": "String b",
   "annotations": [],
   "type": {
    "typeName": "String",
    "dimension": "",
    "simpleTypeName": "String",
    "qualifiedTypeName": "java.lang.String",
    "wildcardType": null,
    "toString": "java.lang.String",
    "parameterizedType": null
   }
  }
 ],
 "flatSignature": "(String)",
 "annotations": [],
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "A test file used for parsing its javadoc comments.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.test.DemoJavadoc",
  "name": "DemoJavadoc",
  "modifiers": "public abstract",
  "metaType": "class"
 },
 "modifiers": "public",
 "thrownExceptions": [],
 "rawCommentText": " CTOR.\n \n @param b     Some {@link java.lang.String String} parameter named b. \n",
 "signature": "(java.lang.String)",
 "inlineTags": [
  {
   "text": "CTOR.",
   "name": "Text",
   "kind": "Text"
  }
 ]
}
{
 "tags": [],
 "qualifiedName": "com.surfapi.test.DemoJavadoc.y",
 "containingPackage": {
  "firstSentenceTags": [
   {
    "text": "Javadoc for the package, from package-info.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "name": "com.surfapi.test",
  "metaType": "package"
 },
 "type": {
  "typeName": "String",
  "dimension": "[]",
  "simpleTypeName": "String",
  "qualifiedTypeName": "java.lang.String",
  "wildcardType": null,
  "toString": "java.lang.String[]",
  "parameterizedType": null
 },
 "serialFieldTags": [],
 "isSynthetic": false,
 "metaType": "field",
 "constantValue": null,
 "constantValueExpression": null,
 "commentText": "A protected member String array.",
 "firstSentenceTags": [
  {
   "text": "A protected member String array.",
   "name": "Text",
   "kind": "Text"
  }
 ],
 "seeTags": [],
 "name": "y",
 "modifierSpecifier": 196,
 "annotations": [],
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "A test file used for parsing its javadoc comments.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.test.DemoJavadoc",
  "name": "DemoJavadoc",
  "modifiers": "public abstract",
  "metaType": "class"
 },
 "modifiers": "protected transient volatile",
 "rawCommentText": " A protected member String array.\n",
 "inlineTags": [
  {
   "text": "A protected member String array.",
   "name": "Text",
   "kind": "Text"
  }
 ]
}
{
 "tags": [],
 "qualifiedName": "com.surfapi.test.DemoJavadoc.z",
 "containingPackage": {
  "firstSentenceTags": [
   {
    "text": "Javadoc for the package, from package-info.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "name": "com.surfapi.test",
  "metaType": "package"
 },
 "type": {
  "typeName": "String",
  "dimension": "",
  "simpleTypeName": "String",
  "qualifiedTypeName": "java.lang.String",
  "wildcardType": null,
  "toString": "java.lang.String",
  "parameterizedType": null
 },
 "serialFieldTags": [],
 "isSynthetic": false,
 "metaType": "field",
 "constantValue": "ZZZ",
 "constantValueExpression": "\"ZZZ\"",
 "commentText": "A static final member named z.",
 "firstSentenceTags": [
  {
   "text": "A static final member named z.",
   "name": "Text",
   "kind": "Text"
  }
 ],
 "seeTags": [],
 "name": "z",
 "modifierSpecifier": 25,
 "annotations": [],
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "A test file used for parsing its javadoc comments.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.test.DemoJavadoc",
  "name": "DemoJavadoc",
  "modifiers": "public abstract",
  "metaType": "class"
 },
 "modifiers": "public static final",
 "rawCommentText": " A static final member named z.\n",
 "inlineTags": [
  {
   "text": "A static final member named z.",
   "name": "Text",
   "kind": "Text"
  }
 ]
}
{
 "methods": [
  {
   "firstSentenceTags": [
    {
     "text": "This here is a method within the inner class, the non-static one.",
     "name": "Text",
     "kind": "Text"
    }
   ],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.test.DemoJavadoc.NonStaticInnerClass.innerClassMethodBlah",
   "name": "innerClassMethodBlah",
   "flatSignature": "()",
   "parameters": [],
   "modifiers": "public",
   "returnType": {
    "typeName": "void",
    "dimension": "",
    "simpleTypeName": "void",
    "qualifiedTypeName": "void",
    "wildcardType": null,
    "toString": "void",
    "parameterizedType": null
   },
   "metaType": "method",
   "thrownExceptionTypes": []
  }
 ],
 "containingPackage": {
  "firstSentenceTags": [
   {
    "text": "Javadoc for the package, from package-info.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "name": "com.surfapi.test",
  "metaType": "package"
 },
 "wildcardType": null,
 "superclassType": {
  "typeName": "Object",
  "dimension": "",
  "simpleTypeName": "Object",
  "qualifiedTypeName": "java.lang.Object",
  "wildcardType": null,
  "toString": "java.lang.Object",
  "parameterizedType": null
 },
 "commentText": "Javadoc for non-static inner class.",
 "seeTags": [],
 "name": "DemoJavadoc.NonStaticInnerClass",
 "qualifiedTypeName": "com.surfapi.test.DemoJavadoc.NonStaticInnerClass",
 "interfaces": [],
 "modifiers": "public",
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "A test file used for parsing its javadoc comments.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.test.DemoJavadoc",
  "name": "DemoJavadoc",
  "modifiers": "public abstract",
  "metaType": "class"
 },
 "parameterizedType": null,
 "fields": [],
 "tags": [],
 "typeParameters": [],
 "simpleTypeName": "NonStaticInnerClass",
 "qualifiedName": "com.surfapi.test.DemoJavadoc.NonStaticInnerClass",
 "innerClasses": [],
 "constructors": [
  {
   "firstSentenceTags": [],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.test.DemoJavadoc.NonStaticInnerClass",
   "name": "DemoJavadoc.NonStaticInnerClass",
   "flatSignature": "()",
   "parameters": [],
   "modifiers": "public",
   "metaType": "constructor",
   "thrownExceptionTypes": []
  }
 ],
 "metaType": "class",
 "typeName": "DemoJavadoc.NonStaticInnerClass",
 "interfaceTypes": [],
 "firstSentenceTags": [
  {
   "text": "Javadoc for non-static inner class.",
   "name": "Text",
   "kind": "Text"
  }
 ],
 "dimension": "",
 "typeParamTags": [],
 "superclass": {
  "firstSentenceTags": [],
  "qualifiedName": "java.lang.Object",
  "name": "Object",
  "modifiers": "public",
  "metaType": "class"
 },
 "enumConstants": [],
 "modifierSpecifier": 1,
 "toString": "com.surfapi.test.DemoJavadoc<T extends java.util.List>.NonStaticInnerClass",
 "annotations": [],
 "rawCommentText": " Javadoc for non-static inner class.\n",
 "inlineTags": [
  {
   "text": "Javadoc for non-static inner class.",
   "name": "Text",
   "kind": "Text"
  }
 ]
}
{
 "throwsTags": [],
 "containingPackage": {
  "firstSentenceTags": [
   {
    "text": "Javadoc for the package, from package-info.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "name": "com.surfapi.test",
  "metaType": "package"
 },
 "isSynthetic": false,
 "commentText": "This here is a method within the inner class, the non-static one.",
 "seeTags": [],
 "name": "innerClassMethodBlah",
 "parameters": [],
 "modifiers": "public",
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "Javadoc for non-static inner class.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.test.DemoJavadoc.NonStaticInnerClass",
  "name": "DemoJavadoc.NonStaticInnerClass",
  "modifiers": "public",
  "metaType": "class"
 },
 "thrownExceptions": [],
 "signature": "()",
 "tags": [],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.test.DemoJavadoc.NonStaticInnerClass.innerClassMethodBlah",
 "paramTags": [],
 "returnType": {
  "typeName": "void",
  "dimension": "",
  "simpleTypeName": "void",
  "qualifiedTypeName": "void",
  "wildcardType": null,
  "toString": "void",
  "parameterizedType": null
 },
 "metaType": "method",
 "thrownExceptionTypes": [],
 "firstSentenceTags": [
  {
   "text": "This here is a method within the inner class, the non-static one.",
   "name": "Text",
   "kind": "Text"
  }
 ],
 "typeParamTags": [],
 "modifierSpecifier": 1,
 "annotations": [],
 "flatSignature": "()",
 "rawCommentText": " This here is a method within the inner class, the non-static one.\n",
 "inlineTags": [
  {
   "text": "This here is a method within the inner class, the non-static one.",
   "name": "Text",
   "kind": "Text"
  }
 ]
}
{
 "tags": [],
 "throwsTags": [],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.test.DemoJavadoc.NonStaticInnerClass",
 "paramTags": [],
 "containingPackage": {
  "firstSentenceTags": [
   {
    "text": "Javadoc for the package, from package-info.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "name": "com.surfapi.test",
  "metaType": "package"
 },
 "isSynthetic": false,
 "metaType": "constructor",
 "thrownExceptionTypes": [],
 "commentText": "",
 "firstSentenceTags": [],
 "typeParamTags": [],
 "seeTags": [],
 "name": "DemoJavadoc.NonStaticInnerClass",
 "modifierSpecifier": 1,
 "parameters": [],
 "flatSignature": "()",
 "annotations": [],
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "Javadoc for non-static inner class.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.test.DemoJavadoc.NonStaticInnerClass",
  "name": "DemoJavadoc.NonStaticInnerClass",
  "modifiers": "public",
  "metaType": "class"
 },
 "modifiers": "public",
 "thrownExceptions": [],
 "rawCommentText": "",
 "signature": "()",
 "inlineTags": []
}
{
 "methods": [],
 "containingPackage": {
  "firstSentenceTags": [
   {
    "text": "Javadoc for the package, from package-info.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "name": "com.surfapi.test",
  "metaType": "package"
 },
 "wildcardType": null,
 "superclassType": {
  "typeName": "Object",
  "dimension": "",
  "simpleTypeName": "Object",
  "qualifiedTypeName": "java.lang.Object",
  "wildcardType": null,
  "toString": "java.lang.Object",
  "parameterizedType": null
 },
 "commentText": "Javadoc for static inner class.",
 "seeTags": [],
 "name": "DemoJavadoc.StaticInnerClass",
 "qualifiedTypeName": "com.surfapi.test.DemoJavadoc.StaticInnerClass",
 "interfaces": [],
 "modifiers": "public static",
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "A test file used for parsing its javadoc comments.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.test.DemoJavadoc",
  "name": "DemoJavadoc",
  "modifiers": "public abstract",
  "metaType": "class"
 },
 "parameterizedType": null,
 "fields": [],
 "tags": [],
 "typeParameters": [],
 "simpleTypeName": "StaticInnerClass",
 "qualifiedName": "com.surfapi.test.DemoJavadoc.StaticInnerClass",
 "innerClasses": [],
 "constructors": [
  {
   "firstSentenceTags": [],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.test.DemoJavadoc.StaticInnerClass",
   "name": "DemoJavadoc.StaticInnerClass",
   "flatSignature": "()",
   "parameters": [],
   "modifiers": "public",
   "metaType": "constructor",
   "thrownExceptionTypes": []
  }
 ],
 "metaType": "class",
 "typeName": "DemoJavadoc.StaticInnerClass",
 "interfaceTypes": [],
 "firstSentenceTags": [
  {
   "text": "Javadoc for static inner class.",
   "name": "Text",
   "kind": "Text"
  }
 ],
 "dimension": "",
 "typeParamTags": [],
 "superclass": {
  "firstSentenceTags": [],
  "qualifiedName": "java.lang.Object",
  "name": "Object",
  "modifiers": "public",
  "metaType": "class"
 },
 "enumConstants": [],
 "modifierSpecifier": 9,
 "toString": "com.surfapi.test.DemoJavadoc.StaticInnerClass",
 "annotations": [],
 "rawCommentText": " Javadoc for static inner class.\n",
 "inlineTags": [
  {
   "text": "Javadoc for static inner class.",
   "name": "Text",
   "kind": "Text"
  }
 ]
}
{
 "tags": [],
 "throwsTags": [],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.test.DemoJavadoc.StaticInnerClass",
 "paramTags": [],
 "containingPackage": {
  "firstSentenceTags": [
   {
    "text": "Javadoc for the package, from package-info.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "name": "com.surfapi.test",
  "metaType": "package"
 },
 "isSynthetic": false,
 "metaType": "constructor",
 "thrownExceptionTypes": [],
 "commentText": "",
 "firstSentenceTags": [],
 "typeParamTags": [],
 "seeTags": [],
 "name": "DemoJavadoc.StaticInnerClass",
 "modifierSpecifier": 1,
 "parameters": [],
 "flatSignature": "()",
 "annotations": [],
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "Javadoc for static inner class.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.test.DemoJavadoc.StaticInnerClass",
  "name": "DemoJavadoc.StaticInnerClass",
  "modifiers": "public static",
  "metaType": "class"
 },
 "modifiers": "public",
 "thrownExceptions": [],
 "rawCommentText": "",
 "signature": "()",
 "inlineTags": []
}
{
 "methods": [],
 "containingPackage": {
  "firstSentenceTags": [
   {
    "text": "Javadoc for the package, from package-info.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "name": "com.surfapi.test",
  "metaType": "package"
 },
 "wildcardType": null,
 "superclassType": {
  "typeName": "Exception",
  "dimension": "",
  "simpleTypeName": "Exception",
  "qualifiedTypeName": "java.lang.Exception",
  "wildcardType": null,
  "toString": "java.lang.Exception",
  "parameterizedType": null
 },
 "commentText": "A demo exception class.",
 "seeTags": [],
 "name": "DemoJavadocException",
 "qualifiedTypeName": "com.surfapi.test.DemoJavadocException",
 "interfaces": [],
 "modifiers": "public",
 "containingClass": null,
 "parameterizedType": null,
 "fields": [],
 "tags": [],
 "typeParameters": [],
 "simpleTypeName": "DemoJavadocException",
 "qualifiedName": "com.surfapi.test.DemoJavadocException",
 "innerClasses": [],
 "constructors": [
  {
   "firstSentenceTags": [],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.test.DemoJavadocException",
   "name": "DemoJavadocException",
   "flatSignature": "()",
   "parameters": [],
   "modifiers": "public",
   "metaType": "constructor",
   "thrownExceptionTypes": []
  }
 ],
 "metaType": "class",
 "typeName": "DemoJavadocException",
 "interfaceTypes": [],
 "firstSentenceTags": [
  {
   "text": "A demo exception class.",
   "name": "Text",
   "kind": "Text"
  }
 ],
 "dimension": "",
 "typeParamTags": [],
 "superclass": {
  "firstSentenceTags": [],
  "qualifiedName": "java.lang.Exception",
  "name": "Exception",
  "modifiers": "public",
  "metaType": "class"
 },
 "enumConstants": [],
 "modifierSpecifier": 1,
 "toString": "com.surfapi.test.DemoJavadocException",
 "annotations": [],
 "rawCommentText": " A demo exception class.\n",
 "inlineTags": [
  {
   "text": "A demo exception class.",
   "name": "Text",
   "kind": "Text"
  }
 ]
}
{
 "tags": [],
 "throwsTags": [],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.test.DemoJavadocException",
 "paramTags": [],
 "containingPackage": {
  "firstSentenceTags": [
   {
    "text": "Javadoc for the package, from package-info.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "name": "com.surfapi.test",
  "metaType": "package"
 },
 "isSynthetic": false,
 "metaType": "constructor",
 "thrownExceptionTypes": [],
 "commentText": "",
 "firstSentenceTags": [],
 "typeParamTags": [],
 "seeTags": [],
 "name": "DemoJavadocException",
 "modifierSpecifier": 1,
 "parameters": [],
 "flatSignature": "()",
 "annotations": [],
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "A demo exception class.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.test.DemoJavadocException",
  "name": "DemoJavadocException",
  "modifiers": "public",
  "metaType": "class"
 },
 "modifiers": "public",
 "thrownExceptions": [],
 "rawCommentText": "",
 "signature": "()",
 "inlineTags": []
}
{
 "methods": [
  {
   "firstSentenceTags": [
    {
     "text": "Overridden method.",
     "name": "Text",
     "kind": "Text"
    }
   ],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.test.DemoJavadocSubClass.someAbstractMethod",
   "name": "someAbstractMethod",
   "flatSignature": "(String[])",
   "parameters": [
    {
     "name": "strs",
     "type": {
      "typeName": "String",
      "dimension": "[]",
      "simpleTypeName": "String",
      "qualifiedTypeName": "java.lang.String",
      "wildcardType": null,
      "toString": "java.lang.String[]",
      "parameterizedType": null
     }
    }
   ],
   "modifiers": "public",
   "returnType": {
    "typeName": "void",
    "dimension": "",
    "simpleTypeName": "void",
    "qualifiedTypeName": "void",
    "wildcardType": null,
    "toString": "void",
    "parameterizedType": null
   },
   "metaType": "method",
   "thrownExceptionTypes": []
  },
  {
   "firstSentenceTags": [],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.test.DemoJavadocSubClass.parse",
   "name": "parse",
   "flatSignature": "(URL, List<List>)",
   "parameters": [
    {
     "name": "url",
     "type": {
      "typeName": "URL",
      "dimension": "",
      "simpleTypeName": "URL",
      "qualifiedTypeName": "java.net.URL",
      "wildcardType": null,
      "toString": "java.net.URL",
      "parameterizedType": null
     }
    },
    {
     "name": "y",
     "type": {
      "typeName": "List",
      "dimension": "",
      "simpleTypeName": "List",
      "qualifiedTypeName": "java.util.List",
      "wildcardType": null,
      "toString": "java.util.List<java.util.List>",
      "parameterizedType": {
       "typeArguments": [
        {
         "typeName": "List",
         "dimension": "",
         "simpleTypeName": "List",
         "qualifiedTypeName": "java.util.List",
         "wildcardType": null,
         "toString": "java.util.List",
         "parameterizedType": {
          "typeArguments": []
         }
        }
       ]
      }
     }
    }
   ],
   "modifiers": "public",
   "returnType": {
    "typeName": "InputStream",
    "dimension": "",
    "simpleTypeName": "InputStream",
    "qualifiedTypeName": "java.io.InputStream",
    "wildcardType": null,
    "toString": "java.io.InputStream",
    "parameterizedType": null
   },
   "metaType": "method",
   "thrownExceptionTypes": [
    {
     "typeName": "IOException",
     "dimension": "",
     "simpleTypeName": "IOException",
     "qualifiedTypeName": "java.io.IOException",
     "wildcardType": null,
     "toString": "java.io.IOException",
     "parameterizedType": null
    },
    {
     "typeName": "IllegalArgumentException",
     "dimension": "",
     "simpleTypeName": "IllegalArgumentException",
     "qualifiedTypeName": "java.lang.IllegalArgumentException",
     "wildcardType": null,
     "toString": "java.lang.IllegalArgumentException",
     "parameterizedType": null
    }
   ]
  },
  {
   "firstSentenceTags": [
    {
     "text": "This method has an inheritDoc tag, right here: ",
     "name": "Text",
     "kind": "Text"
    },
    {
     "text": "",
     "name": "@inheritDoc",
     "kind": "@inheritDoc"
    }
   ],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.test.DemoJavadocSubClass.call",
   "name": "call",
   "flatSignature": "()",
   "parameters": [],
   "modifiers": "public",
   "returnType": {
    "typeName": "String",
    "dimension": "",
    "simpleTypeName": "String",
    "qualifiedTypeName": "java.lang.String",
    "wildcardType": null,
    "toString": "java.lang.String",
    "parameterizedType": null
   },
   "metaType": "method",
   "thrownExceptionTypes": [
    {
     "typeName": "Exception",
     "dimension": "",
     "simpleTypeName": "Exception",
     "qualifiedTypeName": "java.lang.Exception",
     "wildcardType": null,
     "toString": "java.lang.Exception",
     "parameterizedType": null
    }
   ]
  },
  {
   "firstSentenceTags": [
    {
     "text": "",
     "name": "Text",
     "kind": "Text"
    },
    {
     "text": "",
     "name": "@inheritDoc",
     "kind": "@inheritDoc"
    }
   ],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.test.DemoJavadocSubClass.interfaceMethod",
   "name": "interfaceMethod",
   "flatSignature": "(String)",
   "parameters": [
    {
     "name": "parm1",
     "type": {
      "typeName": "String",
      "dimension": "",
      "simpleTypeName": "String",
      "qualifiedTypeName": "java.lang.String",
      "wildcardType": null,
      "toString": "java.lang.String",
      "parameterizedType": null
     }
    }
   ],
   "modifiers": "public",
   "returnType": {
    "typeName": "void",
    "dimension": "",
    "simpleTypeName": "void",
    "qualifiedTypeName": "void",
    "wildcardType": null,
    "toString": "void",
    "parameterizedType": null
   },
   "metaType": "method",
   "thrownExceptionTypes": []
  }
 ],
 "containingPackage": {
  "firstSentenceTags": [
   {
    "text": "Javadoc for the package, from package-info.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "name": "com.surfapi.test",
  "metaType": "package"
 },
 "wildcardType": null,
 "superclassType": {
  "typeName": "DemoJavadoc",
  "dimension": "",
  "simpleTypeName": "DemoJavadoc",
  "qualifiedTypeName": "com.surfapi.test.DemoJavadoc",
  "wildcardType": null,
  "toString": "com.surfapi.test.DemoJavadoc<java.util.List>",
  "parameterizedType": {
   "typeArguments": [
    {
     "typeName": "List",
     "dimension": "",
     "simpleTypeName": "List",
     "qualifiedTypeName": "java.util.List",
     "wildcardType": null,
     "toString": "java.util.List",
     "parameterizedType": {
      "typeArguments": []
     }
    }
   ]
  }
 },
 "commentText": "Try inheriting doc here: {@inheritDoc}",
 "seeTags": [],
 "name": "DemoJavadocSubClass",
 "qualifiedTypeName": "com.surfapi.test.DemoJavadocSubClass",
 "interfaces": [],
 "modifiers": "public",
 "containingClass": null,
 "parameterizedType": null,
 "fields": [],
 "tags": [],
 "typeParameters": [],
 "simpleTypeName": "DemoJavadocSubClass",
 "qualifiedName": "com.surfapi.test.DemoJavadocSubClass",
 "innerClasses": [],
 "constructors": [
  {
   "firstSentenceTags": [],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.test.DemoJavadocSubClass",
   "name": "DemoJavadocSubClass",
   "flatSignature": "()",
   "parameters": [],
   "modifiers": "public",
   "metaType": "constructor",
   "thrownExceptionTypes": []
  }
 ],
 "metaType": "class",
 "typeName": "DemoJavadocSubClass",
 "interfaceTypes": [],
 "firstSentenceTags": [
  {
   "text": "Try inheriting doc here: ",
   "name": "Text",
   "kind": "Text"
  },
  {
   "text": "",
   "name": "@inheritDoc",
   "kind": "@inheritDoc"
  }
 ],
 "dimension": "",
 "typeParamTags": [],
 "superclass": {
  "firstSentenceTags": [
   {
    "text": "A test file used for parsing its javadoc comments.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.test.DemoJavadoc",
  "name": "DemoJavadoc",
  "modifiers": "public abstract",
  "metaType": "class"
 },
 "enumConstants": [],
 "modifierSpecifier": 1,
 "toString": "com.surfapi.test.DemoJavadocSubClass",
 "annotations": [],
 "rawCommentText": " Try inheriting doc here: {@inheritDoc}\n",
 "inlineTags": [
  {
   "text": "Try inheriting doc here: ",
   "name": "Text",
   "kind": "Text"
  },
  {
   "text": "",
   "name": "@inheritDoc",
   "kind": "@inheritDoc"
  }
 ]
}
{
 "throwsTags": [],
 "containingPackage": {
  "firstSentenceTags": [
   {
    "text": "Javadoc for the package, from package-info.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "name": "com.surfapi.test",
  "metaType": "package"
 },
 "isSynthetic": false,
 "commentText": "Overridden method.",
 "seeTags": [],
 "name": "someAbstractMethod",
 "parameters": [
  {
   "typeName": "java.lang.String[]",
   "name": "strs",
   "toString": "java.lang.String[] strs",
   "annotations": [],
   "type": {
    "typeName": "String",
    "dimension": "[]",
    "simpleTypeName": "String",
    "qualifiedTypeName": "java.lang.String",
    "wildcardType": null,
    "toString": "java.lang.String[]",
    "parameterizedType": null
   }
  }
 ],
 "modifiers": "public",
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "Try inheriting doc here: ",
    "name": "Text",
    "kind": "Text"
   },
   {
    "text": "",
    "name": "@inheritDoc",
    "kind": "@inheritDoc"
   }
  ],
  "qualifiedName": "com.surfapi.test.DemoJavadocSubClass",
  "name": "DemoJavadocSubClass",
  "modifiers": "public",
  "metaType": "class"
 },
 "thrownExceptions": [],
 "signature": "(java.lang.String[])",
 "tags": [],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.test.DemoJavadocSubClass.someAbstractMethod",
 "paramTags": [],
 "returnType": {
  "typeName": "void",
  "dimension": "",
  "simpleTypeName": "void",
  "qualifiedTypeName": "void",
  "wildcardType": null,
  "toString": "void",
  "parameterizedType": null
 },
 "metaType": "method",
 "thrownExceptionTypes": [],
 "firstSentenceTags": [
  {
   "text": "Overridden method.",
   "name": "Text",
   "kind": "Text"
  }
 ],
 "typeParamTags": [],
 "modifierSpecifier": 1,
 "annotations": [
  {
   "elementValues": [],
   "annotationType": {
    "firstSentenceTags": [],
    "qualifiedName": "java.lang.Override",
    "name": "Override",
    "modifiers": "public interface",
    "metaType": "annotationType"
   }
  }
 ],
 "flatSignature": "(String[])",
 "rawCommentText": " Overridden method.\n",
 "inlineTags": [
  {
   "text": "Overridden method.",
   "name": "Text",
   "kind": "Text"
  }
 ]
}
{
 "throwsTags": [],
 "containingPackage": {
  "firstSentenceTags": [
   {
    "text": "Javadoc for the package, from package-info.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "name": "com.surfapi.test",
  "metaType": "package"
 },
 "isSynthetic": false,
 "commentText": "",
 "seeTags": [],
 "name": "parse",
 "parameters": [
  {
   "typeName": "URL",
   "name": "url",
   "toString": "URL url",
   "annotations": [],
   "type": {
    "typeName": "URL",
    "dimension": "",
    "simpleTypeName": "URL",
    "qualifiedTypeName": "java.net.URL",
    "wildcardType": null,
    "toString": "java.net.URL",
    "parameterizedType": null
   }
  },
  {
   "typeName": "java.util.List<java.util.List>",
   "name": "y",
   "toString": "java.util.List<java.util.List> y",
   "annotations": [],
   "type": {
    "typeName": "List",
    "dimension": "",
    "simpleTypeName": "List",
    "qualifiedTypeName": "java.util.List",
    "wildcardType": null,
    "toString": "java.util.List<java.util.List>",
    "parameterizedType": {
     "typeArguments": [
      {
       "typeName": "List",
       "dimension": "",
       "simpleTypeName": "List",
       "qualifiedTypeName": "java.util.List",
       "wildcardType": null,
       "toString": "java.util.List",
       "parameterizedType": {
        "typeArguments": []
       }
      }
     ]
    }
   }
  }
 ],
 "modifiers": "public",
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "Try inheriting doc here: ",
    "name": "Text",
    "kind": "Text"
   },
   {
    "text": "",
    "name": "@inheritDoc",
    "kind": "@inheritDoc"
   }
  ],
  "qualifiedName": "com.surfapi.test.DemoJavadocSubClass",
  "name": "DemoJavadocSubClass",
  "modifiers": "public",
  "metaType": "class"
 },
 "thrownExceptions": [
  {
   "firstSentenceTags": [],
   "qualifiedName": "java.io.IOException",
   "name": "IOException",
   "modifiers": "public",
   "metaType": "class"
  },
  {
   "firstSentenceTags": [],
   "qualifiedName": "java.lang.IllegalArgumentException",
   "name": "IllegalArgumentException",
   "modifiers": "public",
   "metaType": "class"
  }
 ],
 "signature": "(java.net.URL, java.util.List<java.util.List>)",
 "tags": [],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.test.DemoJavadocSubClass.parse",
 "paramTags": [],
 "returnType": {
  "typeName": "InputStream",
  "dimension": "",
  "simpleTypeName": "InputStream",
  "qualifiedTypeName": "java.io.InputStream",
  "wildcardType": null,
  "toString": "java.io.InputStream",
  "parameterizedType": null
 },
 "metaType": "method",
 "thrownExceptionTypes": [
  {
   "typeName": "IOException",
   "dimension": "",
   "simpleTypeName": "IOException",
   "qualifiedTypeName": "java.io.IOException",
   "wildcardType": null,
   "toString": "java.io.IOException",
   "parameterizedType": null
  },
  {
   "typeName": "IllegalArgumentException",
   "dimension": "",
   "simpleTypeName": "IllegalArgumentException",
   "qualifiedTypeName": "java.lang.IllegalArgumentException",
   "wildcardType": null,
   "toString": "java.lang.IllegalArgumentException",
   "parameterizedType": null
  }
 ],
 "firstSentenceTags": [],
 "typeParamTags": [],
 "modifierSpecifier": 1,
 "annotations": [
  {
   "elementValues": [],
   "annotationType": {
    "firstSentenceTags": [],
    "qualifiedName": "java.lang.Override",
    "name": "Override",
    "modifiers": "public interface",
    "metaType": "annotationType"
   }
  }
 ],
 "flatSignature": "(URL, List<List>)",
 "rawCommentText": "",
 "inlineTags": []
}
{
 "throwsTags": [],
 "containingPackage": {
  "firstSentenceTags": [
   {
    "text": "Javadoc for the package, from package-info.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "name": "com.surfapi.test",
  "metaType": "package"
 },
 "isSynthetic": false,
 "commentText": "This method has an inheritDoc tag, right here: {@inheritDoc}",
 "seeTags": [],
 "name": "call",
 "parameters": [],
 "modifiers": "public",
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "Try inheriting doc here: ",
    "name": "Text",
    "kind": "Text"
   },
   {
    "text": "",
    "name": "@inheritDoc",
    "kind": "@inheritDoc"
   }
  ],
  "qualifiedName": "com.surfapi.test.DemoJavadocSubClass",
  "name": "DemoJavadocSubClass",
  "modifiers": "public",
  "metaType": "class"
 },
 "thrownExceptions": [
  {
   "firstSentenceTags": [],
   "qualifiedName": "java.lang.Exception",
   "name": "Exception",
   "modifiers": "public",
   "metaType": "class"
  }
 ],
 "signature": "()",
 "tags": [],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.test.DemoJavadocSubClass.call",
 "paramTags": [],
 "returnType": {
  "typeName": "String",
  "dimension": "",
  "simpleTypeName": "String",
  "qualifiedTypeName": "java.lang.String",
  "wildcardType": null,
  "toString": "java.lang.String",
  "parameterizedType": null
 },
 "metaType": "method",
 "thrownExceptionTypes": [
  {
   "typeName": "Exception",
   "dimension": "",
   "simpleTypeName": "Exception",
   "qualifiedTypeName": "java.lang.Exception",
   "wildcardType": null,
   "toString": "java.lang.Exception",
   "parameterizedType": null
  }
 ],
 "firstSentenceTags": [
  {
   "text": "This method has an inheritDoc tag, right here: ",
   "name": "Text",
   "kind": "Text"
  },
  {
   "text": "",
   "name": "@inheritDoc",
   "kind": "@inheritDoc"
  }
 ],
 "typeParamTags": [],
 "modifierSpecifier": 1,
 "annotations": [
  {
   "elementValues": [],
   "annotationType": {
    "firstSentenceTags": [],
    "qualifiedName": "java.lang.Override",
    "name": "Override",
    "modifiers": "public interface",
    "metaType": "annotationType"
   }
  }
 ],
 "flatSignature": "()",
 "rawCommentText": " This method has an inheritDoc tag, right here: {@inheritDoc}\n",
 "inlineTags": [
  {
   "text": "This method has an inheritDoc tag, right here: ",
   "name": "Text",
   "kind": "Text"
  },
  {
   "text": "",
   "name": "@inheritDoc",
   "kind": "@inheritDoc"
  }
 ]
}
{
 "throwsTags": [],
 "containingPackage": {
  "firstSentenceTags": [
   {
    "text": "Javadoc for the package, from package-info.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "name": "com.surfapi.test",
  "metaType": "package"
 },
 "isSynthetic": false,
 "commentText": "{@inheritDoc}",
 "seeTags": [],
 "name": "interfaceMethod",
 "parameters": [
  {
   "typeName": "String",
   "name": "parm1",
   "toString": "String parm1",
   "annotations": [],
   "type": {
    "typeName": "String",
    "dimension": "",
    "simpleTypeName": "String",
    "qualifiedTypeName": "java.lang.String",
    "wildcardType": null,
    "toString": "java.lang.String",
    "parameterizedType": null
   }
  }
 ],
 "modifiers": "public",
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "Try inheriting doc here: ",
    "name": "Text",
    "kind": "Text"
   },
   {
    "text": "",
    "name": "@inheritDoc",
    "kind": "@inheritDoc"
   }
  ],
  "qualifiedName": "com.surfapi.test.DemoJavadocSubClass",
  "name": "DemoJavadocSubClass",
  "modifiers": "public",
  "metaType": "class"
 },
 "thrownExceptions": [],
 "signature": "(java.lang.String)",
 "tags": [],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.test.DemoJavadocSubClass.interfaceMethod",
 "paramTags": [],
 "returnType": {
  "typeName": "void",
  "dimension": "",
  "simpleTypeName": "void",
  "qualifiedTypeName": "void",
  "wildcardType": null,
  "toString": "void",
  "parameterizedType": null
 },
 "metaType": "method",
 "thrownExceptionTypes": [],
 "firstSentenceTags": [
  {
   "text": "",
   "name": "Text",
   "kind": "Text"
  },
  {
   "text": "",
   "name": "@inheritDoc",
   "kind": "@inheritDoc"
  }
 ],
 "typeParamTags": [],
 "modifierSpecifier": 1,
 "annotations": [
  {
   "elementValues": [],
   "annotationType": {
    "firstSentenceTags": [],
    "qualifiedName": "java.lang.Override",
    "name": "Override",
    "modifiers": "public interface",
    "metaType": "annotationType"
   }
  }
 ],
 "flatSignature": "(String)",
 "rawCommentText": " {@inheritDoc}\n",
 "inlineTags": [
  {
   "text": "",
   "name": "Text",
   "kind": "Text"
  },
  {
   "text": "",
   "name": "@inheritDoc",
   "kind": "@inheritDoc"
  }
 ]
}
{
 "tags": [],
 "throwsTags": [],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.test.DemoJavadocSubClass",
 "paramTags": [],
 "containingPackage": {
  "firstSentenceTags": [
   {
    "text": "Javadoc for the package, from package-info.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "name": "com.surfapi.test",
  "metaType": "package"
 },
 "isSynthetic": false,
 "metaType": "constructor",
 "thrownExceptionTypes": [],
 "commentText": "",
 "firstSentenceTags": [],
 "typeParamTags": [],
 "seeTags": [],
 "name": "DemoJavadocSubClass",
 "modifierSpecifier": 1,
 "parameters": [],
 "flatSignature": "()",
 "annotations": [],
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "Try inheriting doc here: ",
    "name": "Text",
    "kind": "Text"
   },
   {
    "text": "",
    "name": "@inheritDoc",
    "kind": "@inheritDoc"
   }
  ],
  "qualifiedName": "com.surfapi.test.DemoJavadocSubClass",
  "name": "DemoJavadocSubClass",
  "modifiers": "public",
  "metaType": "class"
 },
 "modifiers": "public",
 "thrownExceptions": [],
 "rawCommentText": "",
 "signature": "()",
 "inlineTags": []
}
{
 "methods": [],
 "containingPackage": {
  "firstSentenceTags": [
   {
    "text": "Javadoc for the package, from package-info.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "name": "com.surfapi.test",
  "metaType": "package"
 },
 "wildcardType": null,
 "superclassType": {
  "typeName": "DemoJavadocSubClass",
  "dimension": "",
  "simpleTypeName": "DemoJavadocSubClass",
  "qualifiedTypeName": "com.surfapi.test.DemoJavadocSubClass",
  "wildcardType": null,
  "toString": "com.surfapi.test.DemoJavadocSubClass",
  "parameterizedType": null
 },
 "commentText": "Subclass of subclass of DemoJavadoc\n \n Inherits all methods.",
 "seeTags": [],
 "name": "DemoJavadocSubClass2",
 "qualifiedTypeName": "com.surfapi.test.DemoJavadocSubClass2",
 "interfaces": [],
 "modifiers": "public",
 "containingClass": null,
 "parameterizedType": null,
 "fields": [],
 "tags": [],
 "typeParameters": [],
 "simpleTypeName": "DemoJavadocSubClass2",
 "qualifiedName": "com.surfapi.test.DemoJavadocSubClass2",
 "innerClasses": [],
 "constructors": [
  {
   "firstSentenceTags": [],
   "typeParameters": [],
   "qualifiedName": "com.surfapi.test.DemoJavadocSubClass2",
   "name": "DemoJavadocSubClass2",
   "flatSignature": "()",
   "parameters": [],
   "modifiers": "public",
   "metaType": "constructor",
   "thrownExceptionTypes": []
  }
 ],
 "metaType": "class",
 "typeName": "DemoJavadocSubClass2",
 "interfaceTypes": [],
 "firstSentenceTags": [
  {
   "text": "Subclass of subclass of DemoJavadoc\n \n Inherits all methods.",
   "name": "Text",
   "kind": "Text"
  }
 ],
 "dimension": "",
 "typeParamTags": [],
 "superclass": {
  "firstSentenceTags": [
   {
    "text": "Try inheriting doc here: ",
    "name": "Text",
    "kind": "Text"
   },
   {
    "text": "",
    "name": "@inheritDoc",
    "kind": "@inheritDoc"
   }
  ],
  "qualifiedName": "com.surfapi.test.DemoJavadocSubClass",
  "name": "DemoJavadocSubClass",
  "modifiers": "public",
  "metaType": "class"
 },
 "enumConstants": [],
 "modifierSpecifier": 1,
 "toString": "com.surfapi.test.DemoJavadocSubClass2",
 "annotations": [],
 "rawCommentText": " Subclass of subclass of DemoJavadoc\n \n Inherits all methods.\n",
 "inlineTags": [
  {
   "text": "Subclass of subclass of DemoJavadoc\n \n Inherits all methods.",
   "name": "Text",
   "kind": "Text"
  }
 ]
}
{
 "tags": [],
 "throwsTags": [],
 "typeParameters": [],
 "qualifiedName": "com.surfapi.test.DemoJavadocSubClass2",
 "paramTags": [],
 "containingPackage": {
  "firstSentenceTags": [
   {
    "text": "Javadoc for the package, from package-info.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "name": "com.surfapi.test",
  "metaType": "package"
 },
 "isSynthetic": false,
 "metaType": "constructor",
 "thrownExceptionTypes": [],
 "commentText": "",
 "firstSentenceTags": [],
 "typeParamTags": [],
 "seeTags": [],
 "name": "DemoJavadocSubClass2",
 "modifierSpecifier": 1,
 "parameters": [],
 "flatSignature": "()",
 "annotations": [],
 "containingClass": {
  "firstSentenceTags": [
   {
    "text": "Subclass of subclass of DemoJavadoc\n \n Inherits all methods.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "qualifiedName": "com.surfapi.test.DemoJavadocSubClass2",
  "name": "DemoJavadocSubClass2",
  "modifiers": "public",
  "metaType": "class"
 },
 "modifiers": "public",
 "thrownExceptions": [],
 "rawCommentText": "",
 "signature": "()",
 "inlineTags": []
}
{
 "tags": [
  {
   "text": "Rob Alderman",
   "name": "@author",
   "kind": "@author"
  },
  {
   "text": "1.x",
   "name": "@since",
   "kind": "@since"
  }
 ],
 "annotationTypes": [
  {
   "firstSentenceTags": [
    {
     "text": "DemoAnnotation is a custom annotation type.",
     "name": "Text",
     "kind": "Text"
    }
   ],
   "qualifiedName": "com.surfapi.test.DemoAnnotation",
   "name": "DemoAnnotation",
   "modifiers": "public interface",
   "metaType": "annotationType"
  }
 ],
 "ordinaryClasses": [
  {
   "firstSentenceTags": [
    {
     "text": "Subclass of subclass of DemoJavadoc\n \n Inherits all methods.",
     "name": "Text",
     "kind": "Text"
    }
   ],
   "qualifiedName": "com.surfapi.test.DemoJavadocSubClass2",
   "name": "DemoJavadocSubClass2",
   "modifiers": "public",
   "metaType": "class"
  },
  {
   "firstSentenceTags": [
    {
     "text": "Try inheriting doc here: ",
     "name": "Text",
     "kind": "Text"
    },
    {
     "text": "",
     "name": "@inheritDoc",
     "kind": "@inheritDoc"
    }
   ],
   "qualifiedName": "com.surfapi.test.DemoJavadocSubClass",
   "name": "DemoJavadocSubClass",
   "modifiers": "public",
   "metaType": "class"
  },
  {
   "firstSentenceTags": [
    {
     "text": "A test file used for parsing its javadoc comments.",
     "name": "Text",
     "kind": "Text"
    }
   ],
   "qualifiedName": "com.surfapi.test.DemoJavadoc",
   "name": "DemoJavadoc",
   "modifiers": "public abstract",
   "metaType": "class"
  },
  {
   "firstSentenceTags": [
    {
     "text": "Javadoc for non-static inner class.",
     "name": "Text",
     "kind": "Text"
    }
   ],
   "qualifiedName": "com.surfapi.test.DemoJavadoc.NonStaticInnerClass",
   "name": "DemoJavadoc.NonStaticInnerClass",
   "modifiers": "public",
   "metaType": "class"
  },
  {
   "firstSentenceTags": [
    {
     "text": "Javadoc for static inner class.",
     "name": "Text",
     "kind": "Text"
    }
   ],
   "qualifiedName": "com.surfapi.test.DemoJavadoc.StaticInnerClass",
   "name": "DemoJavadoc.StaticInnerClass",
   "modifiers": "public static",
   "metaType": "class"
  }
 ],
 "metaType": "package",
 "enums": [],
 "exceptions": [
  {
   "firstSentenceTags": [
    {
     "text": "A demo exception class.",
     "name": "Text",
     "kind": "Text"
    }
   ],
   "qualifiedName": "com.surfapi.test.DemoJavadocException",
   "name": "DemoJavadocException",
   "modifiers": "public",
   "metaType": "class"
  }
 ],
 "commentText": "Javadoc for the package, from package-info.",
 "firstSentenceTags": [
  {
   "text": "Javadoc for the package, from package-info.",
   "name": "Text",
   "kind": "Text"
  }
 ],
 "errors": [],
 "seeTags": [],
 "name": "com.surfapi.test",
 "interfaces": [
  {
   "firstSentenceTags": [
    {
     "text": "A simple interface for testing.",
     "name": "Text",
     "kind": "Text"
    }
   ],
   "qualifiedName": "com.surfapi.test.DemoInterface",
   "name": "DemoInterface",
   "modifiers": "public interface",
   "metaType": "interface"
  }
 ],
 "annotations": [],
 "rawCommentText": "\n Javadoc for the package, from package-info.\n\n @author Rob Alderman\n @since 1.x\n",
 "inlineTags": [
  {
   "text": "Javadoc for the package, from package-info.",
   "name": "Text",
   "kind": "Text"
  }
 ]
}

]